{"version":3,"sources":["tempData/album2.jpg","tempData/album3.jpg","tempData/default.mp3","serviceWorker.js","components/ProfilePlaylistCard.js","apis/UserAPI.js","components/HomePage/HomeScreen.js","components/FriendPage/FriendCard.js","components/FriendPage/FriendRequestCard.js","components/FriendPage/FriendScreen.js","components/FriendPage/ChatScreen.js","components/PlaylistPage/EditNamePopup.js","components/PlaylistPage/PlaylistCard.js","components/PlaylistPage/PlaylistsScreen.js","components/NavigationBar.js","components/AudioPlayerBar.js","components/PlaylistPage/CreateNewList.js","components/PlaylistPage/PlaylistSongCard.js","components/PlaylistPage/SongTitleCard.js","components/PlaylistPage/DisplayPlaylist.js","components/QueuePage/QueueSongCard.js","components/QueuePage/SongTitleCard.js","components/QueuePage/QueueScreen.js","components/LikedSongsScreen.js","components/SearchPage/SongCard.js","components/SearchPage/SongTitleCard.js","components/SearchPage/UserCard.js","components/SearchPage/PlaylistCard.js","components/SearchPage/UserTitleCard.js","components/SearchPage/PlaylistTitleCard.js","components/SearchPage/SearchScreen.js","components/ProfileScreen.js","components/SignInScreen.js","components/SignUpScreen.js","components/ForgetPasswordScreen.js","components/VerificationScreen.js","components/ChangePasswordScreen.js","components/EmailSentScreen.js","components/FriendPage/FriendRequestsScreen.js","components/ErrorScreen.js","components/Banner.js","components/SongDetailPage/SongCard.js","components/SongDetailPage/SongTitleCard.js","components/SongDetailPage/SongDetailScreen.js","app.js","index.js","tempData/default_image.png","config.js","tempData/AbbeyRoad.jpg"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","ProfilePlaylistCard","playlist","this","props","react_default","a","createElement","react_router_dom","to","_id","style","color","className","src","default_image","width","height","alt","musicListName","Component","axios","create","baseURL","url","server","HomeScreen","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getPublicPlaylists","asyncToGenerator","regenerator_default","mark","_callee","playlists_response","publicPlaylists","wrap","_context","prev","next","UserAPI","get","sent","data","status","playlists","setState","t0","console","log","stop","state","playlist_cards","map","index","key","components_ProfilePlaylistCard","Carousel","Item","image2","Caption","Image","image3","FriendCard","updateNowPlaying","_ref","now_playing_ID","song_response","now_playing","music","musicName","_x","apply","arguments","user","nowListening","nextProps","username","nickName","user_icon","container_style","now_playing_card","isOffline","esm","Provider","value","size","index_esm","Container","Row","border","padding","borderRadius","Col","xs","FriendRequestCard","onAcceptClick","target_userID","selfID","response","childSetFriendsAndRequest","localStorage","getItem","post","userID","onDeclineClick","_callee2","_context2","Button","onClick","FriendScreen","getFriendsAndRequests","getUser","id","friends_IDs","friends","i","user_response","friendRequests_IDs","friendRequests","_i","_user_response","length","push","Array","from","online_users","updateOnlineFriends","isLoaded","online_users_ids","user_id","online_friends","offline_friends","includes","onAccordionClick","accordion1","document","getElementById","classList","toggle","panel","display","bind","assertThisInitialized","_this2","online_friend_cards","offline_friend_cards","friend_cards","friend_request_cards","online_num","online_title","FriendPage_FriendCard","offline_num","offline_title","FriendPage_FriendRequestCard","ChatScreen","handleChange","e","target","objectSpread","defineProperty","loadFriend","friendID","_response","conversation_response","conversation_id","messages","dialog","params","abrupt","friend","isFriend","conv_id","connectToSocket","scrollTop","scrollHeight","onSendClick","message","message_to_send","socket","emit","_callee4","server_url","_context4","io","withCredentials","extraHeaders","my-custom-header","room","on","_ref4","_callee3","_context3","onKeyUp","preventDefault","close","dialog_cards","message_author","substring","indexOf","message_content","dialog_class","verticalAlign","TextField","onChange","placeholder","variant","fontSize","EditNamePopup","handleSubmit","inputName","modalInputName","musicListId","updateMusicList","variables","musicListNewName","isPublic","userId","musicLists","playlistsChangeHandler","handler","handleClose","alert","visibility","show","type","REMOVE_PLAYLIST","gql","_templateObject","EDIT_MUSICLIST","_templateObject2","REMOVE_MUSICLIST","_templateObject3","PlaylistCard","closeModal","onDeleteClick","removePlaylist","removeMusicList","modal","updateModalContentHandler","onDeleteConfirm","playlistId","_x2","_x3","handleEditOnClick","popupDisplay","handleCloseOnClick","playlistID","link","deleteButton","react_apollo_esm","mutation","_ref2","loading","error","_ref3","editButton","ownerId","ai_index_esm","cursor","PlaylistPage_EditNamePopup","PlaylistsScreen_templateObject","PlaylistsScreen_templateObject2","PlaylistsScreen","_React$useState","React","useState","_React$useState2","slicedToArray","setPlaylists","_React$useState3","_React$useState4","filter_criteria","setFilterCriteria","newMusicLists","playlist_response","musicList","useEffect","_fetchData","fetchData","history","playlists_cards","filter","toLowerCase","PlaylistPage_PlaylistCard","owner","ADD_PLAYLIST","NavigationBar_templateObject","NavigationBar","selectButtons","md_index_esm","paddingBottom","addNewPlaylist","openModal","signedOut","cg_index_esm","setMusicListNameHandler","handleCreateNewList","create_response","withRouter","AudioPlayerBar","tick","isPlaying","progress","audioTag","currentTime","onNextSong","queue","found","song","JSON","parse","pause","track_data","URI","isShuffle","Math","floor","random","loadSongAndplay","onPlayClick","onPrevSong","_index","currentIndex","loadQueueIndexAndPlay","getSong_response","updateNowPlaying_response","interval","_interval","toast","musicID","track","preview_url","setInterval","play","default_song","setTimeout","replace","changeVolumn","volume","newValue","handleAudioSlider","clearInterval","onVolumeClick","isMute","muted","onShuffleClick","isLoop","onLoopClick","loop","checkSignIn","track_url","duration","Audio","addEventListener","event","onRef","undefined","play_pause_icon","volume_icon","shuffle_icon","loop_icon","path_to_queue","pathname","zIndex","name","IconButton","aria-label","Slider","aria-labelledby","margin","options","PlaylistSongCard","modal_content","anchorEl","setAnchorEl","setSelectedIndex","addSongToMusicList","songID","musicListID","handleMenuItemClick","mode","contains","musicLists_response","musicListsIDs","musicList_response","reduce","b","setItem","stringify","t1","updatePlaylist","t2","_x4","_x5","minutes","seconds","artist","album","title","drag_icon","reorder_mode","onSongCardClick","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","open","onClose","option","MenuItem","SongTitleCard","onTitleClickHandler","title_ascending","artist_ascending","album_ascending","time_ascending","onArtistClickHandler","onAlbumClickHandler","onTimeClickHandler","style_class","title_arrow","artist_arrow","album_arrow","time_arrow","DisplayPlaylist_templateObject","DisplayPlaylist_templateObject2","DisplayPlaylistScreen","_React$useState5","_React$useState6","setMusicList","_React$useState7","_React$useState8","musics","setMusics","_React$useState9","_React$useState10","setOwner","_React$useState11","_React$useState12","setReOrderMode","_React$useState13","_React$useState14","total_length","setTotalLength","_React$useState15","_React$useState16","setTitleAscending","_React$useState17","_React$useState18","setArtistAscending","_React$useState19","_React$useState20","setAlbumAscending","_React$useState21","_React$useState22","setTimeAscending","_React$useState23","_React$useState24","setModalContent","_React$useState25","_React$useState26","page","setPage","content","loadQueueSongsToAudioPlayerCallBack","loadQueueSongsToAudioPlayer","music_length","owner_response","isOwner","closeMainModal","_x6","_x7","_fetchData2","_callee5","_context5","onSaveClick","_callee6","musicIDs","_context6","reorderButtons","reorder_class","save_class","_ref5","_ref6","updateMainModalContentHandler","songcards","react_reorder_src_default","reorderId","reorderGroup","component","placeholderClassName","draggedClassName","lock","holdTime","onReorder","previousIndex","nextIndex","fromId","toId","reorder","autoScroll","disabled","disableContextMenus","slice","playlist_type","hours","fontWeight","PlaylistPage_SongTitleCard","coeff","sort","music1","music2","toConsumableArray","Pagination","count","parseInt","shape","QueueSongCard","splice","updateMusicsHandler","QueueScreen","setMusicListName","_React$useState27","_React$useState28","musics_new","saveAsMusicListHandler","musicsIDs","onSaveQueueClick","musics_IDs","onClearQueueConfirm","new_queue","loadQueueIndexToAudioPlayerCallBack","loadQueueIndexToAudioPlayer","Fragment","QueuePage_SongTitleCard","SongCard","artists","round","duration_ms","musicId","_artist","_album","childSongIdHandler","UserCard","getNickName","UserTitleCard","PlaylistTitleCard","SearchScreen_templateObject","SearchScreen_templateObject2","SearchScreen_templateObject3","SearchScreen","changePageHandler","search_for","search_text","select","results","search_results_mode","search_results","onAddPlaylistClick","addMusicToMusicList","request_musicList","control","songInfo","mus","forEach","initialized","result_title_card","result_cards","SearchPage_SongTitleCard","result","SearchPage_UserTitleCard","SearchPage_UserCard","SearchPage_PlaylistTitleCard","SearchPage_PlaylistCard","NativeSelect","defaultValue","ProfileScreen","getSelf","self","onAddFriendClick","target_user","onRemoveFriendClick","onRemoveFriendConfirm","user_card","friend_btns","SignInScreen","onSubmit","email","password","signedIn","ADD_USER","SignUpScreen_templateObject","SignUpScreen","SignUpScreen_templateObject2","onCompleted","addUser","test","passwordConfirm","userName","verified","ForgetPasswordScreen","VerificationScreen","changepassword","ChangePasswordScreen","newPassword","newPasswordConfirm","EmailSentScreen","ErrorScreen","Banner","nickNameControl","Grid","container","spacing","item","SongDetailScreen","setMusic","loadingFinished","setLoadingFinished","SongCard_SongCard","SongDetailPage_SongTitleCard","App","onModalClose","main_socket","signedUp","href","removeItem","audioPlayer","onScrollButtonClick","scrollTo","body","then","res","borderTop","components_Banner","components_NavigationBar","overflow","overflowX","react_router","exact","path","render","FriendPage_FriendScreen","assign","components_ProfileScreen","isAuthed","SearchPage_SearchScreen","components_SignInScreen","components_SignUpScreen","components_VerificationScreen","backgroundColor","components_AudioPlayerBar","ref","client","ApolloClient","uri","ReactDOM","app","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c3fdc0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/album2.d2a4d59b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/album3.d87defa9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/default.34a8da70.mp3\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Image from '../tempData/AbbeyRoad.jpg'\r\nimport default_image from '../tempData/default_image.png'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ProfilePlaylistCard extends Component {\r\n\r\n    render() {\r\n        var playlist = this.props.playlist\r\n        return (\r\n            <div>\r\n                <Link to={\"/playlist/\"+playlist._id} style={{'color':'#ed4e85'}}>\r\n                    <div className=\"album-card\">\r\n                        <img className=\"playlist-image\" src={default_image} width={150} height={150} alt=\"\"/>\r\n                        <div>{playlist.musicListName}</div>\r\n                    </div>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfilePlaylistCard;\r\n","import axios from \"axios\";\r\nimport { url } from '../config'\r\n\r\nexport default axios.create({\r\n  baseURL: url.server+\"/api\",\r\n});","import React, { Component } from 'react';\r\nimport Carousel from 'react-bootstrap/Carousel'\r\nimport Image from '../../tempData/AbbeyRoad.jpg'\r\nimport image2 from '../../tempData/album2.jpg'\r\nimport image3 from '../../tempData/album3.jpg'\r\nimport default_image from '../../tempData/default_image.png'\r\nimport ProfilePlaylistCard from '../ProfilePlaylistCard';\r\nimport UserAPI from '../../apis/UserAPI';\r\n\r\nclass HomeScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            publicPlaylists: []\r\n        }\r\n    }\r\n\r\n    getPublicPlaylists = async () => {\r\n        try{\r\n            const playlists_response = await UserAPI.get(\"/randomPlaylists\");\r\n            if(playlists_response.data.status === \"success\"){\r\n                var publicPlaylists = playlists_response.data.playlists;\r\n                // console.log(publicPlaylists);\r\n                this.setState({publicPlaylists: publicPlaylists});\r\n            }\r\n        }catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPublicPlaylists();\r\n    }\r\n\r\n    render() {\r\n        var playlist_cards = \"\"\r\n        if(this.state.publicPlaylists){\r\n            playlist_cards = this.state.publicPlaylists.map((playlist, index) => {\r\n                return (<div key={index}>\r\n                <ProfilePlaylistCard className=\"grid-item\" playlist={playlist}></ProfilePlaylistCard>\r\n                </div>\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Carousel>\r\n                    <Carousel.Item>\r\n                        <div className=\"feature-album\">\r\n                            <img\r\n                            className=\"d-block w-100\"\r\n                            src={image2}\r\n                            alt=\"First slide\"\r\n                            \r\n                            />\r\n                        </div>\r\n                        \r\n                        <Carousel.Caption>\r\n                        <h3>First slide label</h3>\r\n                        <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <div className=\"feature-album\">\r\n                            <img\r\n                            className=\"d-block w-100\"\r\n                            src={Image}\r\n                            alt=\"Second slide\"\r\n                            />\r\n                        </div>\r\n\r\n                        <Carousel.Caption>\r\n                        <h3>Second slide label</h3>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n                        <div className=\"feature-album\">\r\n                            <img\r\n                            className=\"d-block w-100\"\r\n                            src={image3}\r\n                            alt=\"Third slide\"\r\n                            />\r\n                        </div>\r\n                        <Carousel.Caption>\r\n                        <h3>Third slide label</h3>\r\n                        <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n                        </Carousel.Caption>\r\n                    </Carousel.Item>\r\n                    </Carousel>\r\n                    <h1>Trending Playlists</h1>\r\n                    <div className=\"border-bottom-accent\"></div>\r\n                    <div className=\"grid-container\">\r\n                        { playlist_cards }\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { BsPersonSquare } from \"react-icons/bs\";\r\nimport { IconContext } from \"react-icons\";\r\nimport UserAPI from '../../apis/UserAPI'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FriendCard extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            now_playing: \"none\",\r\n            now_playing_ID: \"\"\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if(this.props.user.nowListening !== \"none\"){\r\n            this.updateNowPlaying(this.props.user.nowListening);\r\n        }else{\r\n            this.setState({now_playing: 'none'});\r\n        }\r\n        if(this.props.now_playing !== \"none\"){\r\n            this.updateNowPlaying(this.props.now_playing);\r\n        }else{\r\n            this.setState({now_playing: 'none'});\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if(nextProps.user.nowListening !== \"none\"){\r\n            this.updateNowPlaying(nextProps.user.nowListening);\r\n        }else{\r\n            this.setState({now_playing: 'none'});\r\n        }\r\n        if(nextProps.now_playing !== \"none\"){\r\n            this.updateNowPlaying(nextProps.now_playing);\r\n        }else{\r\n            this.setState({now_playing: 'none'});\r\n        }\r\n        // console.log(nextProps.user)\r\n    }\r\n\r\n    updateNowPlaying = async (now_playing_ID) => {\r\n        if(now_playing_ID){\r\n            const song_response = await UserAPI.get(\"/music/\"+now_playing_ID);\r\n            if(song_response.data.status === \"success\"){ // search success\r\n                this.setState({now_playing_ID});\r\n                this.setState({now_playing: song_response.data.music.musicName});\r\n            }else{\r\n                console.log(\"error searching song\");\r\n            }\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        var username = \"\"\r\n        var userID = \"\"\r\n        var now_playing = this.state.now_playing;\r\n        if(this.props.user){\r\n            username = this.props.user.nickName;\r\n            userID = this.props.user._id;\r\n        }\r\n        var user_icon = \"\"\r\n        var container_style = {}\r\n        var now_playing_card = \"\"\r\n        if(this.state.now_playing){\r\n            // console.log('now playing', this.props.now_playing);\r\n            if(now_playing !== \"none\"){\r\n                now_playing_card = <Link to={'/song/'+this.state.now_playing_ID}><h6>Last Playing: {now_playing}</h6></Link>\r\n            }else{\r\n                now_playing_card = <h6>Last Playing: {now_playing}</h6>\r\n            }\r\n            \r\n        }\r\n        if(this.props.isOffline){\r\n            user_icon = <IconContext.Provider value={{ color: \"#ACACAC\", size: '50px' }}>\r\n                <BsPersonSquare/>\r\n            </IconContext.Provider>\r\n            container_style = {'color':'#ACACAC'}\r\n            now_playing_card = <h6 style={{'color':'#ACACAC'}}>Offline</h6>\r\n        }else{\r\n            user_icon = <IconContext.Provider value={{ color: \"#F06E9C\", size: '50px' }}>\r\n                <BsPersonSquare/>\r\n            </IconContext.Provider>\r\n            if(now_playing !== \"none\"){\r\n                now_playing_card = <Link to={'/song/'+this.state.now_playing_ID}><h6>Last Playing: {now_playing}</h6></Link>\r\n            }else{\r\n                now_playing_card = <h6>Last Playing: {now_playing}</h6>\r\n            }\r\n        }\r\n        \r\n        return (\r\n            <div className=\"m-3\" style={container_style}>\r\n                <Container>\r\n                    <Row style={{'border': '3px solid', 'padding': '30px', 'borderRadius': '5px'}}>\r\n                        <Col xs={3} className=\"content-center\">\r\n                            { user_icon }\r\n                        </Col>\r\n                        <Col xs={9}>\r\n                            <h4>{username}</h4>\r\n                            { now_playing_card }\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FriendCard;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { BsPersonSquare } from \"react-icons/bs\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button'\r\nimport UserAPI from \"../../apis/UserAPI\";\r\n\r\nclass FriendRequestCard extends Component {\r\n    onAcceptClick = async () => {\r\n        var target_userID = \"\";\r\n        var selfID = localStorage.getItem('userId');  // self ID\r\n        if(this.props.user){\r\n            target_userID = this.props.user._id;\r\n        }\r\n        if(target_userID && selfID){\r\n            try{\r\n                const response = await UserAPI.post(\"/acceptFriendRequest\", {\r\n                    userID: selfID,\r\n                    target_userID: target_userID\r\n                });\r\n                if(response.data.status === \"success\"){\r\n                    // set parent's state\r\n                    var user = response.data.user;\r\n                    var childSetFriendsAndRequest = this.props.childSetFriendsAndRequest;\r\n                    if(childSetFriendsAndRequest){\r\n                        childSetFriendsAndRequest(user);\r\n                    }\r\n                }\r\n            }catch(err){\r\n                console.log(err);\r\n            }  \r\n        }\r\n    }\r\n\r\n    onDeclineClick = async () => {\r\n        var target_userID = \"\";\r\n        var selfID = localStorage.getItem('userId');  // self ID\r\n        if(this.props.user){\r\n            target_userID = this.props.user._id;\r\n        }\r\n        if(target_userID && selfID){\r\n            try{\r\n                const response = await UserAPI.post(\"/declineFriendRequest\", {\r\n                    userID: selfID,\r\n                    target_userID: target_userID\r\n                });\r\n                if(response.data.status === \"success\"){\r\n                    // set parent's state\r\n                    var user = response.data.user;\r\n                    var childSetFriendsAndRequest = this.props.childSetFriendsAndRequest;\r\n                    if(childSetFriendsAndRequest){\r\n                        childSetFriendsAndRequest(user);\r\n                    }\r\n                }\r\n            }catch(err){\r\n                console.log(err);\r\n            }  \r\n        }\r\n    }\r\n\r\n    render() {\r\n        var username = \"\"\r\n        var userID = \"\"\r\n        if(this.props.user){\r\n            username = this.props.user.nickName;\r\n            userID = this.props.user._id;\r\n        }\r\n        return (\r\n            <div className=\"m-5\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={3} className=\"content-center\">\r\n                        <IconContext.Provider value={{ color: \"#F06E9C\", size: '50px' }}>\r\n                            <BsPersonSquare/>\r\n                        </IconContext.Provider>\r\n                        </Col>\r\n                        <Col xs={9}>\r\n                            <Link to={\"/profile/\"+userID}><h4>{username}</h4></Link>\r\n                            <Button onClick={this.onAcceptClick} className=\"search-btn\">Accept</Button>\r\n                            <Button  onClick={this.onDeclineClick} className=\"search-btn\">Decline</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FriendRequestCard;\r\n","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport FriendCard from './FriendCard.js'\r\nimport { Link } from 'react-router-dom';\r\nimport UserAPI from \"../../apis/UserAPI\";\r\nimport { BsFillCaretDownFill, BsFillCaretUpFill } from \"react-icons/bs\";\r\nimport { IconContext } from \"react-icons\";\r\nimport FriendRequestCard from './FriendRequestCard.js'\r\n\r\nclass FriendScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            friends: [],\r\n            friendRequests: [],\r\n            isLoaded: false,\r\n            user: null,\r\n            online_friends: [],\r\n            offline_friends: []\r\n        }\r\n        this.childSetFriendsAndRequest = this.childSetFriendsAndRequest.bind(this);\r\n    }\r\n\r\n    childSetFriendsAndRequest = (user) => {\r\n        this.setState({user});\r\n        this.getFriendsAndRequests();\r\n    }\r\n\r\n    getUser = async () => {\r\n        var userID = localStorage.getItem('userId');\r\n        if(userID){\r\n            try{\r\n                const response = await UserAPI.post(\"/user\", {\r\n                    id: userID\r\n                });\r\n                if(response.data.status === \"success\"){\r\n                    this.setState({user: response.data.user});\r\n                    this.getFriendsAndRequests();\r\n                }\r\n            }catch(err){\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    getFriendsAndRequests = async () => {\r\n        var user = this.state.user;\r\n        if(user){\r\n            let friends_IDs = user.friends;\r\n            let friends = [];\r\n            for(let i = 0; i < friends_IDs.length; i++){\r\n                const user_response = await UserAPI.post(\"/user\", {\r\n                    id: friends_IDs[i]\r\n                });\r\n                if(user_response.data.status === \"success\"){\r\n                    friends.push(user_response.data.user);\r\n                }\r\n            }\r\n\r\n            let friendRequests_IDs = user.friendRequests;\r\n            let friendRequests = [];\r\n            for(let i = 0; i < friendRequests_IDs.length; i++){\r\n                const user_response = await UserAPI.post(\"/user\", {\r\n                    id: friendRequests_IDs[i]\r\n                });\r\n                if(user_response.data.status === \"success\"){\r\n                    friendRequests.push(user_response.data.user);\r\n                }\r\n            }\r\n            this.setState({friends: Array.from(friends)}, () => {\r\n                if(this.props.online_users && this.props.online_users.length > 0){\r\n                    let online_users = this.props.online_users;\r\n                    this.updateOnlineFriends(online_users);\r\n                }\r\n            });\r\n            this.setState({friendRequests:  Array.from(friendRequests)});\r\n            this.setState({isLoaded: true});\r\n        }\r\n    }\r\n\r\n    updateOnlineFriends = (online_users) =>{\r\n        // console.log('friend screen online users is', online_users);\r\n        \r\n        if(this.state.friends && this.state.friends.length > 0){\r\n\r\n            var online_users_ids = [];\r\n            for(let i = 0; i < online_users.length; i++){  // extract only the user_ids\r\n                if(online_users[i])\r\n                    online_users_ids.push(online_users[i].user_id)\r\n            }\r\n\r\n            var online_friends = [];\r\n            var offline_friends = [];\r\n\r\n            for(let i = 0; i < this.state.friends.length; i++){\r\n                if(this.state.friends[i]){\r\n                    if(online_users_ids.includes(this.state.friends[i]._id)){  // put friends in online_users to online friends\r\n                        online_friends.push(this.state.friends[i]);\r\n                    }else{  // otherwise put to offline friends\r\n                        offline_friends.push(this.state.friends[i]);\r\n                    }\r\n                }\r\n            }\r\n            // console.log(\"online friends\", online_friends);\r\n            // console.log(\"offline friends\", offline_friends);\r\n            this.setState({online_friends});\r\n            this.setState({offline_friends});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUser();\r\n        // console.log(\"props is\", this.props)\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // this.props.onRef(undefined)\r\n    }\r\n\r\n    // if only the props is updated\r\n    componentWillReceiveProps(nextProps) {\r\n        // console.log(\"new props is\", nextProps)\r\n        if(nextProps.online_users && nextProps.online_users.length > 0){\r\n            let online_users = nextProps.online_users;\r\n            this.updateOnlineFriends(online_users);\r\n        }\r\n    }\r\n\r\n    onAccordionClick = () => {\r\n        var accordion1 = document.getElementById(\"accordion1\");\r\n        if(accordion1)\r\n            accordion1.classList.toggle(\"active\");\r\n        var panel = document.getElementById(\"friend_requests_panel\");\r\n        if(panel){\r\n            if (panel.style.display === \"block\") {\r\n                panel.style.display = \"none\";\r\n            } else {\r\n                panel.style.display = \"block\";\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let online_friend_cards = \"\"\r\n        let offline_friend_cards = \"\"\r\n        let friend_cards = \"\"\r\n        let friendRequests = \"\"\r\n        let friend_request_cards = \"\"\r\n        if(this.state.isLoaded){\r\n            if(this.state.friends){\r\n                if(this.state.friends.length === 0){\r\n                    friend_cards = <div>You have no friend yet. Go to search page and search for users.</div>\r\n                }else{\r\n                    var online_num = 0;\r\n                    if(this.state.online_friends){\r\n                        online_num = this.state.online_friends.length;\r\n                    }\r\n                    var online_title = <h2>Online Friends ({online_num})</h2>\r\n                    online_friend_cards = this.state.online_friends.map((user, index) => {\r\n                        return (<div key={index}>\r\n                            <Link to={\"/chat/\"+user._id}>\r\n                                <FriendCard user={user}></FriendCard>\r\n                            </Link>\r\n                        </div>)\r\n                    })\r\n\r\n                    var offline_num = 0;\r\n                    if(this.state.offline_friends){\r\n                        offline_num = this.state.offline_friends.length;\r\n                    }\r\n                    var offline_title = <h2 style={{'color':'#ACACAC'}}>Offline Friends ({offline_num})</h2>\r\n                    offline_friend_cards = this.state.offline_friends.map((user, index) => {\r\n                        return (<div key={index}>\r\n                            <Link to={\"/chat/\"+user._id}>\r\n                                <FriendCard isOffline={true} user={user}></FriendCard>\r\n                            </Link>\r\n                        </div>)\r\n                    })\r\n\r\n                    friend_cards = \r\n                    <div>\r\n                        { online_title }\r\n                        { online_friend_cards }\r\n                        <hr/>\r\n                        { offline_title }\r\n                        { offline_friend_cards }\r\n                    </div>\r\n                }\r\n                \r\n            }\r\n            if(this.state.friendRequests){\r\n                friendRequests = this.state.friendRequests;\r\n                if(friendRequests.length === 0){\r\n                    friend_request_cards = <div>You have no friend requests.</div>\r\n                }else{\r\n                    friend_request_cards = friendRequests.map((user, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <FriendRequestCard\r\n                                childSetFriendsAndRequest={this.childSetFriendsAndRequest}\r\n                                user={user}\r\n                                >\r\n                                </FriendRequestCard>\r\n                            </div>\r\n                        \r\n                        )\r\n                    })\r\n                }\r\n            }\r\n            return (\r\n                <div>\r\n                    <br/>\r\n                    <h1>Friends</h1>\r\n                    <button className=\"accordion\" id=\"accordion1\" onClick={this.onAccordionClick}>\r\n                        <Row>\r\n                            <Col xs={11}>\r\n                                <h4>Friend Requests ({friendRequests.length})</h4>\r\n                            </Col>\r\n                            <Col xs={1}>\r\n                                <IconContext.Provider value={{ color: \"#F06E9C\", size: '30px' }}>\r\n                                    <BsFillCaretDownFill/>\r\n                                </IconContext.Provider>\r\n                            </Col>\r\n                        </Row>\r\n                    </button>\r\n                    <div className=\"panel\" id=\"friend_requests_panel\">\r\n                        {friend_request_cards}\r\n                    </div>\r\n                    <hr></hr>\r\n                    { friend_cards }\r\n                </div>\r\n            );\r\n        }else{\r\n            return (\r\n                <div>\r\n                    Loading...\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default FriendScreen;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport FriendCard from './FriendCard.js'\r\nimport { TextField } from '@material-ui/core';\r\nimport Button from 'react-bootstrap/Button'\r\nimport UserAPI from \"../../apis/UserAPI\";\r\nimport io from \"socket.io-client\";\r\nimport {url} from '../../config'\r\n\r\nclass ChatScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            friend: null,\r\n            isFriend: false,\r\n            conversation_id: \"\",\r\n            messages: [],\r\n            message_to_send: \"\",\r\n            socket: null,\r\n        };\r\n        \r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {target} = e;\r\n    \r\n        this.setState( (state) => ({\r\n            ...state,\r\n            [target.id]: target.value\r\n    \r\n        }));\r\n    }\r\n\r\n    loadFriend = async () => {\r\n        var userID = localStorage.getItem('userId');  // self ID\r\n        var friendID = this.props.match.params.id;\r\n        let friends_IDs = []\r\n        const response = await UserAPI.post(\"/user\", {\r\n            id: userID\r\n        });\r\n        if(response.data.status === \"success\"){\r\n            friends_IDs = response.data.user.friends;\r\n        }\r\n        if(!friends_IDs.includes(friendID)){  // not user's friend\r\n            return;\r\n        }\r\n       \r\n        try{\r\n            const response = await UserAPI.post(\"/user\", {  // get friend's info\r\n                id: friendID\r\n            });\r\n            if(response.data.status === \"success\"){\r\n                this.setState({friend: response.data.user});\r\n                this.setState({isFriend: true});\r\n                const conversation_response = await UserAPI.post(\"/getConversation\", {  // get friend's info\r\n                    userID,\r\n                    friendID\r\n                });\r\n                if(conversation_response.data.status === \"success\"){\r\n                    var conversation_id = conversation_response.data.conv_id;\r\n                    var messages = conversation_response.data.messages;\r\n                    // console.log(conversation_id, messages);\r\n                    this.setState({conversation_id}, () => {\r\n                        this.connectToSocket();  // connect to socket after getting a conversation_id\r\n                    });\r\n                    this.setState({messages});\r\n                    var dialog = document.getElementById('dialog');\r\n                    if(dialog)\r\n                        dialog.scrollTop = dialog.scrollHeight;\r\n                }\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    onSendClick = async () =>{\r\n        var userID = localStorage.getItem('userId');\r\n        var message = this.state.message_to_send;\r\n        var conversation_id = this.state.conversation_id;\r\n        if(message !== \"\"){\r\n            message = userID+\":\"+message\r\n            const response = await UserAPI.post(\"/sendMessage\", {\r\n                conversation_id,\r\n                message\r\n            });\r\n            if(response.data.status === \"success\"){\r\n                var messages = response.data.messages;\r\n                this.setState({messages});\r\n                this.setState({message_to_send:\"\"})\r\n                // emit chat event to socket\r\n                if(this.state.socket){\r\n                    this.state.socket.emit('chat', {\r\n                        conversation_id\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    connectToSocket = async () => {\r\n        if(this.state.socket == null){\r\n            // Make connection\r\n            var server_url = url.server;\r\n            const socket = io(server_url, {\r\n                withCredentials: true,\r\n                extraHeaders: {\r\n                    \"my-custom-header\": \"abcd\"\r\n                }\r\n            });\r\n            this.setState({socket}, ()=>{\r\n                // console.log(this.state.socket);\r\n                // connect to room\r\n                if(this.state.socket && this.state.conversation_id){\r\n                    this.state.socket.emit('joinRoom', {\r\n                        room: this.state.conversation_id\r\n                    });\r\n                }\r\n\r\n                if(this.state.socket && this.state.conversation_id){  \r\n                    this.state.socket.on('chat', async (data) => {  // listen to socket's chat event\r\n                        console.log('from socket:', data);\r\n                        // query database to update messages\r\n                        const response = await UserAPI.post(\"/getMessages\", {\r\n                            conversation_id: data\r\n                        });\r\n                        if(response.data.status === \"success\"){\r\n                            var messages = response.data.messages;\r\n                            this.setState({messages});\r\n                            var dialog = document.getElementById('dialog');\r\n                            if(dialog)\r\n                                dialog.scrollTop = dialog.scrollHeight;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    onKeyUp = (e) => {\r\n        e.preventDefault();\r\n        if(e.key !== \"Enter\") return;\r\n        this.onSendClick();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFriend();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.state.socket)\r\n            this.state.socket.close();\r\n    }\r\n\r\n    render() {\r\n        var friendID = \"\"\r\n        var friend = \"\"\r\n        if(this.state.friend){\r\n            friendID = this.state.friend._id;\r\n            friend = this.state.friend;\r\n        }\r\n        if(!this.state.isFriend){\r\n            return <div>You can't chat with a person that is not your friend.</div>\r\n        }\r\n        var dialog_cards = \"\"\r\n        if(this.state.messages){\r\n            dialog_cards = this.state.messages.map((message, index) => {\r\n                let message_author = message.substring(0, message.indexOf(\":\"));\r\n                let message_content = message.substring(message.indexOf(\":\")+1, message.length);\r\n                var friendID = this.props.match.params.id;\r\n                var dialog_class = \"\"\r\n                if(message_author===friendID){  // from friend\r\n                    dialog_class = \"friend-dialog\"\r\n                }else{\r\n                    dialog_class = \"self-dialog\"\r\n                }\r\n                return (<div key={index}>\r\n                    <div className={dialog_class}>{message_content}</div>\r\n                </div>\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                <Link to={'/profile/' + friendID} key={friendID}>\r\n                    <FriendCard user={friend}/>\r\n                </Link>\r\n                <div className=\"dialog-area\" id=\"dialog\">\r\n                    { dialog_cards }\r\n                    {/* <div className=\"friend-dialog\">Hi How are you</div>\r\n                    <div className=\"self-dialog\">Good</div>\r\n                    <div className=\"self-dialog\">How are you</div>\r\n                    <div className=\"friend-dialog\">Good</div> */}\r\n                </div>\r\n                \r\n                <div className=\"input-message\" id=\"input_area\">\r\n                    <div style={{\"verticalAlign\":\"middle\",\"display\":\"table-cell\"}}>Your Message: </div>\r\n                    <TextField onKeyUp={this.onKeyUp} value={this.state.message_to_send} id=\"message_to_send\" onChange={this.handleChange} style={{\"width\":\"90%\"}} placeholder=\"Aa\" variant=\"outlined\" />\r\n                    <div style={{\"verticalAlign\":\"middle\",\"display\":\"table-cell\"}}>\r\n                        <Button style={{\"fontSize\":\"16px\"}} onClick={this.onSendClick} className=\"nav-btn\">Send</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChatScreen;\r\n","import React,{Component} from \"react\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport { TextField } from '@material-ui/core';\r\nimport UserAPI from \"../../apis/UserAPI\";\r\n\r\nclass EditNamePopup extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            modalInputName: \"\",\r\n        }\r\n    }\r\n    handleChange = (e) => {\r\n        const {target} = e;\r\n    \r\n        this.setState( (state) => ({\r\n            ...state,\r\n            [target.id]: target.value\r\n    \r\n        }));\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let inputName = this.state.modalInputName;\r\n        if(inputName){\r\n            console.log(this.props.musicListId);\r\n            console.log(inputName);\r\n            this.props.updateMusicList({\r\n                variables:{\r\n                    musicListId: this.props.musicListId,\r\n                    musicListNewName: inputName,\r\n                    isPublic: this.props.isPublic\r\n                }\r\n            })\r\n            try{\r\n                const response = await UserAPI.get(\"/user/musicLists/\"+this.props.userId);\r\n                if(response.data.status === \"success\"){ // search success\r\n                    console.log(\"success\");\r\n                    console.log(\"musiclists is\", response.data.musicLists);\r\n                    var playlistsChangeHandler = this.props.handler;\r\n                    playlistsChangeHandler(response.data.musicLists);\r\n                }\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n            this.props.handleClose()\r\n        }else{\r\n            alert(\"cannot be empty\")\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={\"modal d-block\"} style={{visibility: this.props.show ? 'visible' : 'hidden' }}>\r\n                <div className=\"modal-content\">\r\n                    <span onClick={this.props.handleClose} className=\"close\">&times;</span>\r\n                <Container>\r\n                    <h2>Edit Playlist Name:</h2>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <TextField id=\"modalInputName\" size=\"small\" type=\"name\" placeholder=\"new name\" variant=\"outlined\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <Row>\r\n                        <Button className=\"search-btn\" onClick={e => this.handleSubmit(e)}>\r\n                            Save\r\n                        </Button>\r\n                        <Button className=\"modal-close cancel-btn\" onClick={this.props.handleClose}>\r\n                            Cancel\r\n                        </Button>\r\n                    </Row>\r\n                </Container>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nexport default EditNamePopup;\r\n","import React, { Component } from 'react';\r\nimport Row from 'react-bootstrap/Row'\r\nimport { Link } from 'react-router-dom';\r\nimport {AiFillEdit} from 'react-icons/ai'\r\nimport {BsTrashFill} from 'react-icons/bs'\r\nimport { IconContext } from \"react-icons\";\r\nimport gql from 'graphql-tag'\r\nimport {Mutation} from 'react-apollo'\r\nimport EditNamePopup from './EditNamePopup'\r\nimport UserAPI from \"../../apis/UserAPI\";\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst REMOVE_PLAYLIST = gql`\r\n    mutation removePlaylist($userId: String!\r\n                            $playlistId: String!\r\n        ) {\r\n        removePlaylist(\r\n            id: $userId\r\n            playlistId: $playlistId\r\n        ){\r\n            _id\r\n        }\r\n    }\r\n`;\r\n\r\nconst EDIT_MUSICLIST = gql`\r\n    mutation updateMusicList(\r\n        $musicListId: String!\r\n        $musicListNewName: String!\r\n        $isPublic: Boolean!\r\n    ) {\r\n    updateMusicList(\r\n        id: $musicListId\r\n        musicListName: $musicListNewName\r\n        isPublic: $isPublic\r\n    ){\r\n      _id\r\n    }\r\n  }\r\n`;\r\n\r\nconst REMOVE_MUSICLIST = gql`\r\n    mutation removeMusicList($playlistId: String!\r\n        ) {\r\n            removeMusicList(id: $playlistId){\r\n                _id\r\n            }\r\n    }\r\n`;\r\n\r\nclass PlaylistCard extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            popupDisplay: false\r\n        }\r\n    }\r\n\r\n    closeModal = () =>{\r\n        var modal = document.getElementById(\"main_modal\");\r\n        modal.style.display = \"none\";\r\n    }\r\n\r\n    onDeleteClick = (e, removePlaylist, removeMusicList) => {\r\n        if(localStorage.getItem('isSignedIn')){\r\n            var modal = document.getElementById(\"main_modal\");\r\n            if(modal){\r\n                modal.style.display = \"block\";\r\n                var updateModalContentHandler = this.props.updateModalContentHandler;\r\n                var content = <div>\r\n                    <h3>Are you sure to delete the playlist \"{this.props.musicListName}\"?</h3>\r\n                    <Button className=\"search-btn\" onClick={(e) => this.onDeleteConfirm(e, removePlaylist, removeMusicList)}>Confirm</Button>\r\n                    <Button className=\"cancel-btn\" onClick={this.closeModal}>Cancel</Button>\r\n                    </div>\r\n                updateModalContentHandler(content);\r\n            }\r\n        }else{\r\n            alert(\"Please sign in first!\");\r\n        }\r\n    }\r\n\r\n    onDeleteConfirm = async (e, removePlaylist, removeMusicList)=>{\r\n        e.preventDefault();\r\n        console.log('click to remove');\r\n        console.log(this.props.userId);\r\n        console.log(this.props.musicListId);\r\n        removePlaylist({\r\n            variables:{\r\n                userId: this.props.userId,\r\n                playlistId: this.props.musicListId\r\n            }\r\n        });\r\n        removeMusicList({\r\n            variables:{\r\n                playlistId: this.props.musicListId\r\n            }\r\n        });\r\n        try{\r\n            const response = await UserAPI.get(\"/user/musicLists/\"+this.props.userId);\r\n            if(response.data.status === \"success\"){ // search success\r\n                console.log(\"success\");\r\n                console.log(\"musiclists is\", response.data.musicLists);\r\n                var playlistsChangeHandler = this.props.handler;\r\n                playlistsChangeHandler(response.data.musicLists);\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n        this.closeModal();\r\n    \r\n    }\r\n\r\n    handleEditOnClick = () =>{\r\n        console.log('click to edit');\r\n        this.setState({\r\n            popupDisplay: true\r\n        })\r\n    }\r\n\r\n    handleCloseOnClick = () =>{\r\n        console.log('click to close');\r\n        this.setState({\r\n            popupDisplay: false\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        var playlistID = this.props.musicListId;\r\n        var link = \"/playlist/\"+playlistID;\r\n        let deleteButton = <Mutation mutation={REMOVE_PLAYLIST}>\r\n                                {(removePlaylist, { loading, error }) => \r\n                                <Mutation mutation={REMOVE_MUSICLIST}>\r\n                                        {(removeMusicList, { loading, error }) => \r\n                                            <BsTrashFill onClick={(e) => this.onDeleteClick(e,removePlaylist, removeMusicList )}/> }\r\n                                </Mutation>}\r\n                        </Mutation>    \r\n        let editButton = null;\r\n        if(this.props.userId === this.props.ownerId){\r\n            editButton = <AiFillEdit onClick={this.handleEditOnClick}/>\r\n        }\r\n        return (\r\n            <Row>\r\n                <Link to={link}>\r\n                    <div className=\"playlist-card\">\r\n                        <div>{this.props.musicListName}</div>\r\n                    </div>\r\n                </Link>\r\n                <div style={{'cursor':'pointer'}}>\r\n                    <IconContext.Provider value={{ color: \"#F06E9C\", size: '35px' }}>\r\n                        {editButton}\r\n                        {deleteButton} \r\n                    </IconContext.Provider>\r\n                </div>\r\n                <Mutation mutation={EDIT_MUSICLIST}>\r\n                                {(updateMusicList, { loading, error }) => \r\n                                    <EditNamePopup\r\n                                    updateMusicList ={updateMusicList}\r\n                                    musicListId = {playlistID}\r\n                                    show = {this.state.popupDisplay}\r\n                                    userId={this.props.userId}\r\n                                    ownerId = {this.props.ownerId}\r\n                                    handler={this.props.handler}\r\n                                    handleClose = {this.handleCloseOnClick}\r\n                                    isPublic={this.props.isPublic}\r\n                                    />}\r\n                </Mutation>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlaylistCard\r\n","import React, { useEffect } from 'react';\r\nimport PlaylistCard from './PlaylistCard';\r\nimport gql from 'graphql-tag'\r\nimport UserAPI from \"../../apis/UserAPI\";\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst GET_PLAYLIST = gql`\r\n    query user($userId: String) {\r\n        user(id: $userId) {\r\n            musicLists{\r\n                _id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst GET_LIST_DETAIL = gql`\r\n    query musicList($musicListId: String) {\r\n        musicList(id: $musicListId) {\r\n            musicListName\r\n            owner{\r\n                _id\r\n            }\r\n            isPublic\r\n        }\r\n    }\r\n`;\r\n\r\nexport default function PlaylistsScreen(props){\r\n    const [playlists, setPlaylists] = React.useState(null);\r\n    const [filter_criteria, setFilterCriteria] = React.useState(\"\");\r\n    // var userId = props.userId;\r\n    var userId = localStorage.getItem('userId');\r\n    \r\n    const handler = async (musicLists) => {\r\n        console.log('hangler triggered');\r\n        var newMusicLists = [];\r\n        for(let i = 0; i < musicLists.length; i++){\r\n            let id = musicLists[i];\r\n            const playlist_response = await UserAPI.get(\"/musicList/\"+id);\r\n            if(playlist_response.data.status === \"success\"){ // search success\r\n                newMusicLists.push(playlist_response.data.musicList);\r\n            }else{\r\n                console.log(\"error searching playlist\", id);\r\n            }\r\n        }\r\n        setPlaylists(Array.from(newMusicLists));\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        async function fetchData() {\r\n            if(userId){\r\n                try {\r\n                    const response = await UserAPI.get(\"/user/musicLists/\"+userId);\r\n                    if(response.data.status === \"success\"){ // search success\r\n                        console.log(\"success\");\r\n                        console.log(\"musiclists is\", response.data.musicLists);\r\n                        var musicLists = [];\r\n                        for(let i = 0; i < response.data.musicLists.length; i++){\r\n                            let id = response.data.musicLists[i];\r\n                            const playlist_response = await UserAPI.get(\"/musicList/\"+id);\r\n                            if(playlist_response.data.status === \"success\"){ // search success\r\n                                musicLists.push(playlist_response.data.musicList);\r\n                            }else{\r\n                                console.log(\"error searching playlist\", id);\r\n                            }\r\n                        }\r\n                        setPlaylists(Array.from(musicLists));\r\n                    }else{ // somehow failed\r\n        \r\n                    }\r\n                }catch (err) {\r\n                    console.log(err);\r\n                }\r\n            }\r\n            \r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const handleFilter = (e) => {\r\n        const {target} = e;\r\n        setFilterCriteria(target.value);\r\n    }\r\n\r\n    if(!userId){  // or current logged in id is not equal to this id\r\n        props.history.push('/signin');\r\n    }\r\n    if(playlists){\r\n        var playlists_cards = \"\"\r\n        if(playlists.length > 0){\r\n            playlists_cards = playlists.filter(musicList => musicList.musicListName.toLowerCase().includes(filter_criteria.toLowerCase())).map( (musicList) => \r\n            <PlaylistCard\r\n            key={musicList._id}\r\n            isPublic={musicList.isPublic}\r\n            userId={userId}\r\n            musicListId={musicList._id}\r\n            musicListName={musicList.musicListName}\r\n            ownerId={musicList.owner}\r\n            updateModalContentHandler={props.updateModalContentHandler}\r\n            handler={handler}/>\r\n            ) \r\n        }else{\r\n            playlists_cards = <div>You don't have any playlist. Click \"Create Playlist\" to make a new one.</div>\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                \r\n                <br/><h1>All Playlists</h1>\r\n                \r\n                <div style={{\"padding\":\"5px\"}}>\r\n                    <TextField size=\"small\" placeholder=\"Filter...\" variant=\"outlined\" \r\n                    id=\"filter\" onChange={handleFilter}/>\r\n                </div>\r\n                { playlists_cards }\r\n                 \r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div>Loading...</div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom';\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport UserAPI from \"../apis/UserAPI\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { TextField } from '@material-ui/core';\r\nimport { MdHome, MdSearch, MdPerson, MdPeople, \r\n    MdQueueMusic, MdPlaylistAdd, MdAssignment\r\n} from \"react-icons/md\";\r\nimport { CgLogIn, CgLogOut } from \"react-icons/cg\";\r\nimport { IconContext } from \"react-icons\";\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\nconst ADD_PLAYLIST=gql`\r\n    mutation AddNewPlaylist(\r\n        $id: String!,\r\n        $playlistId: String!,\r\n        ) {\r\n        addNewPlaylist(\r\n            id: $id,\r\n            playlistId: $playlistId\r\n            ) {\r\n            _id\r\n        }\r\n    }\r\n`;\r\n\r\nclass NavigationBar extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            playlist: \"\",\r\n            musicListName: \"\"\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {target} = e;\r\n    \r\n        this.setState( (state) => ({\r\n            ...state,\r\n            [target.id]: target.value\r\n    \r\n        }));\r\n    }\r\n\r\n    selectButtons = () =>{\r\n        if(localStorage.getItem('isSignedIn')){\r\n            let userId = localStorage.getItem('userId');\r\n            return(<div>\r\n                <Link to={\"/profile/\"+userId}>\r\n                    <Button className=\"nav-btn\" size=\"lg\">\r\n                        <Row>\r\n                            <Col xs={2}>\r\n                                <IconContext.Provider value={{ size: '30px' }}>\r\n                                    <MdPerson style={{'paddingBottom':'5px'}}/>\r\n                                </IconContext.Provider>\r\n                            </Col>\r\n                            <Col xs={10}>\r\n                                My Profile\r\n                            </Col>\r\n                        </Row>\r\n                    </Button>\r\n                </Link>\r\n                <Link to=\"/friends\">\r\n                    <Button className=\"nav-btn\" size=\"lg\">\r\n                        <Row>\r\n                            <Col xs={2}>\r\n                                <IconContext.Provider value={{ size: '30px' }}>\r\n                                    <MdPeople style={{'paddingBottom':'5px'}}/>\r\n                                </IconContext.Provider>\r\n                            </Col>\r\n                            <Col xs={10}>\r\n                                Friends\r\n                            </Col>\r\n                        </Row>\r\n                    </Button>\r\n                </Link>\r\n                <Link to=\"/playlists\">\r\n                    <Button className=\"nav-btn\" size=\"lg\">\r\n                        <Row>\r\n                            <Col xs={2}>\r\n                                <IconContext.Provider value={{ size: '30px' }}>\r\n                                    <MdQueueMusic style={{'paddingBottom':'5px'}}/>\r\n                                </IconContext.Provider>\r\n                            </Col>\r\n                            <Col xs={10}>\r\n                                Playlists\r\n                            </Col>\r\n                        </Row>\r\n                    </Button>\r\n                </Link>\r\n                <Mutation mutation={ADD_PLAYLIST}>\r\n                    {(addNewPlaylist,{loading, error})=>(\r\n                        //<Link to={'/playlist/${this.state.playlist}'}>\r\n                            // <Button className=\"nav-btn\" size=\"lg\" onClick={(e) => this.handleCreateNewList(e, addNewPlaylist)}>\r\n                            <Button className=\"nav-btn\" size=\"lg\" onClick={(e) => this.openModal(e, addNewPlaylist)}>\r\n                                <Row>\r\n                                    <Col xs={2}>\r\n                                        <IconContext.Provider value={{ size: '30px' }}>\r\n                                            <MdPlaylistAdd style={{'paddingBottom':'5px'}}/>\r\n                                        </IconContext.Provider>\r\n                                    </Col>\r\n                                    <Col xs={10}>\r\n                                        Create Playlist\r\n                                    </Col>\r\n                                </Row>\r\n                            </Button>\r\n                        //</Link>\r\n                    )}\r\n                </Mutation>\r\n\r\n                {/* <Link to=\"/likedsongs\">\r\n                    <Button className=\"nav-btn\" size=\"lg\">\r\n                        <Row>\r\n                            <Col xs={2}>\r\n                                <IconContext.Provider value={{ size: '30px' }}>\r\n                                    <MdFavorite style={{'paddingBottom':'5px'}}/>\r\n                                </IconContext.Provider>\r\n                            </Col>\r\n                            <Col xs={10}>\r\n                                Liked Songs\r\n                            </Col>\r\n                        </Row>\r\n                    </Button>\r\n                </Link> */}\r\n\r\n                <Button className=\"nav-btn\" size=\"lg\" onClick={()=>{this.props.signedOut()}}>\r\n                    <Row>\r\n                        <Col xs={2}>\r\n                            <IconContext.Provider value={{ size: '30px' }}>\r\n                                <CgLogOut style={{'paddingBottom':'5px'}}/>\r\n                            </IconContext.Provider>\r\n                        </Col>\r\n                        <Col xs={10}>\r\n                            Sign Out\r\n                        </Col>\r\n                    </Row>\r\n                </Button>\r\n                </div>)\r\n        }\r\n        else{\r\n            return(<div>\r\n                <Link to=\"/signin\">\r\n                    <Button className=\"nav-btn\" size=\"lg\">\r\n                        <Row>\r\n                            <Col xs={2}>\r\n                                <IconContext.Provider value={{ size: '30px' }}>\r\n                                    <CgLogIn style={{'paddingBottom':'5px'}}/>\r\n                                </IconContext.Provider>\r\n                            </Col>\r\n                            <Col xs={10}>\r\n                                Sign In\r\n                            </Col>\r\n                        </Row>\r\n                    </Button>\r\n                </Link>\r\n                <Link to=\"/signup\">\r\n                    <Button className=\"nav-btn\" size=\"lg\">\r\n                        <Row>\r\n                            <Col xs={2}>\r\n                                <IconContext.Provider value={{ size: '30px' }}>\r\n                                    <MdAssignment style={{'paddingBottom':'5px'}}/>\r\n                                </IconContext.Provider>\r\n                            </Col>\r\n                            <Col xs={10}>\r\n                                Sign Up\r\n                            </Col>\r\n                        </Row>\r\n                    </Button>\r\n                </Link>\r\n            </div>)\r\n        }\r\n    }\r\n\r\n    setMusicListNameHandler = (e, addNewPlaylist) => {\r\n        console.log(this.state.musicListName);\r\n        var musicListName = this.state.musicListName;\r\n        if(musicListName === \"\") return;\r\n        this.handleCreateNewList(addNewPlaylist, musicListName);\r\n    }\r\n\r\n    openModal = (e, addNewPlaylist) => {\r\n        if(localStorage.getItem('isSignedIn')){\r\n            var modal = document.getElementById(\"main_modal\");\r\n            if(modal){\r\n                modal.style.display = \"block\";\r\n                var updateModalContentHandler = this.props.updateModalContentHandler;\r\n                var content = <div>\r\n                    <h2>Create New Playlist</h2>\r\n                    <div style={{\"padding\":\"5px\"}}>\r\n                        <TextField id=\"musicListName\" size=\"small\" placeholder=\"New List\" variant=\"outlined\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <Button className=\"search-btn\" onClick={(e) => this.setMusicListNameHandler(e, addNewPlaylist)}>Create</Button>\r\n                    <Button className=\"cancel-btn\" onClick={this.closeModal}>Cancel</Button>\r\n                    </div>\r\n                updateModalContentHandler(content);\r\n            }\r\n        }else{\r\n            alert(\"Please sign in first!\");\r\n        }\r\n    }\r\n\r\n    closeModal = () =>{\r\n        var modal = document.getElementById(\"main_modal\");\r\n        modal.style.display = \"none\";\r\n    }\r\n\r\n    handleCreateNewList = async (addNewPlaylist, musicListName) => {\r\n        // e.preventDefault();\r\n        try {\r\n            let userId = localStorage.getItem('userId');\r\n            const create_response = await UserAPI.post(\"/createMusicList\", {\r\n                userId,\r\n                musicListName\r\n            });\r\n            if (create_response.data.status === \"success\") {\r\n            //    console.log(this.props.userId)\r\n            //    console.log(create_response.data.musicListId)\r\n                addNewPlaylist({\r\n                    variables:{\r\n                        id: userId,\r\n                        playlistId: create_response.data.musicListId\r\n                    }\r\n                });\r\n                this.closeModal();\r\n                this.props.history.push('/playlist/'+create_response.data.musicListId);\r\n            }else{\r\n                alert(\"Playlist creation failed\")\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Link to=\"/\">\r\n                    <Button className=\"nav-btn\" size=\"lg\">\r\n                        <Row>\r\n                            <Col xs={2}>\r\n                                <IconContext.Provider value={{ size: '30px' }}>\r\n                                    <MdHome style={{'paddingBottom':'5px'}}/>\r\n                                </IconContext.Provider>\r\n                            </Col>\r\n                            <Col xs={10}>\r\n                                Home\r\n                            </Col>\r\n                        </Row>\r\n                    </Button>\r\n                </Link>\r\n                <Link to=\"/search\">\r\n                    <Button className=\"nav-btn\" size=\"lg\">\r\n                        <Row>\r\n                            <Col xs={2}>\r\n                                <IconContext.Provider value={{ size: '30px' }}>\r\n                                    <MdSearch style={{'paddingBottom':'5px'}}/>\r\n                                </IconContext.Provider>\r\n                            </Col>\r\n                            <Col xs={10}>\r\n                                Search\r\n                            </Col>\r\n                        </Row>\r\n                    </Button>\r\n                </Link>\r\n                {this.selectButtons()}\r\n                {/* <Link to=\"/signin\"><Button className=\"nav-btn\" size=\"lg\">Sign In</Button></Link>\r\n                <Link to=\"/signup\"><Button className=\"nav-btn\" size=\"lg\">Sign Up</Button></Link> */}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default withRouter(NavigationBar);\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { IconContext } from \"react-icons\";\r\nimport { MdPlayArrow, MdPause, MdSkipNext, MdSkipPrevious, MdPlaylistPlay,\r\n    MdShuffle, MdRepeat, MdVolumeUp, MdVolumeOff, MdTagFaces\r\n} from \"react-icons/md\";\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { Link } from 'react-router-dom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport UserAPI from \"../apis/UserAPI\";\r\nimport default_song from '../tempData/default.mp3'\r\n\r\nclass AudioPlayerBar extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            volume: 20,\r\n            track_url: \"\",\r\n            track_data: null,\r\n            progress: 0,\r\n            duration: 0,\r\n            isPlaying: false,\r\n            audioTag: new Audio(),\r\n            isMute: false,\r\n            isLoop: false,\r\n            isShuffle: false,\r\n            currentIndex: 0,\r\n            interval: null\r\n        };\r\n\r\n\r\n        this.state.audioTag.addEventListener('ended', (event) => {  // when the music ends\r\n            this.onNextSong();\r\n        });\r\n\r\n        this.changeVolumn(20);  // default volume\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRef(undefined)\r\n    }\r\n\r\n    tick = () =>{\r\n        // console.log(\"tick working\");\r\n        if(!this.state.isPlaying){\r\n            return;\r\n        }\r\n        this.setState({\r\n            progress: this.state.audioTag.currentTime\r\n        });\r\n    }\r\n\r\n    onNextSong = async () => {\r\n        // console.log(\"next music\");\r\n        let queue = localStorage.getItem('queue');\r\n        queue = JSON.parse(queue);\r\n        if(!queue) return;\r\n        this.state.audioTag.pause();\r\n        if (this.state.track_data) {\r\n            let index = 0;\r\n            let found = false;\r\n            for (index = 0; index < queue.length; index++) {\r\n                if (queue[index].URI === this.state.track_data.id){\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if(!found){\r\n                index = 0;  // not found, start from first song\r\n            }else{\r\n                if (this.state.isShuffle) {\r\n                    index = Math.floor(Math.random()* queue.length)\r\n                } else if (index === (queue.length - 1)){\r\n                    // console.log(\"loop to beginning\")\r\n                    index = 0;\r\n                } else{\r\n                    index = index + 1\r\n                }\r\n            }\r\n            \r\n            // console.log(\"updated index:\"+index)\r\n            if (index < queue.length) {\r\n                // let URI = queue[index]? queue[index].URI : null;\r\n                let song = queue[index];\r\n                // console.log(\"URI:\"+URI)\r\n                this.loadSongAndplay(song, index);\r\n            }\r\n        } else {\r\n            this.onPlayClick();\r\n        }\r\n        \r\n    }\r\n\r\n    onPrevSong = async () => {\r\n        // console.log(\"previous music\");\r\n        \r\n        let index = this.state.currentIndex;\r\n        let queue = localStorage.getItem('queue');\r\n        queue = JSON.parse(queue);\r\n        if(!queue) return;\r\n        if (this.state.track_data) {\r\n            let index = 0;\r\n            for (index = 0; index < queue.length; index++) {\r\n                if (queue[index].URI === this.state.track_data.id){\r\n                    break;\r\n                }\r\n            }\r\n            if (index != 0){\r\n                // console.log(\"current index before update:\"+index)\r\n                index = index - 1;\r\n                // console.log(\"current index after update:\"+index)\r\n                // let URI = queue[index]? queue[index].URI : null;\r\n                // console.log(\"URI:\"+URI)\r\n                let song = queue[index];\r\n                this.loadSongAndplay(song, index);\r\n            }\r\n        } else {\r\n            this.onPlayClick();\r\n        }\r\n    }\r\n\r\n    loadQueueIndexAndPlay = (index) => {\r\n        let queue = localStorage.getItem('queue');\r\n        queue = JSON.parse(queue);\r\n        if(!queue) return;\r\n        if(index >= queue.length) return;\r\n        this.loadSongAndplay(queue[index], index);\r\n    }\r\n\r\n    loadSongAndplay = async (song, index) =>{\r\n        // console.log(\"song is\", song);\r\n        var id = localStorage.getItem('userId');\r\n        if(!song){\r\n            return;\r\n        }\r\n        var URI = song.URI;\r\n        const getSong_response = await UserAPI.post(\"/getSongAudio\", {\r\n            URI});\r\n        if (getSong_response.data.status === \"success\") {\r\n            // console.log(\"successful load the track information\")\r\n            // console.log(\"track url:\"+getSong_response.data.track.preview_url)\r\n            if(id){\r\n                const updateNowPlaying_response = await UserAPI.post(\"/updateNowPlaying\", {\r\n                    id: id,\r\n                    musicID: song._id\r\n                });\r\n                if(updateNowPlaying_response.data.status === \"success\") {\r\n                    var updateNowPlaying = this.props.updateNowPlaying;\r\n                    updateNowPlaying(updateNowPlaying_response.data.user.nowListening);\r\n                }\r\n            }\r\n            \r\n            if (getSong_response.data.track.preview_url) {\r\n                let interval = this.state.interval;\r\n                if(!interval){\r\n                    interval = setInterval(this.tick, 100);\r\n                }\r\n                this.setState({\r\n                    url: getSong_response.data.track.preview_url,\r\n                    track_data: getSong_response.data.track,\r\n                    isPlaying: true,\r\n                    progress: 0,\r\n                    currentIndex: index,\r\n                    interval: interval\r\n                });\r\n                this.state.audioTag.src = getSong_response.data.track.preview_url;\r\n                this.state.audioTag.play();\r\n            }else{\r\n                // console.log(\"no sample music aviliable\")\r\n                let interval = this.state.interval;\r\n                if(!interval){\r\n                    interval = setInterval(this.tick, 100);\r\n                }\r\n                this.setState({\r\n                    track_data: getSong_response.data.track,\r\n                    isPlaying: true,\r\n                    progress: 0,\r\n                    currentIndex: index,\r\n                    interval: interval\r\n                });\r\n                this.state.audioTag.src = default_song;\r\n                this.state.audioTag.play();\r\n                var toast = document.getElementById(\"no_song_toast\");\r\n                toast.className = \"show\"; // show the toast\r\n                // After 3 seconds, remove the show class from toast\r\n                setTimeout(function(){ toast.className = toast.className.replace(\"show\", \"\"); }, 3000);\r\n            }\r\n            \r\n        }else{\r\n            console.log(\"errored\")\r\n        } \r\n    }\r\n\r\n    changeVolumn = (value) => {\r\n        if(this.state.audioTag){\r\n            this.state.audioTag.volume = value / 100;\r\n            this.setState({volume: value});\r\n        }\r\n    }\r\n\r\n    handleChange = (e, newValue) => {\r\n        // console.log('new', newValue);\r\n        \r\n        if(this.state.audioTag){\r\n            this.state.audioTag.volume = newValue / 100;\r\n            this.setState({volume: newValue});\r\n        }\r\n    }\r\n\r\n    handleAudioSlider = (e, newValue) => {\r\n        // console.log('new', newValue);\r\n        // console.log('current time', this.state.audioTag.currentTime);\r\n        if (this.state.audioTag) {\r\n            this.state.audioTag.currentTime = newValue/100 * 30;\r\n            this.setState({progress: newValue/100 * 30});\r\n        }\r\n    }\r\n\r\n    onPlayClick = async () =>{\r\n        // console.log(\"clicked play\")\r\n        let queue = localStorage.getItem('queue');\r\n        queue = JSON.parse(queue);\r\n        if(!queue) return;\r\n        if(this.state.track_data){\r\n            if(this.state.audioTag){\r\n                if(!this.state.isPlaying){\r\n                    this.state.audioTag.play();\r\n                    this.setState({\r\n                        interval: setInterval(this.tick, 100),\r\n                        isPlaying: !this.state.isPlaying})\r\n                }else{\r\n                    this.state.audioTag.pause();\r\n                    clearInterval(this.state.interval);\r\n                    this.setState({isPlaying: !this.state.isPlaying,\r\n                    interval: null})\r\n                }\r\n            }\r\n        }else{\r\n            if(queue.length > 0){\r\n                // let URI = queue[0]? queue[0].URI : null;\r\n                // console.log(\"URI:\"+URI)\r\n                this.loadSongAndplay(queue[0], 0);\r\n            }\r\n        }\r\n    }\r\n    \r\n    onVolumeClick = () => {\r\n        if(this.state.audioTag){\r\n            if(!this.state.isMute){\r\n                this.state.audioTag.muted = true;\r\n                this.setState({isMute: !this.state.isMute})\r\n            }else{\r\n                this.state.audioTag.muted = false;\r\n                this.setState({isMute: !this.state.isMute})\r\n            }\r\n        }\r\n    }\r\n\r\n    onShuffleClick = () => {\r\n        if(this.state.audioTag){\r\n            if(!this.state.isShuffle){\r\n                // this.state.audioTag.loop = true;\r\n                this.setState({isShuffle: !this.state.isShuffle})\r\n                this.setState({isLoop: false})  // force turn off loop\r\n            }else{\r\n                // this.state.audioTag.muted = false;\r\n                this.setState({isShuffle: !this.state.isShuffle})\r\n            }\r\n        }\r\n    }\r\n\r\n    onLoopClick = () => {\r\n        if(this.state.audioTag){\r\n            if(!this.state.isLoop){\r\n                this.state.audioTag.loop = true;\r\n                this.setState({isLoop: !this.state.isLoop})\r\n                this.setState({isShuffle: false})  // force turn off shuffle\r\n            }else{\r\n                this.state.audioTag.muted = false;\r\n                this.state.audioTag.loop = false;\r\n                this.setState({isLoop: !this.state.isLoop})\r\n            }\r\n        }\r\n    }\r\n\r\n    checkSignIn = () => {\r\n        if(!localStorage.getItem('isSignedIn')){\r\n            alert(\"Please sign in to use this function.\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var play_pause_icon = <MdPlayArrow />\r\n        if(this.state.isPlaying){\r\n            play_pause_icon = <MdPause />\r\n        }\r\n        var volume_icon = <MdVolumeUp/>\r\n        if(this.state.isMute){\r\n            volume_icon = <MdVolumeOff/>\r\n        }\r\n\r\n        var shuffle_icon = \r\n        <IconContext.Provider value={{ color: \"#ADADAD\", size: '40px'}}>\r\n            <MdShuffle/>\r\n        </IconContext.Provider>\r\n        if(this.state.isShuffle){\r\n            shuffle_icon = \r\n            <IconContext.Provider value={{ color: \"#F06E9C\", size: '40px'}}>\r\n                <MdShuffle/>\r\n            </IconContext.Provider>\r\n        }\r\n        var loop_icon = \r\n        <IconContext.Provider value={{ color: \"#ADADAD\", size: '40px'}}>\r\n            <MdRepeat/>\r\n        </IconContext.Provider>\r\n        if(this.state.isLoop){\r\n            loop_icon = \r\n            <IconContext.Provider value={{ color: \"#F06E9C\", size: '40px'}}>\r\n                <MdRepeat/>\r\n            </IconContext.Provider>\r\n        }\r\n       \r\n        var path_to_queue = \"\"\r\n        if(localStorage.getItem('isSignedIn')){\r\n            path_to_queue = {pathname: \"/queue\"}\r\n        }else{\r\n            path_to_queue = \"\";\r\n        }\r\n        let progress = (this.state.progress/60<10?\"0\":\"\")+Math.floor(this.state.progress/60)+\":\"+(this.state.progress%60<10?\"0\":\"\")+Math.floor(this.state.progress%60);\r\n        return (\r\n            <div className=\"secondary-bg\" style={{'height':'20vh', 'zIndex':'10', 'color':'#ed4e85'}}>\r\n                <Container>\r\n                    <Row>\r\n                        <IconContext.Provider value={{ color: \"#F06E9C\", size: '40px' }}>\r\n                            <Col xs={2} className=\"content-center\">\r\n                                <Link\r\n                                to={path_to_queue}\r\n                                onClick={this.checkSignIn}\r\n                                style={{'color':'#ed4e85'}}><MdPlaylistPlay />Queue</Link>\r\n                            </Col>\r\n                            <Col xs={2} className=\"content-center\">\r\n                                <div>{this.state.track_data?this.state.track_data.name:\"none\"}</div>\r\n                            </Col>\r\n                            \r\n                            <Col xs={4} className=\"content-center\">\r\n                                <IconButton\r\n                                    aria-label=\"prev\"\r\n                                    onClick={this.onPrevSong}\r\n                                >\r\n                                    <MdSkipPrevious  />\r\n                                </IconButton>\r\n                                \r\n                                <IconButton\r\n                                    aria-label=\"play\"\r\n                                    onClick={this.onPlayClick}\r\n                                >\r\n                                    { play_pause_icon }\r\n                                </IconButton>\r\n                                \r\n                                <IconButton\r\n                                    aria-label=\"next\"\r\n                                    onClick={this.onNextSong}\r\n                                >\r\n                                    <MdSkipNext />\r\n                                </IconButton>\r\n                                \r\n\r\n                            </Col>\r\n                            <Col xs={4} className=\"content-center\">\r\n                                <IconButton\r\n                                    aria-label=\"shuffle\"\r\n                                    onClick={this.onShuffleClick}\r\n                                >\r\n                                    { shuffle_icon }\r\n                                </IconButton>\r\n\r\n                                <IconButton\r\n                                    aria-label=\"loop\"\r\n                                    onClick={this.onLoopClick}\r\n                                >\r\n                                    { loop_icon }\r\n                                </IconButton>\r\n\r\n                                <IconButton\r\n                                    aria-label=\"volume\"\r\n                                    onClick={this.onVolumeClick}\r\n                                >\r\n                                    { volume_icon }\r\n                                </IconButton>\r\n                                <Slider id=\"volume\" value={this.state.volume} onChange={this.handleChange} className=\"volume-slider\" aria-labelledby=\"continuous-slider\" />\r\n                            </Col>\r\n                        </IconContext.Provider>\r\n                    </Row>\r\n                        \r\n                    <Row>\r\n                        <Col className=\"content-center\">\r\n                        <span style={{\"margin\":\"10px\"}}>{progress}</span>\r\n                        <Slider className=\"audio-slider\" aria-labelledby=\"continuous-slider\" value={this.state.progress/30*100} onChange={this.handleAudioSlider} />\r\n                        <span style={{\"margin\":\"10px\"}}>00:30</span>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AudioPlayerBar;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from '../../tempData/AbbeyRoad.jpg'\r\nimport default_image from '../../tempData/default_image.png'\r\nimport { MdPauseCircleOutline, MdMoreHoriz} from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport { AiOutlinePlusCircle } from \"react-icons/ai\";\r\n/*\r\nclass playPauseButton extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {isToggleOn: true};\r\n  \r\n      this.handleClick = this.handleClick.bind(this);\r\n    }\r\n  \r\n    handleClick() {\r\n      this.setState(state => ({\r\n        isToggleOn: !state.isToggleOn\r\n      }));\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <button onClick={this.handleClick} className={this.state.isToggleOn?\"playButton\":\"pausedButton\"}>\r\n        </button>\r\n      );\r\n    }\r\n  }*/\r\n\r\nclass CreateNewListScreen extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row>\r\n                        <img className=\"playlist-image\" src={default_image} width={175} height={175} alt=\"\">\r\n                        </img>\r\n                        <Col>\r\n                            <Col xs={10} className=\"content-left\">\r\n                                <h3>Playlists</h3>\r\n                                <h1 style={{fontWeight: \"bold\"}} >NEW Playlists</h1> {/*List name*/}\r\n                            </Col>\r\n                            <Col xs={10} className=\"content-center\">\r\n                                <h5>Artirst</h5>Artirst                    \r\n                                <h3 style={{fontWeight: \"bold\"}} >Mixtapez|0 Song|0 second</h3> {/*List name*/}\r\n                            </Col>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row xs={10}>\r\n                        <IconContext.Provider value={{ color: \"#F06E9C\", size: '50px' }}>\r\n                            <MdPauseCircleOutline/>\r\n                            <AiOutlinePlusCircle/>\r\n                            <MdMoreHoriz/>\r\n                        </IconContext.Provider>\r\n                    </Row>\r\n                    <Col xs={7} className=\"content-center\">\r\n                        <h3>The playlist is empty!</h3>\r\n                        <Button className=\"nav-btn\" size=\"lg\">Explore Music</Button>\r\n                    </Col>\r\n                </Container>\r\n\r\n            </div>\r\n        )\r\n    };\r\n\r\n}\r\n\r\nexport default CreateNewListScreen;","import React, { Component, useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { MdPlayCircleOutline, MdMoreHoriz, MdDragHandle} from \"react-icons/md\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { IconContext } from \"react-icons\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport UserAPI from \"../../apis/UserAPI\";\r\n// import { GrDrag } from \"react-icons/gr\";\r\n// import { AiOutlineDrag } from \"react-icons/ai\";\r\n\r\nvar options = [\r\n    'Add to Queue',\r\n    // 'Save to Liked Songs',\r\n    'Add to Playlist',\r\n    'Share',\r\n    'Remove from this Playlist'\r\n  ];\r\n\r\n\r\nexport default function PlaylistSongCard(props){\r\n    var song = props.song;\r\n    var modal_content = null;\r\n    var userId = localStorage.getItem('userId');\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const onPlayClick = () => {\r\n        var index = props.index;\r\n        var onSongCardClick = props.onSongCardClick;\r\n        onSongCardClick(index);\r\n    }\r\n\r\n    const addSongToMusicList = async (e, songID, musicListID) => {\r\n        console.log(songID + \" \" + musicListID);\r\n        try{\r\n            const addSong_response = await UserAPI.post(\"/addSong\", {\r\n                musicListID,\r\n                songID\r\n            });\r\n            if(addSong_response.data.status === \"success\"){  // close the modal\r\n                var modal = document.getElementById(\"modal\");\r\n                if(modal)\r\n                    modal.style.display = \"none\";\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const handleMenuItemClick = async (event, index) => {\r\n        setSelectedIndex(index);\r\n        setAnchorEl(null);\r\n        var mode = \"\"\r\n        // normal playlist\r\n        if(index === 0){  // add to queue\r\n            mode = \"add_queue\";\r\n        }\r\n        \r\n        // else if(index === 1){ // add to liked songs\r\n        //     mode = \"add_like\";\r\n        // }\r\n        \r\n        else if(index === 1){ // add to playlist\r\n            mode = \"add_playlist\";\r\n        }else if(index === 2){ // share\r\n            mode = \"share\";\r\n        }else if(index === 3){  // remove\r\n            mode = \"remove\";\r\n        }\r\n        \r\n\r\n        if(mode === \"add_queue\"){  // add to queue\r\n            try {      \r\n                let queue = localStorage.getItem('queue');\r\n                if(queue){\r\n                    queue = JSON.parse(queue);\r\n                }else{\r\n                    queue = [];\r\n                }      \r\n                console.log(song._id)\r\n                let id = song._id\r\n                const song_response = await UserAPI.get(\"/music/\"+id);\r\n                console.log(song_response.data.music)\r\n                if(song_response.data.status == \"success\"){\r\n                    if (queue.length > 0) {\r\n                        let contains = queue.map((music)=>{\r\n                            if (music._id === song_response.data.music._id) {\r\n                                return true\r\n                            }else{\r\n                                return false\r\n                            }\r\n                        }).reduce((a,b)=>{ return(a||b) });\r\n                        console.log(contains);\r\n                        if (!contains) {\r\n                            queue.push(song_response.data.music);\r\n                            localStorage.setItem('queue', JSON.stringify(queue))\r\n                        }\r\n                    }else{\r\n                        queue.push(song_response.data.music);\r\n                        localStorage.setItem('queue', JSON.stringify(queue))\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }else if(mode === \"add_like\"){ // add to liked songs\r\n\r\n        }else if(mode === \"add_playlist\"){ // add to playlist\r\n            if(song && userId){\r\n                // alert(\"hi\" + song.name);\r\n                // console.log(song.name, \"asdad\");\r\n                var modal = document.getElementById(\"modal\");\r\n                if(modal){\r\n                    modal.style.display = \"block\";\r\n                    var updateModalContentHandler = props.updateModalContentHandler;\r\n                    try{\r\n                        const musicLists_response = await UserAPI.get(\"/user/musicLists/\"+userId);\r\n                        if(musicLists_response.data.status === \"success\"){\r\n                            var musicListsIDs = musicLists_response.data.musicLists;\r\n                            var musicLists = [];\r\n                            for(let i = 0; i < musicListsIDs.length; i++){\r\n                                const musicList_response = await UserAPI.get(\"/musicList/\"+musicListsIDs[i]);\r\n                                if(musicList_response.data.status === \"success\"){\r\n                                    musicLists.push(musicList_response.data.musicList);\r\n                                }\r\n                            }\r\n                            modal_content = musicLists.map((musicList, index) => {\r\n                                return(\r\n                                    <div onClick={(e)=> addSongToMusicList(e, song._id, musicList._id)} className=\"playlist-card\">\r\n                                        <div>{musicList.musicListName}</div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            updateModalContentHandler(modal_content);\r\n                        }\r\n                    }catch(err){\r\n                        console.log(err);\r\n                    }\r\n                }\r\n            }\r\n        }else if(mode === \"share\"){ // share\r\n\r\n        }else if(mode === \"remove\"){  // remove\r\n            if(song){\r\n                // alert(\"hi\" + song.name+ \" \"+song._id);\r\n                try{\r\n                    const response = await UserAPI.post(\"/removeSong\", {\r\n                        musicListId: props.musicListId,\r\n                        songID: song._id\r\n                    });\r\n                    if(response.data.status === \"success\"){ // search success\r\n                        // console.log(\"update isPublic success\");\r\n                        var updatePlaylist = props.updatePlaylist;\r\n                        updatePlaylist();\r\n                    }\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    \r\n    if(song){\r\n        var minutes = 0;\r\n        var seconds = 0;\r\n        if(song.length){\r\n            minutes = Math.floor((song.length) / 60);\r\n            if(minutes < 10) minutes = \"0\"+minutes;\r\n            seconds = Math.floor((song.length) % 60);\r\n            if(seconds < 10) seconds = \"0\"+seconds;\r\n        }\r\n        var artist = \"N/A\";\r\n        if(song.artist){\r\n            artist = song.artist\r\n        }\r\n        var album = \"N/A\";\r\n        if(song.album){\r\n            album = song.album\r\n        }\r\n        let title = \"N/A\"\r\n        if(song.musicName){\r\n            title = song.musicName\r\n        }\r\n        var drag_icon = \"\"\r\n        if(props.reorder_mode){\r\n            drag_icon = \r\n            <IconContext.Provider value={{ color: \"#F06E9C\", size: '25px' }}>\r\n                <MdDragHandle/>\r\n            </IconContext.Provider>\r\n        }\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"border-bottom-accent\">\r\n                        <Col xs={1}>\r\n                            { drag_icon }\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            {/* {data.music[id].musicName} */}\r\n                            { title }\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            {/* {data.music[id].artist} */}\r\n                            { artist }\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            {/* {data.music[id].album} */}\r\n                            { album }\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                            {/* 0{data.music[id].length / 60}:{data.music[id].length % 60}0 */}\r\n                            { minutes }:{ seconds }\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                            <IconButton\r\n                                aria-label=\"play-song\"\r\n                                onClick={(e) => onPlayClick(e)}\r\n                            >\r\n                                <IconContext.Provider value={{ color: \"#F06E9C\", size: '30px' }}>\r\n                                    <MdPlayCircleOutline/>\r\n                                </IconContext.Provider>\r\n                            </IconButton>\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                        >\r\n                            <IconContext.Provider value={{ color: \"#F06E9C\", size: '30px' }}>\r\n                                <MdMoreHoriz/>\r\n                            </IconContext.Provider>\r\n                        </IconButton>\r\n                            <Menu\r\n                                id=\"menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                            >\r\n                                {options.map((option, index) => (\r\n                                <MenuItem\r\n                                    key={option}\r\n                                    onClick={(event) => handleMenuItemClick(event, index)}\r\n                                >\r\n                                    {option}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Menu>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                \r\n            </div>\r\n        );\r\n    }else{\r\n        return <div>error</div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { BsFillCaretDownFill, BsFillCaretUpFill } from \"react-icons/bs\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nclass SongTitleCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title_ascending: true,\r\n            artist_ascending: true,\r\n            album_ascending: true,\r\n            time_ascending: true\r\n        }\r\n    }\r\n    onTitleClickHandler = () => {\r\n        var handler = this.props.onTitleClickHandler;\r\n        handler();\r\n        this.setState({title_ascending: !this.state.title_ascending});\r\n        this.setState({artist_ascending: true});\r\n        this.setState({album_ascending: true});\r\n        this.setState({time_ascending: true});\r\n    }\r\n\r\n    onArtistClickHandler = () => {\r\n        var handler = this.props.onArtistClickHandler;\r\n        handler();\r\n        this.setState({title_ascending: true});\r\n        this.setState({artist_ascending: !this.state.artist_ascending});\r\n        this.setState({album_ascending: true});\r\n        this.setState({time_ascending: true});\r\n    }\r\n\r\n    onAlbumClickHandler = () => {\r\n        var handler = this.props.onAlbumClickHandler;\r\n        handler();\r\n        this.setState({title_ascending: true});\r\n        this.setState({artist_ascending: true});\r\n        this.setState({album_ascending: !this.state.album_ascending});\r\n        this.setState({time_ascending: true});\r\n    }\r\n\r\n    onTimeClickHandler = () => {\r\n        var handler = this.props.onTimeClickHandler;\r\n        handler();\r\n        this.setState({title_ascending: true});\r\n        this.setState({artist_ascending: true});\r\n        this.setState({album_ascending: true});\r\n        this.setState({time_ascending: !this.state.time_ascending});\r\n    }\r\n\r\n    placeholder = () => {\r\n\r\n    }\r\n    render() {\r\n        var style_class = \"\";\r\n        var onTitleClickHandler = \"\"\r\n        var onArtistClickHandler = \"\"\r\n        var onAlbumClickHandler = \"\"\r\n        var onTimeClickHandler = \"\"\r\n        if(this.props.reorder_mode){\r\n            style_class = \"reorder-mode-title\"\r\n            onTitleClickHandler = this.onTitleClickHandler\r\n            onArtistClickHandler = this.onArtistClickHandler\r\n            onAlbumClickHandler = this.onAlbumClickHandler\r\n            onTimeClickHandler = this.onTimeClickHandler\r\n        }else{\r\n            style_class = \"non-reorder-mode-title\"\r\n            onTitleClickHandler = this.placeholder\r\n            onArtistClickHandler = this.placeholder\r\n            onAlbumClickHandler = this.placeholder\r\n            onTimeClickHandler = this.placeholder\r\n        }\r\n\r\n        var title_arrow = \"\"\r\n        var artist_arrow = \"\"\r\n        var album_arrow = \"\"\r\n        var time_arrow = \"\"\r\n        \r\n        if(this.props.reorder_mode){\r\n            if(this.state.title_ascending){\r\n                // up arrow\r\n                title_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretUpFill/>\r\n                </IconContext.Provider>\r\n            }else{\r\n                // down arrow\r\n                title_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretDownFill/>\r\n                </IconContext.Provider>\r\n            }\r\n\r\n            if(this.state.artist_ascending){\r\n                // up arrow\r\n                artist_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretUpFill/>\r\n                </IconContext.Provider>\r\n            }else{\r\n                // down arrow\r\n                artist_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretDownFill/>\r\n                </IconContext.Provider>\r\n            }\r\n\r\n            if(this.state.album_ascending){\r\n                // up arrow\r\n                album_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretUpFill/>\r\n                </IconContext.Provider>\r\n            }else{\r\n                // down arrow\r\n                album_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretDownFill/>\r\n                </IconContext.Provider>\r\n            }\r\n\r\n            if(this.state.time_ascending){\r\n                // up arrow\r\n                time_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretUpFill/>\r\n                </IconContext.Provider>\r\n            }else{\r\n                // down arrow\r\n                time_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretDownFill/>\r\n                </IconContext.Provider>\r\n            }\r\n        }\r\n        \r\n       \r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"border-bottom-accent\">\r\n                        <Col xs={1}>\r\n                            {/* Like */}\r\n                        </Col>\r\n                        <Col xs={3} className={style_class} onClick={onTitleClickHandler}>\r\n                            <span>Title</span> {title_arrow}\r\n                        </Col>\r\n                        <Col xs={2} className={style_class} onClick={onArtistClickHandler}>\r\n                            <span>Artist</span> {artist_arrow}\r\n                        </Col>\r\n                        <Col xs={3} className={style_class} onClick={onAlbumClickHandler}>\r\n                            <span>Album</span> {album_arrow}\r\n                        </Col>\r\n                        <Col xs={2} className={style_class} onClick={onTimeClickHandler}>\r\n                            <span>Time</span> {time_arrow}\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                            Options\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SongTitleCard;\r\n","import React, { useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from '../../tempData/AbbeyRoad.jpg'\r\nimport default_image from '../../tempData/default_image.png'\r\nimport { MdPlayCircleOutline, MdMoreHoriz} from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport { BsTrashFill } from \"react-icons/bs\";\r\nimport gql from 'graphql-tag'\r\nimport {Mutation} from 'react-apollo'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport UserAPI from \"../../apis/UserAPI\";\r\nimport PlaylistSongCard from \"./PlaylistSongCard.js\";\r\nimport SongTitleCard from './SongTitleCard';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Reorder, {\r\n    reorder,\r\n    reorderImmutable,\r\n    reorderFromTo,\r\n    reorderFromToImmutable\r\n  } from 'react-reorder';\r\n\r\n\r\nconst REMOVE_PLAYLIST = gql`\r\n    mutation removePlaylist($userId: String!\r\n                            $playlistId: String!\r\n        ) {\r\n        removePlaylist(id: $userId\r\n                    playlistId: $playlistId){\r\n                        _id\r\n                    }\r\n    }\r\n`;\r\n\r\nconst REMOVE_MUSICLIST = gql`\r\n    mutation removeMusicList($playlistId: String!\r\n        ) {\r\n            removeMusicList(id: $playlistId){\r\n                _id\r\n            }\r\n    }\r\n`;\r\n\r\nvar options = [\r\n    'Make Private',  // should toggle with Make Public\r\n    // 'Edit Details',\r\n    // 'Delete',\r\n    'Share'\r\n  ];\r\n\r\nexport default function DisplayPlaylistScreen(props){\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n    const [musicList, setMusicList] = React.useState(null);\r\n    const [musics, setMusics] = React.useState([]);\r\n    const [owner, setOwner] = React.useState(null);\r\n    const [reorder_mode, setReOrderMode] = React.useState(false);\r\n    const [total_length, setTotalLength] = React.useState(0);\r\n    const [title_ascending, setTitleAscending] = React.useState(true);\r\n    const [artist_ascending, setArtistAscending] = React.useState(true);\r\n    const [album_ascending, setAlbumAscending] = React.useState(true);\r\n    const [time_ascending, setTimeAscending] = React.useState(true);\r\n    const [modal_content, setModalContent] = React.useState(null);\r\n    const [page, setPage] = React.useState(0);\r\n\r\n    var userId = localStorage.getItem('userId');\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const updateModalContentHandler = (content) => {\r\n        setModalContent(content);\r\n    }\r\n\r\n    const changePageHandler = (event, value)=>{\r\n        console.log(\"previous page:\"+page)\r\n        setPage(value);\r\n        console.log(\"clicked :\"+value);\r\n        \r\n    }\r\n\r\n    const onSongCardClick = (index) => {\r\n        var queue = [];\r\n        queue = Array.from(musics);\r\n        localStorage.setItem('queue', JSON.stringify(queue));\r\n        var loadQueueSongsToAudioPlayerCallBack = props.loadQueueSongsToAudioPlayer;\r\n        if(queue && index < queue.length )\r\n            loadQueueSongsToAudioPlayerCallBack(queue[index]);\r\n    }\r\n\r\n    const updatePlaylist = async () => {  // use setstate to trigger re-render\r\n        try{\r\n            const response = await UserAPI.get(\"/musicList/\"+props.match.params.id);\r\n            if(response.data.status === \"success\"){ // search success\r\n                setMusicList(response.data.musicList);\r\n                console.log(\"updatePlaylist\", response.data.musicList);\r\n                var musics = [];\r\n                var music_length = 0;\r\n                for(let i = 0; i < response.data.musicList.musics.length; i++){\r\n                    let id = response.data.musicList.musics[i];\r\n                    const song_response = await UserAPI.get(\"/music/\"+id);\r\n                    if(song_response.data.status === \"success\"){ // search success\r\n                        musics.push(song_response.data.music);\r\n                        music_length += song_response.data.music.length;\r\n                    }else{\r\n                        console.log(\"error searching song\", id);\r\n                    }\r\n                }\r\n                setMusics(Array.from(musics)); // deep copy\r\n                setTotalLength(music_length);\r\n                const owner_response = await UserAPI.get(\"/user/\"+response.data.musicList.owner);  // get owner's info\r\n                if(owner_response.data.status === \"success\"){ // search success\r\n                    setOwner(owner_response.data.user);\r\n                }\r\n                console.log(\"owner\", owner_response.data.user);\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const handleMenuItemClick = async (event, index, isPublic, isOwner) => {\r\n        setSelectedIndex(index);\r\n        setAnchorEl(null);\r\n        var mode = options[index]; // Make Public/Make Private/Edit Details/Share/Fork\r\n\r\n        if(mode === \"Make Public\" || mode === \"Make Private\"){  // make public/private\r\n            if(isOwner){\r\n                if(isPublic){ // currently is public, once click, it'll become private, so next display text will be make public\r\n                    options[0] = \"Make Public\";\r\n                }else{\r\n                    options[0] = \"Make Private\";\r\n                }\r\n                try{\r\n                    const response = await UserAPI.post(\"/setIsPublic\", {\r\n                        id: musicList._id,\r\n                        isPublic: !isPublic\r\n                    });\r\n                    if(response.data.status === \"success\"){ // search success\r\n                        console.log(\"update isPublic success\");\r\n                        updatePlaylist();\r\n                    }\r\n                }catch(err){\r\n                    console.log(err);\r\n                }\r\n            }else{\r\n                alert(\"you do not own the playlist\")\r\n            }\r\n        }else if(mode === \"Edit Details\"){ // Edit Details\r\n\r\n        // }else if(index === 2){ // Delete this playlist\r\n            \r\n        }else if(mode === \"Share\"){ // share\r\n\r\n        }else if(mode === \"Fork\"){ // Fork\r\n\r\n        }\r\n    };\r\n\r\n    const onPlayClick = () =>{\r\n        var queue = [];\r\n        queue = Array.from(musics);\r\n        if(queue && queue.length > 0)\r\n            localStorage.setItem('queue', JSON.stringify(queue));\r\n        var loadQueueSongsToAudioPlayerCallBack = props.loadQueueSongsToAudioPlayer;\r\n        if(queue && queue.length > 0)\r\n            loadQueueSongsToAudioPlayerCallBack(queue[0]);\r\n    }\r\n\r\n    const onDeleteClick = (e, removePlaylist, removeMusicList) => {\r\n        if(localStorage.getItem('isSignedIn')){\r\n            var modal = document.getElementById(\"main_modal\");\r\n            if(modal){\r\n                modal.style.display = \"block\";\r\n                var updateMainModalContentHandler = props.updateMainModalContentHandler;\r\n                var content = <div>\r\n                    <h3>Are you sure to delete the playlist \"{musicList.musicListName}\"?</h3>\r\n                    <Button className=\"search-btn\" onClick={(e) => onDeleteConfirm(e, removePlaylist, removeMusicList)}>Confirm</Button>\r\n                    <Button className=\"cancel-btn\" onClick={closeMainModal}>Cancel</Button>\r\n                    </div>\r\n                updateMainModalContentHandler(content);\r\n            }\r\n        }else{\r\n            alert(\"Please sign in first!\");\r\n        }\r\n    }\r\n    const onDeleteConfirm = async (e, removePlaylist, removeMusicList) =>{\r\n        e.preventDefault();\r\n        await removePlaylist({\r\n            variables:{\r\n                userId: userId,\r\n                playlistId: props.match.params.id\r\n            }\r\n        });\r\n        await removeMusicList({\r\n            variables:{\r\n                playlistId: props.match.params.id\r\n            }\r\n        });\r\n        closeMainModal();\r\n        props.history.push('/playlists');\r\n    \r\n    }\r\n\r\n    const closeMainModal = () =>{\r\n        var modal = document.getElementById(\"main_modal\");\r\n        modal.style.display = \"none\";\r\n    }\r\n\r\n    const onTitleClickHandler = () => {\r\n        console.log(\"handler triggered\");\r\n        if(musics){\r\n            var coeff = 1;  // to toggle ascending/descending order\r\n            if(!title_ascending){\r\n                coeff = -1;\r\n            }\r\n            musics.sort((music1, music2)=>{\r\n                if(music1.musicName < music2.musicName){\r\n                    return -1 * coeff;\r\n                }else if(music1.musicName > music2.musicName){\r\n                    return 1 * coeff;\r\n                }else{\r\n                    return 0;\r\n                }\r\n            });\r\n            setMusics([...musics]);\r\n            setTitleAscending(!title_ascending);\r\n            setArtistAscending(true);\r\n            setAlbumAscending(true);\r\n            setTimeAscending(true);\r\n        }\r\n    }\r\n\r\n    const onArtistClickHandler = () => {\r\n        console.log(\"handler triggered\");\r\n        if(musics){\r\n            var coeff = 1;  // to toggle ascending/descending order\r\n            if(!artist_ascending){\r\n                coeff = -1;\r\n            }\r\n            musics.sort((music1, music2)=>{\r\n                if(music1.artist < music2.artist){\r\n                    return -1 * coeff;\r\n                }else if(music1.artist > music2.artist){\r\n                    return 1 * coeff;\r\n                }else{\r\n                    return 0;\r\n                }\r\n            });\r\n            setMusics([...musics]);\r\n            setTitleAscending(true);\r\n            setArtistAscending(!artist_ascending);\r\n            setAlbumAscending(true);\r\n            setTimeAscending(true);\r\n        }\r\n    }\r\n\r\n    const onAlbumClickHandler = () => {\r\n        console.log(\"handler triggered\");\r\n        if(musics){\r\n            var coeff = 1;  // to toggle ascending/descending order\r\n            if(!album_ascending){\r\n                coeff = -1;\r\n            }\r\n            musics.sort((music1, music2)=>{\r\n                if(music1.album < music2.album){\r\n                    return -1 * coeff;\r\n                }else if(music1.album > music2.album){\r\n                    return 1 * coeff;\r\n                }else{\r\n                    return 0;\r\n                }\r\n            });\r\n            setMusics([...musics]);\r\n            setTitleAscending(true);\r\n            setArtistAscending(true);\r\n            setAlbumAscending(!album_ascending);\r\n            setTimeAscending(true);\r\n        }\r\n    }\r\n\r\n    const onTimeClickHandler = () => {\r\n        console.log(\"handler triggered\");\r\n        if(musics){\r\n            var coeff = 1;  // to toggle ascending/descending order\r\n            if(!time_ascending){\r\n                coeff = -1;\r\n            }\r\n            musics.sort((music1, music2)=>{\r\n                if(music1.length < music2.length){\r\n                    return -1 * coeff;\r\n                }else if(music1.length > music2.length){\r\n                    return 1 * coeff;\r\n                }else{\r\n                    return 0;\r\n                }\r\n            });\r\n            setMusics([...musics]);\r\n            setTitleAscending(true);\r\n            setArtistAscending(true);\r\n            setAlbumAscending(true);\r\n            setTimeAscending(!time_ascending);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                setPage(1);\r\n                const response = await UserAPI.get(\"/musicList/\"+props.match.params.id);\r\n                if(response.data.status === \"success\"){ // search success\r\n                    // console.log(\"success\");\r\n                    // console.log(\"musiclist is\", response.data.musicList);\r\n                    setMusicList(response.data.musicList);\r\n                    var musics = [];\r\n                    var music_length = 0;\r\n                    for(let i = 0; i < response.data.musicList.musics.length; i++){\r\n                        let id = response.data.musicList.musics[i];\r\n                        const song_response = await UserAPI.get(\"/music/\"+id);\r\n                        if(song_response.data.status === \"success\"){ // search success\r\n                            musics.push(song_response.data.music);\r\n                            music_length += song_response.data.music.length;\r\n                        }else{\r\n                            console.log(\"error searching song\", id);\r\n                        }\r\n                    }\r\n                    // console.log(musics);\r\n                    setMusics(Array.from(musics)); // deep copy\r\n                    setTotalLength(music_length);\r\n                    const owner_response = await UserAPI.get(\"/user/\"+response.data.musicList.owner);  // get owner's info\r\n                    if(owner_response.data.status === \"success\"){ // search success\r\n                        setOwner(owner_response.data.user);\r\n                    }\r\n                    // console.log(owner_response.data.user);\r\n                }else{ // somehow failed\r\n    \r\n                }\r\n            }catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        if(owner){\r\n            if(userId === owner._id){\r\n                options = [\r\n                    'Make Private',  // should toggle with Make Public\r\n                    // 'Edit Details',\r\n                    // 'Delete',\r\n                    'Share'\r\n                  ];\r\n            }else{\r\n                options = [\r\n                    'Fork',\r\n                    'Share'\r\n                ];\r\n                \r\n            }\r\n        }\r\n      }, [owner])\r\n\r\n      // re render when new props received\r\n      useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                setPage(1);\r\n                const response = await UserAPI.get(\"/musicList/\"+props.match.params.id);\r\n                if(response.data.status === \"success\"){ // search success\r\n                    // console.log(\"success\");\r\n                    // console.log(\"musiclist is\", response.data.musicList);\r\n                    setMusicList(response.data.musicList);\r\n                    var musics = [];\r\n                    var music_length = 0;\r\n                    for(let i = 0; i < response.data.musicList.musics.length; i++){\r\n                        let id = response.data.musicList.musics[i];\r\n                        const song_response = await UserAPI.get(\"/music/\"+id);\r\n                        if(song_response.data.status === \"success\"){ // search success\r\n                            musics.push(song_response.data.music);\r\n                            music_length += song_response.data.music.length;\r\n                        }else{\r\n                            console.log(\"error searching song\", id);\r\n                        }\r\n                    }\r\n                    // console.log(musics);\r\n                    setMusics(Array.from(musics)); // deep copy\r\n                    setTotalLength(music_length);\r\n                    const owner_response = await UserAPI.get(\"/user/\"+response.data.musicList.owner);  // get owner's info\r\n                    if(owner_response.data.status === \"success\"){ // search success\r\n                        setOwner(owner_response.data.user);\r\n                    }\r\n                    // console.log(owner_response.data.user);\r\n                }else{ // somehow failed\r\n    \r\n                }\r\n            }catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n      }, [props.match.params.id]);\r\n    \r\n    function onReorder (event, previousIndex, nextIndex, fromId, toId) {\r\n        setMusics(reorder(musics, previousIndex, nextIndex));\r\n    }\r\n\r\n    const onReOrderClick = () => {\r\n        setReOrderMode(true);\r\n    }\r\n\r\n    const onSaveClick = async () => {\r\n        if(reorder_mode){\r\n            // save changes to backend\r\n            var musicIDs = [];\r\n            for(let i = 0; i < musics.length; i++){\r\n                musicIDs.push(musics[i]._id);\r\n            }\r\n            try{\r\n                const response = await UserAPI.post(\"/updateMusicList\", {\r\n                    id: musicList._id,\r\n                    musics: musicIDs\r\n                });\r\n                if(response.data.status === \"success\"){ // search success\r\n                    // console.log(\"update isPublic success\");\r\n                    // var updatePlaylist = props.updatePlaylist;\r\n                    // updatePlaylist();\r\n                }else{\r\n                    console.log(\"error\");\r\n                }\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n            setReOrderMode(false);  // turn off reorder_mode\r\n        }else{\r\n            console.log(\"won't able to save\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const onModalClose = () =>{\r\n        var modal = document.getElementById(\"modal\");\r\n        modal.style.display = \"none\";\r\n    }\r\n\r\n\r\n    let deleteButton = null;\r\n    let reorderButtons = null;\r\n    let reorder_class = \"\"\r\n    let save_class = \"\"\r\n    if(reorder_mode){  // if mode is on\r\n        reorder_class = \"search-btn disabled\";\r\n        save_class = \"search-btn\"\r\n    }else{\r\n        reorder_class = \"search-btn\";\r\n        save_class = \"search-btn disabled\"\r\n    }\r\n    if(musicList && owner){\r\n        if (userId === owner._id) {\r\n            deleteButton = <Mutation mutation={REMOVE_PLAYLIST}>\r\n                    {(removePlaylist, { loading, error }) => \r\n                    <Mutation mutation={REMOVE_MUSICLIST}>\r\n                            {(removeMusicList, { loading, error }) => \r\n                                <BsTrashFill style={{'cursor':'pointer'}} onClick={(e) => onDeleteClick(e,removePlaylist, removeMusicList )}/> }\r\n                    </Mutation>}\r\n            </Mutation>\r\n            reorderButtons =  <div>\r\n                <Button className={reorder_class} onClick={onReOrderClick}>Reorder Songs</Button>\r\n                <Button className={save_class} onClick={onSaveClick}>Save Changes</Button>\r\n                </div>       \r\n        }\r\n        var songcards = null;\r\n        if(reorder_mode){\r\n            songcards = <Reorder\r\n                reorderId=\"my-list\" // Unique ID that is used internally to track this list (required)\r\n                reorderGroup=\"reorder-group\" // A group ID that allows items to be dragged between lists of the same group (optional)\r\n                component=\"div\"\r\n                placeholderClassName=\"placeholder\" // Class name to be applied to placeholder elements (optional), defaults to 'placeholder'\r\n                draggedClassName=\"dragged\" // Class name to be applied to dragged elements (optional), defaults to 'dragged'\r\n                lock=\"horizontal\" // Lock the dragging direction (optional): vertical, horizontal (do not use with groups)\r\n                holdTime={0} // Default hold time before dragging begins (mouse & touch) (optional), defaults to 0\r\n                onReorder={onReorder} // Callback when an item is dropped (you will need this to update your state)\r\n                autoScroll={true} // Enable auto-scrolling when the pointer is close to the edge of the Reorder component (optional), defaults to true\r\n                disabled={false} // Disable reordering (optional), defaults to false\r\n                disableContextMenus={true} // Disable context menus when holding on touch devices (optional), defaults to true\r\n            >\r\n                {musics\r\n                .map((music, index) => (\r\n                    <div style={{'cursor':'move'}} key={music._id}>\r\n                        <PlaylistSongCard\r\n                            reorder_mode={reorder_mode}\r\n                            updateModalContentHandler={updateModalContentHandler}\r\n                            updatePlaylist={updatePlaylist} \r\n                            musicListId={musicList._id} \r\n                            song={music}>\r\n                        </PlaylistSongCard>\r\n                    </div>\r\n                ))}\r\n            </Reorder>\r\n        }else{\r\n            if(musics.length > 0){\r\n                songcards = <div>{musics.slice((page-1)*10,page*10)\r\n                    .map((music, index) => (\r\n                    <div key={music._id}>\r\n                        <PlaylistSongCard\r\n                            reorder_mode={reorder_mode}\r\n                            updateModalContentHandler={updateModalContentHandler}\r\n                            updatePlaylist={updatePlaylist}\r\n                            musicListId={musicList._id}\r\n                            index={index}\r\n                            onSongCardClick={onSongCardClick}\r\n                            song={music}>\r\n                        </PlaylistSongCard></div>\r\n                ))}</div>\r\n            }else{\r\n                songcards =\r\n                <div>\r\n                    <center>\r\n                    <h2>This playlist is empty.</h2>\r\n                    <Link to=\"/search\"><Button style={{'color':'white'}} className=\"search-btn\">Go find some songs</Button></Link>\r\n                    </center>\r\n                </div>\r\n            }\r\n           \r\n        }\r\n        var playlist_type = \"\";\r\n        if(userId === owner._id){\r\n            if(!musicList.isPublic){\r\n                playlist_type = \"Private Playlist\";\r\n                options[0] = \"Make Public\";\r\n            }else{\r\n                playlist_type = \"Public Playlist\";\r\n                options[0] = \"Make Private\";\r\n            }\r\n        }\r\n        \r\n        var hours = 0;\r\n        hours = Math.floor(total_length / 3600);\r\n        if(hours < 10) hours = \"0\"+hours;\r\n        var minutes = 0;\r\n        minutes = Math.floor(total_length / 60);\r\n        if(minutes < 10) minutes = \"0\"+minutes;\r\n        var seconds = 0;\r\n        seconds = Math.floor(total_length % 60);\r\n        if(seconds < 10) seconds = \"0\"+seconds;\r\n        return(\r\n            <div>\r\n                <Row>\r\n                    <img className=\"playlist-image\" src={default_image} width={175} height={175} alt=\"\">\r\n                    </img>\r\n                    <Col>\r\n                        <h1 style={{fontWeight: \"bold\"}} >{musicList.musicListName} </h1>              \r\n                        <span>by </span><Link to={\"/profile/\"+owner._id}><span style={{'fontSize':'28px'}}>{owner.nickName}</span></Link>\r\n                        <h4 style={{fontWeight: \"bold\"}} >{musics.length} Songs | {hours}h {minutes}m {seconds}s</h4>\r\n                        <h4 style={{fontWeight: \"bold\"}}> {playlist_type}</h4>\r\n                    </Col>\r\n                </Row>\r\n                <Row xs={10}>\r\n                    <IconContext.Provider value={{ color: \"#F06E9C\", size: '50px' }}>\r\n                        <IconButton\r\n                            aria-label=\"play\"\r\n                            onClick={onPlayClick}\r\n                        >\r\n                            <MdPlayCircleOutline/>\r\n                        </IconButton>\r\n                        { reorderButtons }\r\n                        {/* <AiOutlinePlusCircle/> */}\r\n                        {deleteButton}\r\n                        <IconButton\r\n                        aria-label=\"more\"\r\n                        aria-controls=\"menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleClick}\r\n                        >\r\n                        \r\n                            <MdMoreHoriz/>\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            {options.map((option, index) => (\r\n                                <MenuItem\r\n                                    key={option}\r\n                                    onClick={(event) => handleMenuItemClick(event, index, \r\n                                        musicList.isPublic, (userId === owner._id)\r\n                                    )}\r\n                                >\r\n                                    {option}\r\n                                </MenuItem>)\r\n                            )}\r\n                        </Menu>\r\n                    </IconContext.Provider>\r\n                </Row>\r\n                \r\n                <SongTitleCard\r\n                reorder_mode={reorder_mode}\r\n                onTitleClickHandler={onTitleClickHandler}\r\n                onArtistClickHandler={onArtistClickHandler}\r\n                onAlbumClickHandler={onAlbumClickHandler}\r\n                onTimeClickHandler={onTimeClickHandler}\r\n                ></SongTitleCard>\r\n                { songcards }\r\n                <Pagination count={parseInt(musics.length/10+(musics.length%10 > 0?1:0))} shape=\"rounded\" size=\"large\" onChange={changePageHandler}/>\r\n\r\n                <div id=\"modal\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span onClick={onModalClose} className=\"close\">&times;</span>\r\n                        { modal_content }\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n    \r\n        );\r\n    }else{\r\n        return(\r\n            <div>Loading...</div>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\n","import React, { Component, useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { MdPlayCircleOutline, MdMoreHoriz, MdDragHandle} from \"react-icons/md\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { IconContext } from \"react-icons\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport UserAPI from \"../../apis/UserAPI\";\r\n\r\nvar options = [\r\n    // 'Save to Liked Songs',\r\n    'Add to Playlist',\r\n    'Share',\r\n    'Remove from Queue'\r\n  ];\r\n\r\n\r\nexport default function QueueSongCard(props){\r\n    var song = props.song;\r\n    var modal_content = null;\r\n    var userId = localStorage.getItem('userId');\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const onPlayClick = () => {\r\n        var index = props.index;\r\n        var onSongCardClick = props.onSongCardClick;\r\n        onSongCardClick(index);\r\n    }\r\n\r\n    const addSongToMusicList = async (e, songID, musicListID) => {\r\n        console.log(songID + \" \" + musicListID);\r\n        try{\r\n            const addSong_response = await UserAPI.post(\"/addSong\", {\r\n                musicListID,\r\n                songID\r\n            });\r\n            if(addSong_response.data.status === \"success\"){  // close the modal\r\n                var modal = document.getElementById(\"modal\");\r\n                if(modal)\r\n                    modal.style.display = \"none\";\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleMenuItemClick = async (event, index) => {\r\n        setSelectedIndex(index);\r\n        setAnchorEl(null);\r\n        var mode = \"\"\r\n        \r\n        // if(index === 0){ // add to liked songs\r\n        //     mode = \"add_like\";\r\n        // }else \r\n        \r\n        if(index === 0){ // add to playlist\r\n            mode = \"add_playlist\";\r\n        }else if(index === 1){ // share\r\n            mode = \"share\";\r\n        }else if(index === 2){  // remove\r\n            mode = \"remove\";\r\n        }\r\n\r\n        if(mode === \"add_like\"){ // add to liked songs\r\n\r\n        }else if(mode === \"add_playlist\"){ // add to playlist\r\n            if(song && userId){\r\n                // alert(\"hi\" + song.name);\r\n                // console.log(song.name, \"asdad\");\r\n                var modal = document.getElementById(\"modal\");\r\n                if(modal){\r\n                    modal.style.display = \"block\";\r\n                    var updateModalContentHandler = props.updateModalContentHandler;\r\n                    try{\r\n                        const musicLists_response = await UserAPI.get(\"/user/musicLists/\"+userId);\r\n                        if(musicLists_response.data.status === \"success\"){\r\n                            var musicListsIDs = musicLists_response.data.musicLists;\r\n                            var musicLists = [];\r\n                            for(let i = 0; i < musicListsIDs.length; i++){\r\n                                const musicList_response = await UserAPI.get(\"/musicList/\"+musicListsIDs[i]);\r\n                                if(musicList_response.data.status === \"success\"){\r\n                                    musicLists.push(musicList_response.data.musicList);\r\n                                }\r\n                            }\r\n                            modal_content = musicLists.map((musicList, index) => {\r\n                                return(\r\n                                    <div onClick={(e)=> addSongToMusicList(e, song._id, musicList._id)} className=\"playlist-card\">\r\n                                        <div>{musicList.musicListName}</div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            updateModalContentHandler(modal_content);\r\n                        }\r\n                    }catch(err){\r\n                        console.log(err);\r\n                    }\r\n                }   \r\n            }\r\n        }else if(mode === \"share\"){ // share\r\n\r\n        }else if(mode === \"remove\"){  // remove\r\n            if(song){\r\n                // alert(\"hi\" + song.name+ \" \"+song._id);\r\n                let queue = JSON.parse(localStorage.getItem('queue'));\r\n                console.log(\"before remove\"+queue);\r\n                let index = 0;\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    const music = queue[i];\r\n                    if(music._id === song._id){\r\n                        index = i;\r\n                        break;\r\n                    }\r\n                }\r\n                console.log(index);\r\n                if(index > -1){\r\n                    queue.splice(index, 1);\r\n                }\r\n                console.log(\"after remove\"+queue);\r\n                localStorage.setItem('queue', JSON.stringify(queue))\r\n                var updateMusicsHandler = props.updateMusicsHandler;\r\n                updateMusicsHandler(queue);\r\n                \r\n                \r\n            }\r\n        }\r\n    };\r\n    \r\n    if(song){\r\n        var minutes = 0;\r\n        var seconds = 0;\r\n        if(song.length){\r\n            minutes = Math.floor((song.length) / 60);\r\n            if(minutes < 10) minutes = \"0\"+minutes;\r\n            seconds = Math.floor((song.length) % 60);\r\n            if(seconds < 10) seconds = \"0\"+seconds;\r\n        }\r\n        var artist = \"N/A\";\r\n        if(song.artist){\r\n            artist = song.artist\r\n        }\r\n        var album = \"N/A\";\r\n        if(song.album){\r\n            album = song.album\r\n        }\r\n        let title = \"N/A\"\r\n        if(song.musicName){\r\n            title = song.musicName\r\n        }\r\n        var drag_icon = \"\"\r\n        if(props.reorder_mode){\r\n            drag_icon = \r\n            <IconContext.Provider value={{ color: \"#F06E9C\", size: '25px' }}>\r\n                <MdDragHandle/>\r\n            </IconContext.Provider>\r\n        }\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"border-bottom-accent\">\r\n                        <Col xs={1}>\r\n                            { drag_icon }\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            {/* {data.music[id].musicName} */}\r\n                            { title }\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            {/* {data.music[id].artist} */}\r\n                            { artist }\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            {/* {data.music[id].album} */}\r\n                            { album }\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                            {/* 0{data.music[id].length / 60}:{data.music[id].length % 60}0 */}\r\n                            { minutes }:{ seconds }\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                            <IconButton\r\n                                aria-label=\"play-song\"\r\n                                onClick={(e) => onPlayClick(e)}\r\n                            >\r\n                                <IconContext.Provider value={{ color: \"#F06E9C\", size: '30px' }}>\r\n                                    <MdPlayCircleOutline/>\r\n                                </IconContext.Provider>\r\n                            </IconButton>\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                        >\r\n                            <IconContext.Provider value={{ color: \"#F06E9C\", size: '30px' }}>\r\n                                <MdMoreHoriz/>\r\n                            </IconContext.Provider>\r\n                        </IconButton>\r\n                            <Menu\r\n                                id=\"menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                            >\r\n                                {options.map((option, index) => (\r\n                                <MenuItem\r\n                                    key={option}\r\n                                    onClick={(event) => handleMenuItemClick(event, index)}\r\n                                >\r\n                                    {option}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Menu>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }else{\r\n        return <div>error</div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { BsFillCaretDownFill, BsFillCaretUpFill } from \"react-icons/bs\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nclass SongTitleCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title_ascending: true,\r\n            artist_ascending: true,\r\n            album_ascending: true,\r\n            time_ascending: true\r\n        }\r\n    }\r\n    onTitleClickHandler = () => {\r\n        var handler = this.props.onTitleClickHandler;\r\n        handler();\r\n        this.setState({title_ascending: !this.state.title_ascending});\r\n        this.setState({artist_ascending: true});\r\n        this.setState({album_ascending: true});\r\n        this.setState({time_ascending: true});\r\n    }\r\n\r\n    onArtistClickHandler = () => {\r\n        var handler = this.props.onArtistClickHandler;\r\n        handler();\r\n        this.setState({title_ascending: true});\r\n        this.setState({artist_ascending: !this.state.artist_ascending});\r\n        this.setState({album_ascending: true});\r\n        this.setState({time_ascending: true});\r\n    }\r\n\r\n    onAlbumClickHandler = () => {\r\n        var handler = this.props.onAlbumClickHandler;\r\n        handler();\r\n        this.setState({title_ascending: true});\r\n        this.setState({artist_ascending: true});\r\n        this.setState({album_ascending: !this.state.album_ascending});\r\n        this.setState({time_ascending: true});\r\n    }\r\n\r\n    onTimeClickHandler = () => {\r\n        var handler = this.props.onTimeClickHandler;\r\n        handler();\r\n        this.setState({title_ascending: true});\r\n        this.setState({artist_ascending: true});\r\n        this.setState({album_ascending: true});\r\n        this.setState({time_ascending: !this.state.time_ascending});\r\n    }\r\n\r\n    placeholder = () => {\r\n\r\n    }\r\n    render() {\r\n        var style_class = \"\";\r\n        var onTitleClickHandler = \"\"\r\n        var onArtistClickHandler = \"\"\r\n        var onAlbumClickHandler = \"\"\r\n        var onTimeClickHandler = \"\"\r\n        if(this.props.reorder_mode){\r\n            style_class = \"reorder-mode-title\"\r\n            onTitleClickHandler = this.onTitleClickHandler\r\n            onArtistClickHandler = this.onArtistClickHandler\r\n            onAlbumClickHandler = this.onAlbumClickHandler\r\n            onTimeClickHandler = this.onTimeClickHandler\r\n        }else{\r\n            style_class = \"non-reorder-mode-title\"\r\n            onTitleClickHandler = this.placeholder\r\n            onArtistClickHandler = this.placeholder\r\n            onAlbumClickHandler = this.placeholder\r\n            onTimeClickHandler = this.placeholder\r\n        }\r\n\r\n        var title_arrow = \"\"\r\n        var artist_arrow = \"\"\r\n        var album_arrow = \"\"\r\n        var time_arrow = \"\"\r\n        \r\n        if(this.props.reorder_mode){\r\n            if(this.state.title_ascending){\r\n                // up arrow\r\n                title_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretUpFill/>\r\n                </IconContext.Provider>\r\n            }else{\r\n                // down arrow\r\n                title_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretDownFill/>\r\n                </IconContext.Provider>\r\n            }\r\n\r\n            if(this.state.artist_ascending){\r\n                // up arrow\r\n                artist_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretUpFill/>\r\n                </IconContext.Provider>\r\n            }else{\r\n                // down arrow\r\n                artist_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretDownFill/>\r\n                </IconContext.Provider>\r\n            }\r\n\r\n            if(this.state.album_ascending){\r\n                // up arrow\r\n                album_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretUpFill/>\r\n                </IconContext.Provider>\r\n            }else{\r\n                // down arrow\r\n                album_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretDownFill/>\r\n                </IconContext.Provider>\r\n            }\r\n\r\n            if(this.state.time_ascending){\r\n                // up arrow\r\n                time_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretUpFill/>\r\n                </IconContext.Provider>\r\n            }else{\r\n                // down arrow\r\n                time_arrow = \r\n                <IconContext.Provider value={{ color: \"#F06E9C\", size: '15px' }}>\r\n                    <BsFillCaretDownFill/>\r\n                </IconContext.Provider>\r\n            }\r\n        }\r\n        \r\n       \r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"border-bottom-accent\">\r\n                        <Col xs={1}>\r\n                            {/* Like */}\r\n                        </Col>\r\n                        <Col xs={3} className={style_class} onClick={onTitleClickHandler}>\r\n                            <span>Title</span> {title_arrow}\r\n                        </Col>\r\n                        <Col xs={2} className={style_class} onClick={onArtistClickHandler}>\r\n                            <span>Artist</span> {artist_arrow}\r\n                        </Col>\r\n                        <Col xs={3} className={style_class} onClick={onAlbumClickHandler}>\r\n                            <span>Album</span> {album_arrow}\r\n                        </Col>\r\n                        <Col xs={2} className={style_class} onClick={onTimeClickHandler}>\r\n                            <span>Time</span> {time_arrow}\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                            Options\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SongTitleCard;\r\n","import React, { Component, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from '../../tempData/AbbeyRoad.jpg'\r\nimport default_image from '../../tempData/default_image.png'\r\nimport { MdPlayCircleOutline, MdMoreHoriz} from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport UserAPI from \"../../apis/UserAPI\";\r\nimport QueueSongCard from \"./QueueSongCard.js\";\r\nimport SongTitleCard from './SongTitleCard';\r\nimport { TextField } from '@material-ui/core';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nimport Reorder, {\r\n    reorder,\r\n    reorderImmutable,\r\n    reorderFromTo,\r\n    reorderFromToImmutable\r\n  } from 'react-reorder';\r\n\r\nexport default function QueueScreen(props){\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n    const [musicList, setMusicList] = React.useState(null);\r\n    const [musics, setMusics] = React.useState([]);\r\n    const [owner, setOwner] = React.useState(null);\r\n    const [reorder_mode, setReOrderMode] = React.useState(false);\r\n    const [total_length, setTotalLength] = React.useState(0);\r\n    const [title_ascending, setTitleAscending] = React.useState(true);\r\n    const [artist_ascending, setArtistAscending] = React.useState(true);\r\n    const [album_ascending, setAlbumAscending] = React.useState(true);\r\n    const [time_ascending, setTimeAscending] = React.useState(true);\r\n    const [modal_content, setModalContent] = React.useState(null);\r\n    const [musicListName, setMusicListName] = React.useState(\"\");\r\n    const [page, setPage] = React.useState(0);\r\n\r\n    var userId = localStorage.getItem('userId');\r\n    var queue = JSON.parse(localStorage.getItem('queue'));\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const updateMusicsHandler = (musics_new) => {\r\n        setMusics([...musics_new]);\r\n    }\r\n\r\n    const updateModalContentHandler = (content) => {\r\n        setModalContent(content);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const {target} = e;\r\n        setMusicListName(target.value);\r\n    }\r\n\r\n    const changePageHandler = (event, value)=>{\r\n        setPage(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            console.log(queue)\r\n            setMusics(queue);\r\n            setPage(1);\r\n            var music_length = 0;\r\n            for(let i = 0; i < queue.length; i++){\r\n                if(queue[i])\r\n                    music_length += queue[i].length;\r\n            }\r\n            setTotalLength(music_length);\r\n        }\r\n        fetchData();\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n        var music_length = 0;\r\n        for(let i = 0; i < musics.length; i++){\r\n            if(musics[i])\r\n                music_length += musics[i].length;\r\n        }\r\n        setTotalLength(music_length);\r\n      }, [musics]);\r\n      \r\n    \r\n    function onReorder (event, previousIndex, nextIndex, fromId, toId) {\r\n        setMusics(reorder(musics, previousIndex, nextIndex));\r\n    }\r\n\r\n    const onReOrderClick = () => {\r\n        setReOrderMode(true);\r\n    }\r\n\r\n    const onSaveClick = async () => {\r\n        if(reorder_mode){\r\n            // save playlist order\r\n            localStorage.setItem('queue', JSON.stringify(musics));\r\n            setReOrderMode(false);  // turn off reorder_mode\r\n        }else{\r\n            console.log(\"won't able to save\");\r\n        }\r\n    }\r\n\r\n    const saveAsMusicListHandler = async (e, musicsIDs) => {\r\n        var name = document.getElementById('musicListName').value;  // get value of input field\r\n        if(name === \"\") return;\r\n        try{\r\n            const response = await UserAPI.post('/createMusicListWithMusics', {\r\n                musicListName: name,\r\n                musics: musicsIDs,\r\n                userId\r\n            });\r\n            if(response.data.status === \"success\"){  // add musicListId to user's musicLists\r\n                var musicListId = response.data.musicListId;\r\n                const addMusicListId_response = await UserAPI.post('/addMusicList', {\r\n                    musicListId,\r\n                    userId\r\n                });\r\n                if(addMusicListId_response.data.status === \"success\"){\r\n                    closeModal();\r\n                }\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n        \r\n    }\r\n\r\n    const openModal = (musicsIDs) => {\r\n        if(localStorage.getItem('isSignedIn')){\r\n            var modal = document.getElementById(\"main_modal\");\r\n            if(modal){\r\n                modal.style.display = \"block\";\r\n                var updateModalContentHandler = props.updateModalContentHandler;\r\n                var content = <div>\r\n                    <h2>Create New Playlist</h2>\r\n                    <div style={{\"padding\":\"5px\"}}>\r\n                        <TextField id=\"musicListName\" size=\"small\" placeholder=\"New List\" variant=\"outlined\" onChange={handleChange} />\r\n                    </div>\r\n                    <Button className=\"search-btn\" onClick={(e) => saveAsMusicListHandler(e, musicsIDs)}>Create</Button>\r\n                    <Button className=\"cancel-btn\" onClick={closeModal}>Cancel</Button>\r\n                    </div>\r\n                updateModalContentHandler(content);\r\n            }\r\n        }else{\r\n            alert(\"Please sign in first!\");\r\n        }\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        var modal = document.getElementById(\"main_modal\");\r\n        modal.style.display = \"none\";\r\n    }\r\n\r\n    const onSaveQueueClick = async () => {\r\n        // save queue as a playlist, send info to backend\r\n        \r\n        var musics_IDs = [];\r\n        for(let i = 0; i < musics.length; i++){\r\n            musics_IDs.push(musics[i]._id);\r\n        }\r\n        openModal(musics_IDs);\r\n    }\r\n\r\n    const onClearQueueClick = () => {\r\n        if(localStorage.getItem('isSignedIn')){\r\n            var modal = document.getElementById(\"main_modal\");\r\n            if(modal){\r\n                modal.style.display = \"block\";\r\n                var updateModalContentHandler = props.updateModalContentHandler;\r\n                var content = <div>\r\n                    <h3>Are you sure to clear the queue?</h3>\r\n                    <Button className=\"search-btn\" onClick={onClearQueueConfirm}>Confirm</Button>\r\n                    <Button className=\"cancel-btn\" onClick={closeModal}>Cancel</Button>\r\n                    </div>\r\n                updateModalContentHandler(content);\r\n            }\r\n        }else{\r\n            alert(\"Please sign in first!\");\r\n        }\r\n    }\r\n\r\n    const onClearQueueConfirm = () => {\r\n        var new_queue = [];\r\n        setMusics(new_queue);\r\n        localStorage.setItem('queue', JSON.stringify(new_queue));\r\n        closeModal();\r\n    }\r\n\r\n    const onPlayClick = () =>{\r\n        let queue = localStorage.getItem('queue');\r\n        queue = JSON.parse(queue);\r\n        var loadQueueIndexToAudioPlayerCallBack = props.loadQueueIndexToAudioPlayer;\r\n        if(queue.length > 0)\r\n            loadQueueIndexToAudioPlayerCallBack(0);\r\n    }\r\n\r\n    const onTitleClickHandler = () => {\r\n        console.log(\"handler triggered\");\r\n        if(musics){\r\n            var coeff = 1;  // to toggle ascending/descending order\r\n            if(!title_ascending){\r\n                coeff = -1;\r\n            }\r\n            musics.sort((music1, music2)=>{\r\n                if(music1.musicName < music2.musicName){\r\n                    return -1 * coeff;\r\n                }else if(music1.musicName > music2.musicName){\r\n                    return 1 * coeff;\r\n                }else{\r\n                    return 0;\r\n                }\r\n            });\r\n            setMusics([...musics]);\r\n            setTitleAscending(!title_ascending);\r\n            setArtistAscending(true);\r\n            setAlbumAscending(true);\r\n            setTimeAscending(true);\r\n        }\r\n    }\r\n\r\n    const onArtistClickHandler = () => {\r\n        console.log(\"handler triggered\");\r\n        if(musics){\r\n            var coeff = 1;  // to toggle ascending/descending order\r\n            if(!artist_ascending){\r\n                coeff = -1;\r\n            }\r\n            musics.sort((music1, music2)=>{\r\n                if(music1.artist < music2.artist){\r\n                    return -1 * coeff;\r\n                }else if(music1.artist > music2.artist){\r\n                    return 1 * coeff;\r\n                }else{\r\n                    return 0;\r\n                }\r\n            });\r\n            setMusics([...musics]);\r\n            setTitleAscending(true);\r\n            setArtistAscending(!artist_ascending);\r\n            setAlbumAscending(true);\r\n            setTimeAscending(true);\r\n        }\r\n    }\r\n\r\n    const onAlbumClickHandler = () => {\r\n        console.log(\"handler triggered\");\r\n        if(musics){\r\n            var coeff = 1;  // to toggle ascending/descending order\r\n            if(!album_ascending){\r\n                coeff = -1;\r\n            }\r\n            musics.sort((music1, music2)=>{\r\n                if(music1.album < music2.album){\r\n                    return -1 * coeff;\r\n                }else if(music1.album > music2.album){\r\n                    return 1 * coeff;\r\n                }else{\r\n                    return 0;\r\n                }\r\n            });\r\n            setMusics([...musics]);\r\n            setTitleAscending(true);\r\n            setArtistAscending(true);\r\n            setAlbumAscending(!album_ascending);\r\n            setTimeAscending(true);\r\n        }\r\n    }\r\n\r\n    const onTimeClickHandler = () => {\r\n        console.log(\"handler triggered\");\r\n        if(musics){\r\n            var coeff = 1;  // to toggle ascending/descending order\r\n            if(!time_ascending){\r\n                coeff = -1;\r\n            }\r\n            musics.sort((music1, music2)=>{\r\n                if(music1.length < music2.length){\r\n                    return -1 * coeff;\r\n                }else if(music1.length > music2.length){\r\n                    return 1 * coeff;\r\n                }else{\r\n                    return 0;\r\n                }\r\n            });\r\n            setMusics([...musics]);\r\n            setTitleAscending(true);\r\n            setArtistAscending(true);\r\n            setAlbumAscending(true);\r\n            setTimeAscending(!time_ascending);\r\n        }\r\n    }\r\n\r\n    const onModalClose = () =>{\r\n        var modal = document.getElementById(\"modal\");\r\n        if(modal)\r\n            modal.style.display = \"none\";\r\n    }\r\n\r\n    const onSongCardClick = (index) => {\r\n        let queue = localStorage.getItem('queue');\r\n        queue = JSON.parse(queue);\r\n        var loadQueueIndexToAudioPlayerCallBack = props.loadQueueIndexToAudioPlayer;\r\n        if(queue.length > 0)\r\n            loadQueueIndexToAudioPlayerCallBack(index);\r\n    }\r\n\r\n    let reorderButtons = null;\r\n    let reorder_class = \"\"\r\n    let save_class = \"\"\r\n    if(reorder_mode){  // if mode is on\r\n        reorder_class = \"search-btn disabled\";\r\n        save_class = \"search-btn\"\r\n    }else{\r\n        reorder_class = \"search-btn\";\r\n        save_class = \"search-btn disabled\"\r\n    }\r\n    if(queue !== null){\r\n        reorderButtons =  <>\r\n            <Button className={reorder_class} onClick={onReOrderClick}>Reorder Songs</Button>\r\n            <Button className={save_class} onClick={onSaveClick}>Save Changes</Button>\r\n            </>       \r\n        var songcards = null;\r\n        if(reorder_mode && musics && musics.length > 0){\r\n            songcards = <Reorder\r\n                reorderId=\"my-list\" // Unique ID that is used internally to track this list (required)\r\n                reorderGroup=\"reorder-group\" // A group ID that allows items to be dragged between lists of the same group (optional)\r\n                component=\"div\"\r\n                placeholderClassName=\"placeholder\" // Class name to be applied to placeholder elements (optional), defaults to 'placeholder'\r\n                draggedClassName=\"dragged\" // Class name to be applied to dragged elements (optional), defaults to 'dragged'\r\n                lock=\"horizontal\" // Lock the dragging direction (optional): vertical, horizontal (do not use with groups)\r\n                holdTime={0} // Default hold time before dragging begins (mouse & touch) (optional), defaults to 0\r\n                onReorder={onReorder} // Callback when an item is dropped (you will need this to update your state)\r\n                autoScroll={true} // Enable auto-scrolling when the pointer is close to the edge of the Reorder component (optional), defaults to true\r\n                disabled={false} // Disable reordering (optional), defaults to false\r\n                disableContextMenus={true} // Disable context menus when holding on touch devices (optional), defaults to true\r\n            >\r\n                {musics\r\n                .map((music, index) => (\r\n                    <div style={{'cursor':'move'}} key={music._id}>\r\n                        <QueueSongCard\r\n                        reorder_mode={reorder_mode}\r\n                        updateModalContentHandler={updateModalContentHandler}\r\n                        song={music} \r\n                        updateMusicsHandler={updateMusicsHandler}\r\n                        ></QueueSongCard>\r\n                        </div>\r\n                ))}\r\n            </Reorder>\r\n        }else if(musics && musics.length > 0){\r\n            // console.log('musics are '+ musics);\r\n            songcards = <div>{musics.slice((page-1)*10,page*10)\r\n                .map((music, index) => {\r\n                    if(music){\r\n                        return (\r\n                            <div key={music._id} >\r\n                                <QueueSongCard\r\n                                reorder_mode={reorder_mode}\r\n                                updateModalContentHandler={updateModalContentHandler}\r\n                                song={music}\r\n                                index={index}\r\n                                onSongCardClick={onSongCardClick}\r\n                                updateMusicsHandler={updateMusicsHandler}\r\n                                ></QueueSongCard>\r\n                                </div>\r\n                        )\r\n                    }\r\n                    \r\n                }\r\n                \r\n                \r\n            )}</div>\r\n        }\r\n        var hours = 0;\r\n        hours = Math.floor(total_length / 3600);\r\n        if(hours < 10) hours = \"0\"+hours;\r\n        var minutes = 0;\r\n        minutes = Math.floor(total_length / 60);\r\n        if(minutes < 10) minutes = \"0\"+minutes;\r\n        var seconds = 0;\r\n        seconds = Math.floor(total_length % 60);\r\n        if(seconds < 10) seconds = \"0\"+seconds;\r\n\r\n        return(\r\n            <div>\r\n                <Row>\r\n                    <img className=\"playlist-image\" src={default_image} width={175} height={175} alt=\"\">\r\n                    </img>\r\n                    <Col>\r\n                        <h1 style={{fontWeight: \"bold\"}} > Queue </h1>              \r\n                        <h4 style={{fontWeight: \"bold\"}} >{musics.length} Songs | {hours}h {minutes}m {seconds}s</h4>\r\n                        <Button className=\"search-btn\" onClick={onSaveQueueClick}>Save As Playlist</Button>\r\n                        <Button className=\"search-btn\" onClick={onClearQueueClick}>Clear Queue</Button>\r\n                    </Col>\r\n                </Row>\r\n                <IconButton\r\n                    aria-label=\"play\"\r\n                    onClick={onPlayClick}\r\n                >   \r\n                    <IconContext.Provider value={{ color: \"#F06E9C\", size: '40px'}}>\r\n                        <MdPlayCircleOutline/>\r\n                    </IconContext.Provider>\r\n                </IconButton>\r\n                { reorderButtons }\r\n                \r\n                <SongTitleCard\r\n                reorder_mode={reorder_mode}\r\n                onTitleClickHandler={onTitleClickHandler}\r\n                onArtistClickHandler={onArtistClickHandler}\r\n                onAlbumClickHandler={onAlbumClickHandler}\r\n                onTimeClickHandler={onTimeClickHandler}\r\n                ></SongTitleCard>\r\n                { songcards }\r\n                <Pagination count={parseInt(musics.length/10+(musics.length%10 > 0?1:0))} shape=\"rounded\" size=\"large\" onChange={changePageHandler}/>\r\n                <div id=\"modal\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span onClick={onModalClose} className=\"close\">&times;</span>\r\n                        { modal_content }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n        );\r\n    }else{\r\n        return(\r\n            <div>Loading...</div>\r\n        );\r\n    }\r\n    \r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport data from './Mixtapez_data.json'\r\n\r\nclass LikedSongsScreen extends Component{\r\n    \r\n    render() {\r\n        var songIDs = data.users[0].favorites;\r\n        return(\r\n            <div>\r\n                <br/><h1>Liked Songs</h1>\r\n                \r\n                <br/>\r\n                <Container>\r\n                    <Row className=\"border-bottom-accent\">\r\n                        <Col xs={2}>\r\n                            Like\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            Title\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            Artist\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            Album\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            Time\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            Options\r\n                        </Col>\r\n                    </Row>\r\n                    {songIDs.map(id => {\r\n                        return (\r\n                            <Row className=\"border-bottom-accent\" key={id}>\r\n                                <Col xs={2}>\r\n                                    &#9825;\r\n                                </Col>\r\n                                <Col xs={2}>\r\n                                    {data.music[id].musicName}\r\n                                </Col>\r\n                                <Col xs={2}>\r\n                                    {data.music[id].artist}\r\n                                </Col>\r\n                                <Col xs={2}>\r\n                                    {data.music[id].album}\r\n                                </Col>\r\n                                <Col xs={2}>\r\n                                    0{data.music[id].length / 60}:{data.music[id].length % 60}0\r\n                                </Col>\r\n                                <Col xs={2}>\r\n                                    ...\r\n                                </Col>\r\n                            </Row>\r\n                        )\r\n                    })}\r\n                    \r\n                    <Row className=\"border-bottom-accent\">\r\n                        <Col xs={2}>\r\n                            &#9825;\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            Nice Song\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            Him\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            That album\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            02:02\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            ...\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default LikedSongsScreen;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport {MdMoreHoriz, MdPlayCircleOutline} from \"react-icons/md\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { IconContext } from \"react-icons\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport UserAPI from \"../../apis/UserAPI\";\r\n\r\nconst options = [\r\n    'Add to Queue',\r\n    // 'Save to Liked Songs',\r\n    'Add to Playlist',\r\n    'Share'\r\n  ];\r\n\r\nexport default function SongCard(props){\r\n    var song = props.song;\r\n    var userId = localStorage.getItem('userId');\r\n    var modal_content = null;\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const onPlayClick = async () => {\r\n        if(!localStorage.getItem('isSignedIn')){\r\n            alert(\"Please sign in to use this function.\");\r\n            return;\r\n        }\r\n        let musicName = song.name;\r\n        let artist = song.artists[0].name;\r\n        let URI = song.id;\r\n        let album = song.album.name;\r\n        let length = Math.round(song.duration_ms/1000);\r\n        try{\r\n            const create_response = await UserAPI.post(\"/createMusic\", {musicName,\r\n                URI,\r\n                album,\r\n                length,\r\n                artist});\r\n            if (create_response.data.status === \"success\") {\r\n                var loadQueueIndexToAudioPlayer = props.loadQueueIndexToAudioPlayer;\r\n                var queue = localStorage.getItem('queue');\r\n                if(queue){\r\n                    queue = JSON.parse(queue);\r\n                }else{\r\n                    queue = [];\r\n                }\r\n                const song_response = await UserAPI.get(\"/music/\"+create_response.data.musicId);\r\n                if(song_response.data.status === \"success\"){\r\n                    let found = false;\r\n                    let index = queue.length-1;\r\n                    for(let i = 0; i < queue.length; i++){\r\n                        if(queue[i])\r\n                            if(queue[i]._id === song_response.data.music._id){\r\n                                found = true;\r\n                                index = i;\r\n                            }\r\n                    }\r\n                    if(!found){ // if the song is not in the queue\r\n                        queue.push(song_response.data.music);\r\n                        index = queue.length-1;\r\n                    }else{  // same song already exists, play from that index\r\n\r\n                    }\r\n                    \r\n                    localStorage.setItem('queue', JSON.stringify(queue));\r\n                    loadQueueIndexToAudioPlayer(index);\r\n                }\r\n                \r\n            }\r\n        }catch(err){\r\n\r\n        }\r\n    }\r\n\r\n    const addSongToMusicList = async (e, song, musicListID) => {\r\n        let musicName = song.name;\r\n        let artist = song.artists[0].name;\r\n        let URI = song.id;\r\n        let album = song.album.name;\r\n        let length = Math.round(song.duration_ms/1000);\r\n        \r\n        try{\r\n            const create_response = await UserAPI.post(\"/createMusic\", {musicName,\r\n                URI,\r\n                album,\r\n                length,\r\n                artist});\r\n            if (create_response.data.status === \"success\") {\r\n                let songID = create_response.data.musicId\r\n                const addSong_response = await UserAPI.post(\"/addSong\", {\r\n                    musicListID,\r\n                    songID\r\n                });\r\n                if(addSong_response.data.status === \"success\"){  // close the modal\r\n                    var modal = document.getElementById(\"modal\");\r\n                    if(modal)\r\n                        modal.style.display = \"none\";\r\n                }\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const handleMenuItemClick = async (event, index) => {\r\n        setSelectedIndex(index);\r\n        setAnchorEl(null);\r\n        if(!localStorage.getItem('isSignedIn')){\r\n            alert(\"Please sign in to use this function.\");\r\n            return;\r\n        }\r\n        if(index === 0){  // add to queue\r\n            if(song && userId){\r\n                let queue = localStorage.getItem('queue');\r\n                if(queue){\r\n                    queue = JSON.parse(queue);\r\n                }else{\r\n                    queue = [];\r\n                }\r\n                let musicName = song.name;\r\n                let artist = song.artists[0].name;\r\n                let URI = song.id;\r\n                let album = song.album.name;\r\n                let length = Math.round(song.duration_ms/1000);\r\n                try {\r\n                    const create_response = await UserAPI.post(\"/createMusic\", {musicName,\r\n                        URI,\r\n                        album,\r\n                        length,\r\n                        artist});\r\n                    if (create_response.data.status === \"success\") {\r\n                        console.log(create_response.data.musicId)\r\n                        let id = create_response.data.musicId\r\n                        const song_response = await UserAPI.get(\"/music/\"+id);\r\n                        console.log(id);\r\n                        if(song_response.data.status === \"success\"){\r\n                            if (queue.length > 0) {\r\n                                let contains = queue.map((music)=>{\r\n                                    if (music._id === song_response.data.music._id) {\r\n                                        return true\r\n                                    }else{\r\n                                        return false\r\n                                    }\r\n                                }).reduce((a,b)=>{ return(a||b) });\r\n                                console.log(contains);\r\n                                if (!contains) {\r\n                                    queue.push(song_response.data.music);\r\n                                    localStorage.setItem('queue', JSON.stringify(queue))\r\n                                }\r\n                            }else{\r\n                                queue.push(song_response.data.music);\r\n                                    localStorage.setItem('queue', JSON.stringify(queue))\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n            }\r\n        }\r\n        // else if(index === 1){ // add to liked songs\r\n\r\n        // }\r\n        else if(index === 1){ // add to playlist\r\n            if(song && userId){\r\n                // alert(\"hi\" + song.name);\r\n                // console.log(song.name, \"asdad\");\r\n                var modal = document.getElementById(\"modal\");\r\n                if(modal){\r\n                    var handler = props.childSongIdHandler;\r\n                    // console.log(handler)\r\n                    modal.style.display = \"block\";\r\n                    handler(song.id,song);\r\n\r\n                    var updateModalContentHandler = props.updateModalContentHandler;\r\n                    try{\r\n                        const musicLists_response = await UserAPI.get(\"/user/musicLists/\"+userId);\r\n                        if(musicLists_response.data.status === \"success\"){\r\n                            var musicListsIDs = musicLists_response.data.musicLists;\r\n                            var musicLists = [];\r\n                            for(let i = 0; i < musicListsIDs.length; i++){\r\n                                const musicList_response = await UserAPI.get(\"/musicList/\"+musicListsIDs[i]);\r\n                                if(musicList_response.data.status === \"success\"){\r\n                                    musicLists.push(musicList_response.data.musicList);\r\n                                }\r\n                            }\r\n                            modal_content = musicLists.map((musicList, index) => {\r\n                                return(\r\n                                    <div key={index} onClick={(e)=> addSongToMusicList(e, song, musicList._id)} className=\"playlist-card\">\r\n                                        <div>{musicList.musicListName}</div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            updateModalContentHandler(modal_content);\r\n                        }\r\n                    }catch(err){\r\n                        console.log(err);\r\n                    }\r\n                }\r\n                    \r\n            }\r\n        }else if(index === 2){ // share\r\n\r\n        }\r\n    };\r\n\r\n    \r\n    if(song){\r\n        var minutes = 0;\r\n        minutes = Math.floor((song.duration_ms/1000) / 60);\r\n        if(minutes < 10) minutes = \"0\"+minutes;\r\n        var seconds = 0;\r\n        seconds = Math.floor((song.duration_ms/1000) % 60);\r\n        if(seconds < 10) seconds = \"0\"+seconds;\r\n        var artist = \"N/A\";\r\n        if(song.artists){\r\n            artist = song.artists[0].name\r\n        }\r\n        var album = \"N/A\";\r\n        if(song.album.name){\r\n            album = song.album.name;\r\n        }\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"border-bottom-accent\">\r\n                        <Col xs={1}>\r\n                            {/* &#9825; */}\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            {/* {data.music[id].musicName} */}\r\n                            { song.name }\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            {/* {data.music[id].artist} */}\r\n                            { artist }\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            {/* {data.music[id].album} */}\r\n                            { album }\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                            {/* 0{data.music[id].length / 60}:{data.music[id].length % 60}0 */}\r\n                            { minutes }:{ seconds }\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                            <IconButton\r\n                                aria-label=\"play-song\"\r\n                                onClick={(e) => onPlayClick(e)}\r\n                            >\r\n                                <IconContext.Provider value={{ color: \"#F06E9C\", size: '30px' }}>\r\n                                    <MdPlayCircleOutline/>\r\n                                </IconContext.Provider>\r\n                            </IconButton>\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                        >\r\n                            <IconContext.Provider value={{ color: \"#F06E9C\", size: '30px' }}>\r\n                                <MdMoreHoriz/>\r\n                            </IconContext.Provider>\r\n                        </IconButton>\r\n                            <Menu\r\n                                id=\"menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                            >\r\n                                {options.map((option, index) => (\r\n                                <MenuItem\r\n                                    key={option}\r\n                                    onClick={(event) => handleMenuItemClick(event, index)}\r\n                                >\r\n                                    {option}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Menu>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                \r\n            </div>\r\n        );\r\n    }else{\r\n        return <div>error</div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nclass SongTitleCard extends Component{\r\n    \r\n    render() {\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"border-bottom-accent\">\r\n                        <Col xs={1}>\r\n                            {/* Like */}\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            Title\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            Artist\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            Album\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            Time\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                            Options\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SongTitleCard;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nclass UserCard extends Component{\r\n    \r\n    render() {\r\n        var user = this.props.user;\r\n        if(user){\r\n            return(\r\n                <div>\r\n                    <Link to={\"/profile/\"+user._id}>\r\n                        <Container>\r\n                            <Row className=\"border-bottom-accent\">\r\n                                <Col xs={4}>\r\n                                    {/* {data.music[id].musicName} */}\r\n                                    { user.nickName }\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }else{\r\n            return <div>error</div>\r\n        }\r\n    }\r\n}\r\nexport default UserCard;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport UserAPI from \"../../apis/UserAPI\";\r\n\r\nclass PlaylistCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            owner: \"\"\r\n        }\r\n    }\r\n\r\n    getNickName = async (id) => {\r\n        var owner = \"\";\r\n        try {\r\n            const response = await UserAPI.post(\"/user/nickName\", {\r\n                id: id\r\n            });\r\n            if(response.data.status === \"success\"){ // search success\r\n                console.log(\"success\");\r\n                owner = response.data.nickName;\r\n                this.setState({owner});\r\n            }else{ // somehow failed\r\n                \r\n            }\r\n        }catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        var playlist = this.props.playlist;\r\n        if(playlist){\r\n            this.getNickName(playlist.owner);\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        var playlist = this.props.playlist;\r\n        if(playlist){\r\n            var owner = this.state.owner;\r\n            return(\r\n                <div>\r\n                    <Link to={\"/playlist/\"+playlist._id} style={{'color':'#ed4e85'}}>\r\n                        <Container>\r\n                            <Row className=\"border-bottom-accent\">\r\n                                <Col xs={1}>\r\n                                    &#9825;\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    {/* {data.music[id].musicName} */}\r\n                                    { playlist.musicListName }\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    { owner }\r\n                                </Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }else{\r\n            return <div>error</div>\r\n        }\r\n    }\r\n}\r\nexport default PlaylistCard;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nclass UserTitleCard extends Component{\r\n    \r\n    render() {\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"border-bottom-accent\">\r\n                        <Col xs={4}>\r\n                            Name\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default UserTitleCard;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nclass PlaylistTitleCard extends Component{\r\n    \r\n    render() {\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"border-bottom-accent\">\r\n                        <Col xs={1}>\r\n                            Liked\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            Name\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            Owner\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default PlaylistTitleCard;\r\n","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { TextField } from '@material-ui/core';\r\nimport { NativeSelect } from '@material-ui/core';\r\nimport UserAPI from \"../../apis/UserAPI\";\r\nimport SongCard from \"./SongCard.js\";\r\nimport SongTitleCard from \"./SongTitleCard.js\";\r\nimport UserCard from \"./UserCard.js\";\r\nimport PlaylistCard from \"./PlaylistCard.js\";\r\nimport UserTitleCard from \"./UserTitleCard.js\";\r\nimport PlaylistTitleCard from \"./PlaylistTitleCard.js\";\r\nimport '../modal.css';\r\nimport gql from 'graphql-tag'\r\nimport {Query, Mutation} from 'react-apollo'\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst GET_PLAYLIST = gql`\r\n    query user($userId: String) {\r\n        user(id: $userId) {\r\n            musicLists{\r\n                _id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst GET_LIST_DETAIL = gql`\r\n    query musicList($musicListId: String) {\r\n        musicList(id: $musicListId) {\r\n            musicListName\r\n            owner{\r\n                _id\r\n            }\r\n            musics{\r\n                _id\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst ADD_MUSIC_TO_MUSICLIST = gql`\r\n    mutation addMusicToMusicList(\r\n        $musicListId: String!\r\n        $musicId: String!\r\n    ) {\r\n        addMusicToMusicList(\r\n        id: $musicListId\r\n        musicId: $musicId\r\n    ){\r\n    _id\r\n    }\r\n    }\r\n`;\r\n\r\nclass SearchScreen extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            select: \"song\",\r\n            search_text: \"\",\r\n            search_results: [],\r\n            search_results_mode: \"song\",\r\n            songID: \"\",\r\n            songInfo: {},\r\n            page: 1,\r\n            musics:[],\r\n            initialized: false,\r\n            modal_content: null\r\n        }\r\n        this.childSongIdHandler = this.childSongIdHandler.bind(this);\r\n        this.updateModalContentHandler = this.updateModalContentHandler.bind(this);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {target} = e;\r\n    \r\n        this.setState( (state) => ({\r\n            ...state,\r\n            [target.id]: target.value\r\n    \r\n        }));\r\n    }\r\n\r\n    changePageHandler = (event, value)=>{\r\n        console.log(\"previous page:\"+this.state.page)\r\n        this.setState({page: value});\r\n        console.log(\"clicked :\"+value);\r\n        \r\n    }\r\n\r\n    onClick = async (e) => {\r\n        e.preventDefault();\r\n        var search_for = this.state.select;  // song/artist/album/user/playlist\r\n        var search_text = this.state.search_text;\r\n        console.log(search_for, search_text);\r\n        if(search_text !== \"\"){  // not empty\r\n            try {\r\n                const response = await UserAPI.post(\"/search/\"+search_for, {\r\n                    search_text\r\n                });\r\n                if(response.data.status === \"success\"){ // search success\r\n                    console.log(\"success\");\r\n                    // this.props.signedIn(response.data.nickName);\r\n                    // this.props.history.push('/');\r\n                    console.log(response.data.results);\r\n                    this.setState({search_results_mode: search_for});\r\n                    this.setState({search_results: response.data.results});\r\n                    \r\n                }else{ // somehow failed\r\n                    \r\n                }\r\n            }catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    onClose = () =>{\r\n        var modal = document.getElementById(\"modal\");\r\n        if(modal)\r\n            modal.style.display = \"none\";\r\n    }\r\n\r\n    // deprecated\r\n    onAddPlaylistClick = async (e, musicListId, addMusicToMusicList) => {\r\n        e.preventDefault();\r\n        var songID = this.state.songID;\r\n        if(songID !== \"\"){\r\n            console.log(musicListId, songID);\r\n        }\r\n        try {\r\n            let musicName = this.state.songInfo.name;\r\n            let artist = this.state.songInfo.artists[0].name;\r\n            let URI = this.state.songID;\r\n            let album = this.state.songInfo.album.name;\r\n            let length = Math.round(this.state.songInfo.duration_ms/1000);\r\n            \r\n            const create_response = await UserAPI.post(\"/createMusic\", {musicName,\r\n                                                                    URI,\r\n                                                                    album,\r\n                                                                    length,\r\n                                                                    artist});\r\n            if (create_response.data.status === \"success\") {\r\n               console.log(this.props.userId)\r\n               console.log(create_response.data.musicId)\r\n               const request_musicList = await UserAPI.get(\"/musicList/\"+musicListId);\r\n               if (request_musicList.data.status == \"success\") {\r\n                 let musicList = request_musicList.data.musicList.musics;\r\n                 console.log(musicList);\r\n                 console.log(musicList.map((mus)=> {return(mus === create_response.data.musicId)}))\r\n                 if (musicList.length > 0) {\r\n                    let control = true;\r\n                    musicList.forEach(mus => {\r\n                        if(mus === create_response.data.musicId){\r\n                            control = false;\r\n                        }\r\n                    });\r\n                    console.log(control)\r\n                    if (control) {\r\n                     addMusicToMusicList({\r\n                         variables:{\r\n                                 musicId: create_response.data.musicId,\r\n                                 musicListId: musicListId\r\n                             }\r\n                         });\r\n                    } \r\n                 }else{\r\n                    addMusicToMusicList({\r\n                    variables:{\r\n                            musicId: create_response.data.musicId,\r\n                            musicListId: musicListId\r\n                        }\r\n                    });\r\n                 }\r\n               }\r\n                 \r\n                this.onClose();\r\n           }else{\r\n               alert(\"Playlist creation failed\")\r\n           }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    updateModalContentHandler = (content) => {\r\n        this.setState({modal_content: content})\r\n    }\r\n\r\n    childSongIdHandler(songID, songInfo) {\r\n        console.log(songID);\r\n        console.log(songInfo);\r\n        this.setState({\r\n            songID: songID,\r\n            songInfo: songInfo\r\n          })\r\n    }\r\n\r\n    render() {\r\n        var search_results = this.state.search_results;\r\n        var select = this.state.search_results_mode;\r\n        var result_title_card = \"\";\r\n        var result_cards = \"\";\r\n        var userId = localStorage.getItem('userId');\r\n        console.log(\"select is\", select);\r\n        if(search_results ){  // && search_results.length > 0\r\n            if(select === \"song\" || select === \"artist\" || select === \"album\" ){\r\n                result_title_card = <SongTitleCard></SongTitleCard>\r\n                result_cards = search_results.slice((this.state.page-1)*10,this.state.page*10).map(result => {\r\n                    return (\r\n                    <SongCard \r\n                    updateModalContentHandler={this.updateModalContentHandler}\r\n                    childSongIdHandler={this.childSongIdHandler}\r\n                    loadQueueIndexToAudioPlayer={this.props.loadQueueIndexToAudioPlayer}\r\n                    key={result.id} song={result}></SongCard>\r\n                    );\r\n                });\r\n            }else if(select === \"user\"){\r\n                result_title_card = <UserTitleCard></UserTitleCard>\r\n                result_cards = search_results.slice((this.state.page-1)*10,this.state.page*10).map(result => {\r\n                    return (\r\n                        <UserCard key={result._id} user={result}></UserCard>\r\n                    );\r\n                });\r\n            }else if(select === \"playlist\"){\r\n                result_title_card = <PlaylistTitleCard></PlaylistTitleCard>\r\n                result_cards = search_results.slice((this.state.page-1)*10,this.state.page*10).map(result => {\r\n                    return (\r\n                        <PlaylistCard key={result._id} playlist={result}></PlaylistCard>\r\n                    );\r\n                });\r\n            }\r\n        }\r\n        \r\n        return(\r\n            <div>\r\n                <br/><h1>Search</h1>\r\n                <h6>Type to search:</h6>\r\n                <form>\r\n                    <div style={{\"padding\":\"5px\"}}>\r\n                        <NativeSelect\r\n                        defaultValue={\"song\"}\r\n                        style={{\"margin\":\"5px\"}}\r\n                        onChange={this.handleChange}\r\n                        id=\"select\"\r\n                        >\r\n                            <option value={\"song\"}>Song</option>\r\n                            <option value={\"artist\"}>Artist</option>\r\n                            <option value={\"album\"}>Album</option>\r\n                            <option value={\"user\"}>User</option>\r\n                            <option value={\"playlist\"}>Playlist</option>\r\n                        </NativeSelect>\r\n                        <TextField id=\"search_text\" size=\"small\" placeholder=\"search\" variant=\"outlined\" onChange={this.handleChange}/>\r\n                        <Button onClick={this.onClick} type=\"submit\" className=\"search-btn\">Search</Button>\r\n                    </div>\r\n                    <br/><br/>\r\n                    <div className=\"border-bottom-accent\"></div>\r\n                </form>\r\n                { result_title_card }\r\n                { result_cards }\r\n                <Pagination count={parseInt(search_results.length/10+(search_results.length%10 > 0?1:0))} shape=\"rounded\" size=\"large\" onChange={this.changePageHandler}/>\r\n\r\n                <div id=\"modal\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span onClick={this.onClose} className=\"close\">&times;</span>\r\n                        { this.state.modal_content }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default SearchScreen;\r\n","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport ProfilePlaylistCard from './ProfilePlaylistCard.js'\r\nimport FriendCard from './FriendPage/FriendCard.js'\r\nimport UserAPI from \"../apis/UserAPI\";\r\n\r\nclass ProfileScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            publicPlaylists: [],\r\n            self: null,\r\n            now_playing: \"none\"\r\n        }\r\n    }\r\n\r\n    getSelf = async () => {\r\n        var selfID = localStorage.getItem('userId');\r\n        try {\r\n            const response = await UserAPI.post(\"/user\", {\r\n                id: selfID\r\n            });\r\n            if(response.data.status === \"success\"){ // search success\r\n                var self = response.data.user;\r\n                this.setState({self});\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    getUser = async (id) => {\r\n        var user = \"\";\r\n        // console.log(\"looking for user\", id);\r\n        try {\r\n            const response = await UserAPI.post(\"/user\", {\r\n                id: id\r\n            });\r\n            if(response.data.status === \"success\"){ // search success\r\n                // console.log(\"success\");\r\n                user = response.data.user;\r\n                \r\n                const playlists_response = await UserAPI.get(\"/user/musicLists/\"+user._id);\r\n                if(playlists_response.data.status === \"success\"){\r\n                    var musicLists = playlists_response.data.musicLists;  // list of playlist ids\r\n                    var publicPlaylists = [];\r\n                    for(let i = 0; i < musicLists.length; i++){\r\n                        let id = musicLists[i];\r\n                        const playlist_response = await UserAPI.get(\"/musicList/\"+id);\r\n                        if(playlist_response.data.status === \"success\"){ // search success\r\n                            var musicList = playlist_response.data.musicList;\r\n                            if(musicList.isPublic) // only show public playlist\r\n                                publicPlaylists.push(musicList);\r\n                        }else{\r\n                            console.log(\"error searching playlist\", id);\r\n                        }\r\n                    }\r\n\r\n                    this.setState({publicPlaylists: publicPlaylists});\r\n                    this.setState({user});\r\n                }\r\n\r\n            }else{ // somehow failed\r\n                \r\n            }\r\n        }catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        var userID = this.props.match.params.id;\r\n        if(userID !== \"\"){\r\n            this.getUser(userID);\r\n            this.getSelf();\r\n        }\r\n        console.log('props is', this.props);\r\n        if(this.props.now_playing){\r\n            this.setState({now_playing: this.props.now_playing});\r\n        }\r\n    }\r\n\r\n    // if only the props is updated\r\n    componentWillReceiveProps(nextProps) {\r\n        var userID = nextProps.match.params.id;\r\n        if(userID !== \"\"){\r\n            this.getUser(userID);\r\n            this.getSelf();\r\n        }\r\n        if(nextProps.now_playing){\r\n            this.setState({now_playing: nextProps.now_playing});\r\n        }\r\n    }\r\n\r\n    onAddFriendClick = async () => {\r\n        var self = this.state.self;\r\n        var user = this.state.user;\r\n\r\n        if(self && user){\r\n            try{\r\n                const response = await UserAPI.post(\"/sendFriendRequest\", {  // add self id to user's friendRequests\r\n                    userID: self._id,\r\n                    target_userID: user._id\r\n                });\r\n                if(response.data.status === \"success\"){\r\n                    this.setState({user: response.data.target_user});\r\n                    this.setState({self: response.data.user});\r\n                }\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    onRemoveFriendClick = async () => {\r\n        var self = this.state.self;\r\n        var user = this.state.user;\r\n\r\n        if(self && user){\r\n            if(localStorage.getItem('isSignedIn')){\r\n                var modal = document.getElementById(\"main_modal\");\r\n                if(modal){\r\n                    modal.style.display = \"block\";\r\n                    var updateModalContentHandler = this.props.updateModalContentHandler;\r\n                    var content = <div>\r\n                        <h3>Are you sure remove this friend?</h3>\r\n                        <Button className=\"search-btn\" onClick={(e) => this.onRemoveFriendConfirm(e, self, user)}>Confirm</Button>\r\n                        <Button className=\"cancel-btn\" onClick={this.closeModal}>Cancel</Button>\r\n                        </div>\r\n                    updateModalContentHandler(content);\r\n                }\r\n            }else{\r\n                alert(\"Please sign in first!\");\r\n            }\r\n        }\r\n    }\r\n\r\n    onRemoveFriendConfirm = async (e, self, user) => {\r\n        try{\r\n            const response = await UserAPI.post(\"/removeFriend\", {  // remove a friend\r\n                userID: self._id,\r\n                target_userID: user._id\r\n            });\r\n            if(response.data.status === \"success\"){\r\n                this.setState({user: response.data.target_user});\r\n                this.setState({self: response.data.user});\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n        this.closeModal();\r\n    }\r\n\r\n    closeModal = () =>{\r\n        var modal = document.getElementById(\"main_modal\");\r\n        modal.style.display = \"none\";\r\n    }\r\n\r\n    render() {\r\n        var userID = this.props.match.params.id;\r\n        var user = this.state.user;\r\n        var self = \"\"\r\n        var selfID = \"\"\r\n        var playlist_cards = \"\"\r\n        var user_card = \"\"\r\n        var publicPlaylists = [];\r\n\r\n        if(this.state.publicPlaylists){\r\n            publicPlaylists = this.state.publicPlaylists;\r\n            if(publicPlaylists.length > 0){\r\n                playlist_cards = publicPlaylists.map((playlist, index) => {\r\n                    return (<div key={index}>\r\n                        <ProfilePlaylistCard className=\"grid-item\" playlist={playlist}></ProfilePlaylistCard>\r\n                    </div>\r\n                    )\r\n                })\r\n            }else{\r\n                playlist_cards = <div>No public playlists available yet.</div>\r\n            }\r\n            \r\n        }\r\n        var friend_btns = \"\"\r\n        if(this.state.self && this.state.user){\r\n            self = this.state.self;\r\n            selfID = this.state.self._id;\r\n            if(userID !== selfID){ // if not self\r\n                if(self.friends.includes(userID)){  // if is a friend\r\n                    friend_btns =\r\n                    <div>\r\n                        <Button onClick={this.onRemoveFriendClick} className=\"remove-friend-btn\">Remove Friend</Button>\r\n                    </div>\r\n                }else{\r\n                    friend_btns =\r\n                    <div>\r\n                        <Button onClick={this.onAddFriendClick} className=\"add-friend-btn\">Add Friend</Button>\r\n                    </div>\r\n                }\r\n                if(user.friendRequests.includes(selfID)){  // if request is sent\r\n                    friend_btns =\r\n                    <div>\r\n                        <Button style={{'cursor':'default'}} className=\"pending-friend-btn\">Request sent</Button>\r\n                    </div>\r\n                }\r\n                \r\n                user_card = <FriendCard now_playing={this.state.now_playing} user={user}/>\r\n            }else{ // if self\r\n                user_card = <FriendCard now_playing={this.state.now_playing} user={self}/>\r\n            }\r\n        }\r\n        if(user){\r\n            return (\r\n                <div>\r\n                    <br/>\r\n                    <h1>Profile</h1>\r\n                    { user_card }\r\n                    { friend_btns }\r\n                    <hr></hr>\r\n                    <h2>Public Playlists</h2>\r\n                    <div className=\"grid-container\">\r\n                        { playlist_cards }\r\n                    </div>\r\n                </div>\r\n            );\r\n        }else{\r\n            return <>Loading...</>\r\n        }\r\n    }\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from 'react-router-dom';\r\nimport { TextField } from '@material-ui/core';\r\nimport UserAPI from \"../apis/UserAPI\";\r\n\r\nclass SignInScreen extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            status: \"\"\r\n        }\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        const {target} = e;\r\n    \r\n        this.setState( (state) => ({\r\n            ...state,\r\n            [target.id]: target.value\r\n    \r\n        }));\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        var email = this.state.email;\r\n        var password = this.state.password;\r\n        if(email !== \"\" && password !== \"\"){\r\n            try {\r\n                const response = await UserAPI.post(\"/signin\", {\r\n                    email,\r\n                    password\r\n                });\r\n                if(response.data.status === \"success\"){\r\n                    console.log(\"success\");\r\n                    this.props.signedIn(response.data.nickName, response.data.userId);\r\n                    this.props.history.push('/');\r\n                }else if(response.data.status === \"failed\"){\r\n                    alert(\"Wrong credentials. Please try again.\");\r\n                }else if(response.data.status === \"not verified\"){\r\n                    console.log(\"not verified\");\r\n                    // console.log(response.data)\r\n                    // this.props.signedIn(response.data.nickName, response.data.userId);\r\n                    // this.props.history.push('/');\r\n                    alert(\"Your account is not verified yet. Please follow the instructions in the verification email.\");\r\n                }\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <br/><h1>Sign In</h1>\r\n                <form onSubmit={(e) => this.onSubmit(e)}>\r\n                    <h6>Email Address:</h6>\r\n                    <div style={{\"padding\":\"5px\"}}>\r\n                        <TextField id=\"email\" size=\"small\" placeholder=\"email address\" variant=\"outlined\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <h6>Password:</h6>\r\n                    <div style={{\"padding\":\"5px\"}}>\r\n                        <TextField id=\"password\" type=\"password\" size=\"small\" placeholder=\"password\" variant=\"outlined\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <br/>\r\n                    <Button type=\"submit\" className=\"search-btn\">Sign In</Button>\r\n                    <Link to=\"/forgetpassword\"><Button className=\"search-btn\">Forget Password</Button></Link>\r\n                    <br/><br/>\r\n                    <div className=\"border-bottom-accent\"></div>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default SignInScreen;\r\n","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport UserAPI from \"../apis/UserAPI\";\r\n\r\nconst ADD_USER = gql`\r\n    mutation AddUser(\r\n        $userName: String!,\r\n        $password: String!,\r\n        $nickName: String!,\r\n        $verified: Boolean!\r\n        ) {\r\n        addUser(\r\n            userName: $userName,\r\n            password: $password,\r\n            nickName: $nickName,\r\n            verified: $verified\r\n            ) {\r\n            _id\r\n        }\r\n    }\r\n`;\r\n\r\nconst GET_USER = gql`\r\n    query userByUserName($userName: String!) {\r\n        userByUserName(userName: $userName) {\r\n            _id\r\n            userName\r\n        }\r\n    }\r\n`;\r\n\r\n\r\n\r\nclass SignUpScreen extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            nickName: \"New User\",\r\n            password: \"\",\r\n            passwordConfirm: \"\",\r\n            status: \"\"\r\n        }\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        const {target} = e;\r\n    \r\n        this.setState( (state) => ({\r\n            ...state,\r\n            [target.id]: target.value\r\n    \r\n        }));\r\n    }\r\n\r\n    onCompleted = () => {\r\n        \r\n    //     fetch(\"test\", \r\n    //     {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //         }\r\n    //       , body: JSON.stringify(email)})\r\n    //   .then(res => res.json())\r\n    //   .then(data => {\r\n    //     console.log(data)\r\n    //     // this.props.history.push('/emailsent');\r\n    //   })\r\n    //   .catch(err => console.log(err))\r\n        // if(this.state.status == \"success\"){\r\n            \r\n        // }\r\n        // else{\r\n        //     \r\n        // }\r\n        \r\n    }\r\n\r\n    onSubmit = async (e, addUser) => {\r\n        e.preventDefault();\r\n        var email = this.state.email;\r\n        var regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n        var validate_result = regex.test(email);\r\n        if(validate_result === false){\r\n            alert(\"Please enter an email address with correct format.\");\r\n            return;\r\n        }\r\n        console.log(email);\r\n        if(this.state.email !== \"\" && this.state.nickName && this.state.password !== \"\" && this.state.passwordConfirm !== \"\"){\r\n            if(this.state.password === this.state.passwordConfirm){\r\n                // check email exists\r\n                try {\r\n                    const register_response = await UserAPI.post(\"/register\", {\r\n                        email\r\n                    });\r\n                    if(register_response.data.status === \"success\"){  // email can be used\r\n                        var toast = document.getElementById(\"loading_toast\");\r\n                        toast.className = \"show\"; // show the toast\r\n                        // After 3 seconds, remove the show class from toast\r\n                        setTimeout(function(){ toast.className = toast.className.replace(\"show\", \"\"); }, 3000);\r\n                        await addUser({\r\n                            variables: {\r\n                                userName: this.state.email,\r\n                                password: this.state.password,\r\n                                nickName: this.state.nickName,\r\n                                verified: false\r\n                            }\r\n                        })\r\n                        const sendEmail_response = await UserAPI.post(\"/sendVerifyEmail\", {\r\n                            email\r\n                        });\r\n                        if(sendEmail_response.data.status === \"success\"){\r\n                            console.log(\"success\");\r\n                            // this.props.signedIn(\"NewUser\");\r\n                            this.props.history.push('/emailsent');\r\n                        }else{\r\n                            this.props.history.push('/error');\r\n                        }\r\n                        // if(sendEmail_response){\r\n                        //     this.setState({status: sendEmail_response.data.status});\r\n                        // }\r\n                        \r\n                    }else{\r\n                        alert(\"This email has been registered.\");\r\n                    }\r\n                    \r\n                    \r\n                } catch (err) {\r\n                    console.log(err);\r\n                }\r\n                \r\n            }else{\r\n                alert(\"Password do not match\");\r\n            }\r\n        }else{\r\n            alert(\"All fields must be filled\");\r\n        }\r\n        \r\n    \r\n    }\r\n    render() {\r\n\r\n        return(\r\n            <Mutation  mutation={ADD_USER} onCompleted={this.onCompleted}>\r\n                {(addUser,{loading, error}) => (\r\n                    <div>\r\n                        <form onSubmit={(e) => this.onSubmit(e, addUser)}>\r\n                        <br/><h1>Sign Up</h1>\r\n                        <h6>Email Address:</h6>\r\n                        <div style={{\"padding\":\"5px\"}}>\r\n                            <TextField size=\"small\" placeholder=\"email address\" variant=\"outlined\" id=\"email\"\r\n                             onChange={this.handleChange} />\r\n                        </div>\r\n                        <h6>Nickname:</h6>\r\n                        <div style={{\"padding\":\"5px\"}}>\r\n                            <TextField size=\"small\" placeholder=\"nickname\" variant=\"outlined\" id=\"nickName\"\r\n                             onChange={this.handleChange} />\r\n                        </div>\r\n                        <h6>Password:</h6>\r\n                        <div style={{\"padding\":\"5px\"}}>\r\n                            <TextField type=\"password\" size=\"small\" placeholder=\"password\" variant=\"outlined\" \r\n                            id = \"password\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <h6>Confirm Password:</h6>\r\n                        <div style={{\"padding\":\"5px\"}}>\r\n                            <TextField type=\"password\" size=\"small\" placeholder=\"confirm password\" variant=\"outlined\" \r\n                            id = \"passwordConfirm\" onChange={this.handleChange}/>\r\n                        </div>\r\n                        <br/>\r\n                        {/* <Link to=\"/verification\"> */}\r\n                            <Button type=\"submit\" className=\"search-btn\">Sign Up</Button>\r\n                        {/* </Link> */}\r\n                        <br/><br/>\r\n                        <div className=\"border-bottom-accent\"></div>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n                \r\n            </Mutation>\r\n\r\n        );\r\n    }\r\n}\r\nexport default SignUpScreen;\r\n","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { TextField } from '@material-ui/core';\r\nimport UserAPI from \"../apis/UserAPI\";\r\n\r\nclass ForgetPasswordScreen extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email: \"\"\r\n        }\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        const {target} = e;\r\n    \r\n        this.setState( (state) => ({\r\n            ...state,\r\n            [target.id]: target.value\r\n    \r\n        }));\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        var email = this.state.email;\r\n        if(email !== \"\"){\r\n            try {\r\n                const response = await UserAPI.post(\"/forgetPassword\", {\r\n                    email\r\n                });\r\n                if(response){\r\n                    console.log(\"success\");\r\n                    this.props.history.push('/emailsent');\r\n                }\r\n            }catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <br/><h1>Forget Password</h1>\r\n                <form onSubmit={(e) => this.onSubmit(e)}>\r\n                    <h6>Enter your email address:</h6>\r\n                    <div style={{\"padding\":\"5px\"}}>\r\n                        <TextField id=\"email\" size=\"small\" placeholder=\"email address\" variant=\"outlined\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    {/* <Link\r\n                    to={{\r\n                        pathname: '/verification',\r\n                        state: {\r\n                            changepassword: true\r\n                        }\r\n                    }}> */}\r\n\r\n                        <Button type=\"submit\" className=\"search-btn\">Submit</Button>\r\n                    {/* </Link> */}\r\n                    <br/><br/>\r\n                    <div className=\"border-bottom-accent\"></div>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default ForgetPasswordScreen;\r\n","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport UserAPI from \"../apis/UserAPI\";\r\n\r\nclass VerificationScreen extends Component{\r\n    onClick = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await UserAPI.post(\"/verify\", {\r\n                id: this.props.match.params.id\r\n            });\r\n            if(response.data.status === \"success\"){\r\n                console.log(\"success\");\r\n                this.props.signedIn(response.data.nickName, response.data.userId);\r\n                this.props.history.push('/');\r\n            }else{\r\n                this.props.history.push('/error');\r\n            }\r\n        }catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.location.state);\r\n        var link = \"/\";\r\n        if(this.props.location.state){\r\n            if(this.props.location.state.changepassword){\r\n                link = \"/changepassword\";\r\n            }\r\n        }\r\n        return(\r\n            <div>\r\n                <br/><h1>Verification</h1>\r\n                {/* <h6>Enter the 6-digit code sent to your email address:</h6>\r\n                <div style={{\"padding\":\"5px\"}}>\r\n                    <TextField size=\"small\" placeholder=\"6-digit code\" variant=\"outlined\" />\r\n                </div> */}\r\n                {/* <Link to={link}> */}\r\n                    <Button onClick={this.onClick} className=\"search-btn\">Verify</Button>\r\n                {/* </Link> */}\r\n                <br/><br/>\r\n                <div className=\"border-bottom-accent\"></div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default VerificationScreen;\r\n","import React, { Component } from 'react';\r\nimport Button from 'react-bootstrap/Button'\r\nimport { TextField } from '@material-ui/core';\r\nimport UserAPI from \"../apis/UserAPI\";\r\n\r\nclass ChangePasswordScreen extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            // oldPassword: \"\",\r\n            newPassword: \"\",\r\n            newPasswordConfirm: \"\"\r\n        }\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        const {target} = e;\r\n    \r\n        this.setState( (state) => ({\r\n            ...state,\r\n            [target.id]: target.value\r\n    \r\n        }));\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        \r\n        e.preventDefault();\r\n        // var oldPassword = this.state.oldPassword;\r\n        var newPassword = this.state.newPassword;\r\n        var newPasswordConfirm = this.state.newPasswordConfirm;\r\n\r\n        if(newPassword !== \"\" && newPasswordConfirm !== \"\"){  //oldPassword !== \"\" && \r\n            if(newPassword === newPasswordConfirm){\r\n                try {\r\n                    const response = await UserAPI.post(\"/changePassword\", {\r\n                        id: this.props.match.params.id,\r\n                        // oldPassword,\r\n                        newPassword\r\n                    });\r\n                    if(response.data.status === \"success\"){ // change password successfully\r\n                        console.log(\"success\");\r\n                        alert(\"Password has changed successfully\");\r\n                        this.props.history.push('/');\r\n                    // }else if(response.data.status == \"failed\"){  // old password wrong\r\n                    //     alert(\"Old password is incorrect. Please try again.\");\r\n                    }else{\r\n                        this.props.history.push('/error');\r\n                    }\r\n                }catch (err) {\r\n                    console.log(err);\r\n                }\r\n            }else{\r\n                alert(\"New passwords doesn't match. Please try again.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <br/><h1>Change Password</h1>\r\n                    <form onSubmit={(e) => this.onSubmit(e)}>\r\n                    <h6>Old Password:</h6>\r\n                    <div style={{\"padding\":\"5px\"}}>\r\n                        <TextField id=\"oldPassword\" size=\"small\" type=\"password\" placeholder=\"old password\" variant=\"outlined\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <h6>New Password:</h6>\r\n                    <div style={{\"padding\":\"5px\"}}>\r\n                        <TextField id=\"newPassword\"  type=\"password\" size=\"small\" placeholder=\"new password\" variant=\"outlined\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <h6>Confirm New Password:</h6>\r\n                    <div style={{\"padding\":\"5px\"}}>\r\n                        <TextField id=\"newPasswordConfirm\"  type=\"password\" size=\"small\" placeholder=\"confirm new password\" variant=\"outlined\" onChange={this.handleChange}/>\r\n                    </div>\r\n                    <br/>\r\n                    {/* <Link to=\"/\"> */}\r\n                        <Button type=\"submit\" className=\"search-btn\">Submit</Button>\r\n                    {/* </Link> */}\r\n                    <br/><br/>\r\n                    <div className=\"border-bottom-accent\"></div>\r\n                </form>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default ChangePasswordScreen;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass EmailSentScreen extends Component{\r\n    \r\n    render() {\r\n\r\n        return(\r\n            <div>An email has been sent you your email address.</div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default EmailSentScreen;\r\n","import React, { Component } from 'react';\r\n\r\nclass FriendRequestsScreen extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            friendRequests: [],\r\n            isLoaded: false\r\n        }\r\n    }\r\n\r\n    getFriendRequests = () => {\r\n        var friendRequests = this.props.location.friendRequests;\r\n        console.log(friendRequests);\r\n        this.setState({friendRequests: friendRequests});\r\n        this.setState({isLoaded: true});\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getFriendRequests();\r\n    }\r\n\r\n    render() {\r\n        var friendRequests = \"\"\r\n        var friend_request_cards = \"\"\r\n        if(this.state.isLoaded){\r\n            console.log(this.state.friendRequests, this.state.friendRequests===true)\r\n            if(this.state.friendRequests){\r\n                friendRequests = this.state.friendRequests;\r\n                console.log(friendRequests.length, \"asd\");\r\n                if(friendRequests.length === 0){\r\n                    friend_request_cards = <div>You have no friend requests.</div>\r\n                }else{\r\n                    \r\n                    friend_request_cards = friendRequests.map((user, index) => {\r\n                        return (<div>{user}</div>)\r\n                    })\r\n                }\r\n            }\r\n            return (\r\n                <div>\r\n                    <br/>\r\n                    <h1>Friend Requests ({friendRequests.length})</h1>\r\n                    { friend_request_cards }\r\n                    {/* <FriendRequestCard/> */}\r\n                </div>\r\n            );\r\n        }else{\r\n            return (\r\n                <div>\r\n                    Loading...\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default FriendRequestsScreen;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorScreen extends Component{\r\n    \r\n    render() {\r\n\r\n        return(\r\n            <div>Something is wrong. Please try again.</div>\r\n        );\r\n    }\r\n}\r\nexport default ErrorScreen;\r\n","import React, {Component} from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Grid} from '@material-ui/core';\r\nclass Banner extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    nickNameControl = () =>{\r\n        var nickName = localStorage.getItem('userNickName');\r\n        // console.log(\"user is\", user);\r\n        if (nickName) {\r\n            return <div>Welcome {nickName}</div>           \r\n        }\r\n        return <div/>\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Container className=\"banner-container\">\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs ={3}>\r\n                        <div>Mixtapez</div>\r\n                    </Grid>\r\n                    <Grid item xs ={3}>                        \r\n                    </Grid>\r\n                    <Grid item xs ={5}>\r\n                        {this.nickNameControl()}\r\n                    </Grid>                 \r\n                </Grid>\r\n            </Container>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Banner;","import React, { Component, useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { MdPlayCircleOutline, MdMoreHoriz, MdDragHandle} from \"react-icons/md\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { IconContext } from \"react-icons\";\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport UserAPI from \"../../apis/UserAPI\";\r\n// import { GrDrag } from \"react-icons/gr\";\r\n// import { AiOutlineDrag } from \"react-icons/ai\";\r\n\r\nvar options = [\r\n    'Add to Queue',\r\n    // 'Save to Liked Songs',\r\n    'Add to Playlist',\r\n    'Share'\r\n  ];\r\n\r\n\r\nexport default function SongCard(props){\r\n    var song = props.song;\r\n    var modal_content = null;\r\n    var userId = localStorage.getItem('userId');\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const onPlayClick = () => {\r\n        var index = 0;\r\n        var onSongCardClick = props.onSongCardClick;\r\n        onSongCardClick(index);\r\n    }\r\n\r\n    const addSongToMusicList = async (e, songID, musicListID) => {\r\n        console.log(songID + \" \" + musicListID);\r\n        try{\r\n            const addSong_response = await UserAPI.post(\"/addSong\", {\r\n                musicListID,\r\n                songID\r\n            });\r\n            if(addSong_response.data.status === \"success\"){  // close the modal\r\n                var modal = document.getElementById(\"modal\");\r\n                if(modal)\r\n                    modal.style.display = \"none\";\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const handleMenuItemClick = async (event, index) => {\r\n        setSelectedIndex(index);\r\n        setAnchorEl(null);\r\n        var mode = \"\"\r\n        // normal playlist\r\n        if(index === 0){  // add to queue\r\n            mode = \"add_queue\";\r\n        }\r\n        \r\n        // else if(index === 1){ // add to liked songs\r\n        //     mode = \"add_like\";\r\n        // }\r\n        \r\n        else if(index === 1){ // add to playlist\r\n            mode = \"add_playlist\";\r\n        }else if(index === 2){ // share\r\n            mode = \"share\";\r\n        }\r\n        \r\n\r\n        if(mode === \"add_queue\"){  // add to queue\r\n            try {      \r\n                let queue = localStorage.getItem('queue');\r\n                if(queue){\r\n                    queue = JSON.parse(queue);\r\n                }else{\r\n                    queue = [];\r\n                }      \r\n                console.log(song._id)\r\n                let id = song._id\r\n                const song_response = await UserAPI.get(\"/music/\"+id);\r\n                console.log(song_response.data.music)\r\n                if(song_response.data.status == \"success\"){\r\n                    if (queue.length > 0) {\r\n                        let contains = queue.map((music)=>{\r\n                            if (music._id === song_response.data.music._id) {\r\n                                return true\r\n                            }else{\r\n                                return false\r\n                            }\r\n                        }).reduce((a,b)=>{ return(a||b) });\r\n                        console.log(contains);\r\n                        if (!contains) {\r\n                            queue.push(song_response.data.music);\r\n                            localStorage.setItem('queue', JSON.stringify(queue))\r\n                        }\r\n                    }else{\r\n                        queue.push(song_response.data.music);\r\n                        localStorage.setItem('queue', JSON.stringify(queue))\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }else if(mode === \"add_like\"){ // add to liked songs\r\n\r\n        }else if(mode === \"add_playlist\"){ // add to playlist\r\n            if(song && userId){\r\n                // alert(\"hi\" + song.name);\r\n                // console.log(song.name, \"asdad\");\r\n                var modal = document.getElementById(\"modal\");\r\n                if(modal){\r\n                    modal.style.display = \"block\";\r\n                    var updateModalContentHandler = props.updateModalContentHandler;\r\n                    try{\r\n                        const musicLists_response = await UserAPI.get(\"/user/musicLists/\"+userId);\r\n                        if(musicLists_response.data.status === \"success\"){\r\n                            var musicListsIDs = musicLists_response.data.musicLists;\r\n                            var musicLists = [];\r\n                            for(let i = 0; i < musicListsIDs.length; i++){\r\n                                const musicList_response = await UserAPI.get(\"/musicList/\"+musicListsIDs[i]);\r\n                                if(musicList_response.data.status === \"success\"){\r\n                                    musicLists.push(musicList_response.data.musicList);\r\n                                }\r\n                            }\r\n                            modal_content = musicLists.map((musicList, index) => {\r\n                                return(\r\n                                    <div onClick={(e)=> addSongToMusicList(e, song._id, musicList._id)} className=\"playlist-card\">\r\n                                        <div>{musicList.musicListName}</div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                            updateModalContentHandler(modal_content);\r\n                        }\r\n                    }catch(err){\r\n                        console.log(err);\r\n                    }\r\n                }\r\n            }\r\n        }else if(mode === \"share\"){ // share\r\n\r\n        }\r\n        \r\n    };\r\n    \r\n    if(song){\r\n        var minutes = 0;\r\n        var seconds = 0;\r\n        if(song.length){\r\n            minutes = Math.floor((song.length) / 60);\r\n            if(minutes < 10) minutes = \"0\"+minutes;\r\n            seconds = Math.floor((song.length) % 60);\r\n            if(seconds < 10) seconds = \"0\"+seconds;\r\n        }\r\n        var artist = \"N/A\";\r\n        if(song.artist){\r\n            artist = song.artist\r\n        }\r\n        var album = \"N/A\";\r\n        if(song.album){\r\n            album = song.album\r\n        }\r\n        let title = \"N/A\"\r\n        if(song.musicName){\r\n            title = song.musicName\r\n        }\r\n        var drag_icon = \"\"\r\n        if(props.reorder_mode){\r\n            drag_icon = \r\n            <IconContext.Provider value={{ color: \"#F06E9C\", size: '25px' }}>\r\n                <MdDragHandle/>\r\n            </IconContext.Provider>\r\n        }\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"border-bottom-accent\">\r\n                        <Col xs={1}>\r\n                            { drag_icon }\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            {/* {data.music[id].musicName} */}\r\n                            { title }\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            {/* {data.music[id].artist} */}\r\n                            { artist }\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            {/* {data.music[id].album} */}\r\n                            { album }\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                            {/* 0{data.music[id].length / 60}:{data.music[id].length % 60}0 */}\r\n                            { minutes }:{ seconds }\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                            <IconButton\r\n                                aria-label=\"play-song\"\r\n                                onClick={(e) => onPlayClick(e)}\r\n                            >\r\n                                <IconContext.Provider value={{ color: \"#F06E9C\", size: '30px' }}>\r\n                                    <MdPlayCircleOutline/>\r\n                                </IconContext.Provider>\r\n                            </IconButton>\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                        >\r\n                            <IconContext.Provider value={{ color: \"#F06E9C\", size: '30px' }}>\r\n                                <MdMoreHoriz/>\r\n                            </IconContext.Provider>\r\n                        </IconButton>\r\n                            <Menu\r\n                                id=\"menu\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                            >\r\n                                {options.map((option, index) => (\r\n                                <MenuItem\r\n                                    key={option}\r\n                                    onClick={(event) => handleMenuItemClick(event, index)}\r\n                                >\r\n                                    {option}\r\n                                </MenuItem>\r\n                                ))}\r\n                            </Menu>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                \r\n            </div>\r\n        );\r\n    }else{\r\n        return <div>error</div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { BsFillCaretDownFill, BsFillCaretUpFill } from \"react-icons/bs\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nclass SongTitleCard extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"border-bottom-accent\">\r\n                        <Col xs={1}>\r\n                            {/* Like */}\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <span>Title</span>\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            <span>Artist</span>\r\n                        </Col>\r\n                        <Col xs={3}>\r\n                            <span>Album</span>\r\n                        </Col>\r\n                        <Col xs={2}>\r\n                            <span>Time</span>\r\n                        </Col>\r\n                        <Col xs={1}>\r\n                            Options\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default SongTitleCard;\r\n","import React, { Component, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from '../../tempData/AbbeyRoad.jpg'\r\nimport default_image from '../../tempData/default_image.png'\r\nimport { MdPlayCircleOutline, MdMoreHoriz} from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\nimport Button from 'react-bootstrap/Button'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport UserAPI from \"../../apis/UserAPI\";\r\nimport SongCard from \"./SongCard.js\";\r\nimport SongTitleCard from './SongTitleCard';\r\nimport { TextField } from '@material-ui/core';\r\n\r\nexport default function SongDetailScreen(props){\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [music, setMusic] = React.useState(null);\r\n    const [total_length, setTotalLength] = React.useState(0);\r\n\r\n    const [modal_content, setModalContent] = React.useState(null);\r\n    const [musicListName, setMusicListName] = React.useState(\"\");\r\n    const [loadingFinished, setLoadingFinished] = React.useState(false);\r\n\r\n    var userId = localStorage.getItem('userId');\r\n    \r\n    const handleClick = (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const updateModalContentHandler = (content) => {\r\n        setModalContent(content);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const {target} = e;\r\n        setMusicListName(target.value);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            var songID = props.match.params.id;\r\n            const song_response = await UserAPI.get(\"/music/\"+songID);\r\n            if(song_response.data.status === \"success\"){ // search success\r\n                setMusic(song_response.data.music);\r\n                setTotalLength(song_response.data.music.length);\r\n            }else{\r\n                console.log(\"error searching song\");\r\n            }\r\n            setLoadingFinished(true);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const saveAsMusicListHandler = async (e, musicsIDs) => {\r\n        var name = document.getElementById('musicListName').value;  // get value of input field\r\n        if(name === \"\") return;\r\n        try{\r\n            const response = await UserAPI.post('/createMusicListWithMusics', {\r\n                musicListName: name,\r\n                musics: musicsIDs,\r\n                userId\r\n            });\r\n            if(response.data.status === \"success\"){  // add musicListId to user's musicLists\r\n                var musicListId = response.data.musicListId;\r\n                const addMusicListId_response = await UserAPI.post('/addMusicList', {\r\n                    musicListId,\r\n                    userId\r\n                });\r\n                if(addMusicListId_response.data.status === \"success\"){\r\n                    closeModal();\r\n                }\r\n            }\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n        \r\n    }\r\n\r\n    const openModal = (musicsIDs) => {\r\n        if(localStorage.getItem('isSignedIn')){\r\n            var modal = document.getElementById(\"main_modal\");\r\n            if(modal){\r\n                modal.style.display = \"block\";\r\n                var updateModalContentHandler = props.updateModalContentHandler;\r\n                var content = <div>\r\n                    <h2>Create New Playlist</h2>\r\n                    <div style={{\"padding\":\"5px\"}}>\r\n                        <TextField id=\"musicListName\" size=\"small\" placeholder=\"New List\" variant=\"outlined\" onChange={handleChange} />\r\n                    </div>\r\n                    <Button className=\"search-btn\" onClick={(e) => saveAsMusicListHandler(e, musicsIDs)}>Create</Button>\r\n                    <Button className=\"cancel-btn\" onClick={closeModal}>Cancel</Button>\r\n                    </div>\r\n                updateModalContentHandler(content);\r\n            }\r\n        }else{\r\n            alert(\"Please sign in first!\");\r\n        }\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        var modal = document.getElementById(\"main_modal\");\r\n        modal.style.display = \"none\";\r\n    }\r\n\r\n    const onSaveQueueClick = async () => {\r\n        // save the song as a playlist, send info to backend\r\n        \r\n        if(music){\r\n            openModal([music._id]);\r\n        }\r\n        \r\n    }\r\n\r\n    const onModalClose = () =>{\r\n        var modal = document.getElementById(\"modal\");\r\n        if(modal)\r\n            modal.style.display = \"none\";\r\n    }\r\n\r\n    const onSongCardClick = (index) => {\r\n        if(music){\r\n            var loadQueueIndexToAudioPlayer = props.loadQueueIndexToAudioPlayer;\r\n            var queue = localStorage.getItem('queue');\r\n            if(queue){\r\n                queue = JSON.parse(queue);\r\n            }else{\r\n                queue = [];\r\n            }\r\n\r\n            let found = false;\r\n            let index = queue.length-1;\r\n            for(let i = 0; i < queue.length; i++){\r\n                if(queue[i])\r\n                    if(queue[i]._id === music._id){\r\n                        found = true;\r\n                        index = i;\r\n                    }\r\n            }\r\n            if(!found){ // if the song is not in the queue\r\n                queue.push(music);\r\n                index = queue.length-1;\r\n            }else{  // same song already exists, play from that index\r\n\r\n            }\r\n            localStorage.setItem('queue', JSON.stringify(queue));\r\n            loadQueueIndexToAudioPlayer(index);\r\n        }\r\n    }\r\n\r\n    if(music !== null){      \r\n        var songcards = null;\r\n        songcards = <SongCard\r\n            updateModalContentHandler={updateModalContentHandler}\r\n            song={music}\r\n            onSongCardClick={onSongCardClick}\r\n        ></SongCard>\r\n        var hours = 0;\r\n        hours = Math.floor(total_length / 3600);\r\n        if(hours < 10) hours = \"0\"+hours;\r\n        var minutes = 0;\r\n        minutes = Math.floor(total_length / 60);\r\n        if(minutes < 10) minutes = \"0\"+minutes;\r\n        var seconds = 0;\r\n        seconds = Math.floor(total_length % 60);\r\n        if(seconds < 10) seconds = \"0\"+seconds;\r\n\r\n        return(\r\n            <div>\r\n                <Row>\r\n                    <img className=\"playlist-image\" src={default_image} width={175} height={175} alt=\"\">\r\n                    </img>\r\n                    <Col>\r\n                        <h1 style={{fontWeight: \"bold\"}} > {music.musicName} </h1>              \r\n                        <h4 style={{fontWeight: \"bold\"}} >{hours}h {minutes}m {seconds}s</h4>\r\n                        <Button className=\"search-btn\" onClick={onSaveQueueClick}>Save As Playlist</Button>\r\n                    </Col>\r\n                </Row>\r\n                \r\n                <SongTitleCard\r\n                ></SongTitleCard>\r\n                { songcards }\r\n\r\n                <div id=\"modal\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span onClick={onModalClose} className=\"close\">&times;</span>\r\n                        { modal_content }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    \r\n        );\r\n    }else{\r\n        if(!loadingFinished){\r\n            return(\r\n                <div>Loading...</div>\r\n            );\r\n        }else{\r\n            return(\r\n                <div>Can't find this song.</div>\r\n            );\r\n        }\r\n       \r\n    }\r\n    \r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport HomeScreen from './components/HomePage/HomeScreen';\r\nimport FriendScreen from './components/FriendPage/FriendScreen'\r\nimport ChatScreen from './components/FriendPage/ChatScreen';\r\nimport PlaylistsScreen from './components/PlaylistPage/PlaylistsScreen'\r\nimport NavigationBar from './components/NavigationBar.js'\r\nimport AudioPlayerBar from './components/AudioPlayerBar.js';\r\nimport CreateNewList from './components/PlaylistPage/CreateNewList.js'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n\r\nimport DisplayPlaylistScreen from './components/PlaylistPage/DisplayPlaylist';\r\nimport QueueScreen from './components/QueuePage/QueueScreen';\r\nimport LikedSongsScreen from './components/LikedSongsScreen';\r\nimport SearchScreen from './components/SearchPage/SearchScreen';\r\nimport ProfileScreen from './components/ProfileScreen';\r\n\r\nimport Popup from './components/Popup';\r\nimport SignInScreen from './components/SignInScreen';\r\nimport SignUpScreen from './components/SignUpScreen';\r\nimport ForgetPasswordScreen from './components/ForgetPasswordScreen';\r\nimport VerificationScreen from './components/VerificationScreen';\r\nimport ChangePasswordScreen from './components/ChangePasswordScreen';\r\nimport FriendRequestsScreen from './components/FriendPage/FriendRequestsScreen';\r\nimport EmailSentScreen from './components/EmailSentScreen';\r\nimport ErrorScreen from './components/ErrorScreen';\r\nimport Banner from './components/Banner'\r\nimport UserAPI from './apis/UserAPI';\r\n\r\nimport { MdMusicNote } from \"react-icons/md\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { IconContext } from \"react-icons\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport SongDetailScreen from './components/SongDetailPage/SongDetailScreen';\r\nimport { url } from './config'\r\n\r\nimport axios from 'axios'\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n                        signedUp: false,\r\n                        nickName: \"\",\r\n                        userId: \"\",\r\n                        musicListId: \"\",\r\n                        queue: [],\r\n                        modal_content: null,\r\n                        main_socket: null,\r\n                        online_users: [],\r\n                        now_playing: \"none\"\r\n                    };\r\n    }\r\n\r\n    updateNowPlaying = (songID) => {\r\n        this.setState({now_playing: songID})\r\n    }\r\n\r\n    onModalClose = () =>{\r\n        var modal = document.getElementById(\"main_modal\");\r\n        modal.style.display = \"none\";\r\n    }\r\n\r\n    connectToSocket = () => {\r\n        if(!this.state.main_socket){\r\n            var server_url = url.server;\r\n            const socket = io(server_url, {\r\n                withCredentials: true,\r\n                extraHeaders: {\r\n                    \"my-custom-header\": \"abcd\"\r\n                }\r\n            });\r\n            this.setState({main_socket: socket}, ()=>{\r\n                // console.log(this.state.main_socket);\r\n                // connected to server, push online status\r\n                if(this.state.main_socket){\r\n                    var id = localStorage.getItem('userId');\r\n                    this.state.main_socket.emit('online', {\r\n                        user_id: id\r\n                    });\r\n                    this.state.main_socket.on('online_users', async (data) => {\r\n                        // console.log('app online users is', data);\r\n                        this.setState({online_users: data});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    signedIn = async (name,id) =>{\r\n        console.log(\"signed in\");\r\n        console.log(id)\r\n        localStorage.setItem('isSignedIn', true);  // store to session\r\n        localStorage.setItem('userId', id);\r\n        localStorage.setItem('userNickName', name);\r\n        var queue = localStorage.getItem('queue');\r\n        if(!queue)\r\n            localStorage.setItem('queue', JSON.stringify([]));\r\n        // try{\r\n        //     const response = await UserAPI.get(\"/user/\"+localStorage.getItem('userId'));\r\n        //     if(response.data.status === \"success\"){ // search success\r\n        //         localStorage.setItem('user', response.data.user);\r\n        //     }\r\n        // }catch(err){\r\n        //     console.log(err);\r\n        // }\r\n        this.connectToSocket();\r\n        this.setState({signedUp: true,\r\n                        nickName: name,\r\n                        userId: id,\r\n                        queue:[]});\r\n    }\r\n\r\n    signedOut = () =>{\r\n        console.log(\"signed out\");\r\n        if(this.state.main_socket)\r\n            this.state.main_socket.close();\r\n        window.location.href = '/';\r\n        localStorage.removeItem('isSignedIn');  // remove from session\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('userNickName');\r\n        localStorage.removeItem('queue');\r\n        this.setState({signedUp: false,\r\n                        nickName: \"\",\r\n                        userId: \"\",\r\n                        queue:[]});\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.state.main_socket && localStorage.getItem('isSignedIn'))\r\n            this.connectToSocket();\r\n\r\n        axios.get('/ddd').then(res => {\r\n            console.log(\"asd\", res)\r\n        });\r\n        console.log(\"hi\")\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.state.main_socket)\r\n            this.state.main_socket.close();\r\n    }\r\n\r\n    updateModalContentHandler = (content) => {\r\n        this.setState({modal_content:content});\r\n    }\r\n\r\n    loadQueueSongsToAudioPlayer = (song) =>{\r\n        this.audioPlayer.loadSongAndplay(song, 0);\r\n    }\r\n\r\n    loadQueueIndexToAudioPlayer = (index) => {\r\n        this.audioPlayer.loadQueueIndexAndPlay(index);\r\n    }\r\n\r\n    onScrollButtonClick = () => {\r\n        window.scrollTo(0,document.body.scrollHeight);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"primary-bg\" style={{\"borderTop\":\"15px solid #F6D8FC\"}}>\r\n                <Container style={{'height':'100vh'}}>\r\n                    <Banner nickName={this.state.nickName}/>\r\n                    <Row>\r\n                        <Col xs={3}>\r\n                            <NavigationBar \r\n                            userId={this.state.userId}\r\n                            signedUp={this.state.signedUp}\r\n                            signedOut={this.signedOut}\r\n                            updateModalContentHandler={this.updateModalContentHandler}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={9} className=\"white-bg\" style={{'height':'90vh', 'overflow':'scroll', 'overflowX': 'hidden'}}>\r\n                            <Switch>\r\n                                <Route exact path='/' component={HomeScreen} />\r\n                                <Route path='/friends' render={(props) => <FriendScreen {...props} online_users={this.state.online_users} />} />\r\n                                <Route path='/chat/:id' component={ChatScreen} />\r\n                                <Route path='/profile/:id' render={(props) => <ProfileScreen {...props} now_playing={this.state.now_playing} updateModalContentHandler={this.updateModalContentHandler}/>} />\r\n                                {/* <Route path='/create' component={CreateNewList} /> */}\r\n                                <Route path='/playlists' render={(props) => <PlaylistsScreen updateModalContentHandler={this.updateModalContentHandler} userId={this.state.userId} {...props} isAuthed={true}/>} />\r\n                                <Route path='/playlist/:id' render={(props) => <DisplayPlaylistScreen updateMainModalContentHandler={this.updateModalContentHandler} loadQueueSongsToAudioPlayer={this.loadQueueSongsToAudioPlayer} userId={this.state.userId} {...props} isAuthed={true}/>} />\r\n                                <Route path='/queue' render={(props) => <QueueScreen loadQueueIndexToAudioPlayer={this.loadQueueIndexToAudioPlayer} updateModalContentHandler={this.updateModalContentHandler} queue={this.state.queue} userId={this.props.userId} {...props} isAuthed={true}/>}  />\r\n                                <Route path='/song/:id' render={(props) => <SongDetailScreen loadQueueIndexToAudioPlayer={this.loadQueueIndexToAudioPlayer} updateModalContentHandler={this.updateModalContentHandler} userId={this.props.userId} {...props} isAuthed={true}/>}  />\r\n                                {/* <Route path='/likedsongs' component={LikedSongsScreen} /> */}\r\n                                <Route path='/search' render={(props) => <SearchScreen loadQueueIndexToAudioPlayer={this.loadQueueIndexToAudioPlayer} userId={this.state.userId} {...props} isAuthed={true}/>}  />\r\n                                {/* <Route path='/popup' component={Popup} /> */}\r\n                                <Route path='/signin'  render={(props) => <SignInScreen signedIn={this.signedIn} {...props} isAuthed={true}/>} />\r\n                                <Route path='/signup' render={(props) => <SignUpScreen signedIn={this.signedIn} {...props} isAuthed={true}/>} />\r\n                                <Route path='/forgetpassword' component={ForgetPasswordScreen} />\r\n                                <Route path='/changepassword/:id' component={ChangePasswordScreen} />\r\n                                <Route path='/verification/:id' render={(props) => <VerificationScreen signedIn={this.signedIn} {...props} isAuthed={true}/>}/>\r\n                                {/* <Route path='/friendrequests' component={FriendRequestsScreen} /> */}\r\n                                <Route path='/emailsent' component={EmailSentScreen} />\r\n                                <Route path='/error' component={ErrorScreen} />\r\n                                {/* <Route path='/edit/:id' component={EditLogoScreen} />\r\n                                <Route path='/create' component={CreateLogoScreen} />\r\n                                <Route path='/view/:id' component={ViewLogoScreen} /> */}\r\n                            </Switch>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <div id=\"scroll-to-audio-right\">\r\n                    <IconButton\r\n                        style={{'backgroundColor':'#F06E9C'}}\r\n                        aria-label=\"scroll\"\r\n                        onClick={this.onScrollButtonClick}\r\n                    >\r\n                        <IconContext.Provider value={{ color: \"white\", size: '50px' }}>\r\n                            <MdMusicNote/>\r\n                        </IconContext.Provider>\r\n                    </IconButton>\r\n                </div>\r\n\r\n                {/* <div id=\"scroll-to-audio-left\">\r\n                    <IconButton\r\n                        style={{'backgroundColor':'#F06E9C'}}\r\n                        aria-label=\"scroll\"\r\n                        onClick={this.onScrollButtonClick}\r\n                    >\r\n                        <IconContext.Provider value={{ color: \"white\", size: '50px' }}>\r\n                            <MdMusicNote/>\r\n                        </IconContext.Provider>\r\n                    </IconButton>\r\n                </div> */}\r\n\r\n                <AudioPlayerBar onRef={ref => (this.audioPlayer = ref)} updateNowPlaying={this.updateNowPlaying} />\r\n                <div id=\"main_modal\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span onClick={this.onModalClose} className=\"close\">&times;</span>\r\n                        { this.state.modal_content }\r\n                    </div>\r\n                </div>\r\n                <div id=\"loading_toast\">Loading...</div>\r\n                <div id=\"no_song_toast\">This song doesn't have a preview. Playing our default song instead...</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './App.css';\r\nimport './toast.css';\r\n// THESE ARE OUR REACT SCREENS, WHICH WE WILL ROUTE HERE\r\n// import HomeScreen from './components/HomePage/HomeScreen';\r\n// import FriendScreen from './components/FriendPage/FriendScreen'\r\n// import ChatScreen from './components/FriendPage/ChatScreen';\r\n// import PlaylistsScreen from './components/PlaylistPage/PlaylistsScreen'\r\n// import NavigationBar from './components/NavigationBar.js'\r\n// import AudioPlayerBar from './components/AudioPlayerBar.js';\r\n// import CreateNewList from './components/PlaylistPage/CreateNewList.js'\r\n// import Container from 'react-bootstrap/Container';\r\n// import Row from 'react-bootstrap/Row'\r\n// import Col from 'react-bootstrap/Col'\r\n\r\n\r\n// import DisplayPlaylistScreen from './components/PlaylistPage/DisplayPlaylist';\r\n// import QueueScreen from './components/QueueScreen';\r\n// import LikedSongsScreen from './components/LikedSongsScreen';\r\n// import SearchScreen from './components/SearchScreen';\r\n// import ProfileScreen from './components/ProfileScreen';\r\n\r\n// import Popup from './components/Popup';\r\n// import SignInScreen from './components/SignInScreen';\r\n// import SignUpScreen from './components/SignUpScreen';\r\n// import ForgetPasswordScreen from './components/ForgetPasswordScreen';\r\n// import VerificationScreen from './components/VerificationScreen';\r\n// import ChangePasswordScreen from './components/ChangePasswordScreen';\r\n// import FriendRequestsScreen from './components/FriendPage/FriendRequestsScreen';\r\n// import EmailSentScreen from './components/EmailSentScreen';\r\n// import ErrorScreen from './components/ErrorScreen';\r\nimport App from './app';\r\nimport { url } from './config'\r\n\r\nconst client = new ApolloClient({ uri: url.server+'/graphql' });\r\n// console.log(url);\r\nReactDOM.render(\r\n    <ApolloProvider client={client}>\r\n        <Router>\r\n            <App/>\r\n            {/* <div className=\"primary-bg\" style={{\"borderTop\":\"15px solid #F6D8FC\"}}>\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={3}>\r\n                            <NavigationBar/>\r\n                        </Col>\r\n                        <Col xs={9} className=\"white-bg\">\r\n                            <Switch>\r\n                                <Route exact path='/' component={HomeScreen} />\r\n                                <Route path='/friends' component={FriendScreen} />\r\n                                <Route path='/chat/:id' component={ChatScreen} />\r\n                                <Route path='/profile/:id' component={ProfileScreen} />\r\n                                <Route path='/create' component={CreateNewList} />\r\n                                <Route path='/playlists' component={PlaylistsScreen} />\r\n                                <Route path='/playlist/:id' component={DisplayPlaylistScreen} />\r\n                                <Route path='/queue' component={QueueScreen} />\r\n                                <Route path='/likedsongs' component={LikedSongsScreen} />\r\n                                <Route path='/search' component={SearchScreen} />\r\n                                <Route path='/popup' component={Popup} />\r\n                                <Route path='/signin' component={SignInScreen} />\r\n                                <Route path='/signup' component={SignUpScreen} />\r\n                                <Route path='/forgetpassword' component={ForgetPasswordScreen} />\r\n                                <Route path='/changepassword' component={ChangePasswordScreen} />\r\n                                <Route path='/verification' component={VerificationScreen} />\r\n                                <Route path='/friendrequests' component={FriendRequestsScreen} />\r\n                                <Route path='/emailsent' component={EmailSentScreen} />\r\n                                <Route path='/error' component={ErrorScreen} />\r\n                                {/* <Route path='/edit/:id' component={EditLogoScreen} />\r\n                                <Route path='/create' component={CreateLogoScreen} />\r\n                                <Route path='/view/:id' component={ViewLogoScreen} /> */}\r\n                            {/* </Switch>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <AudioPlayerBar/>\r\n            </div> */}\r\n        </Router>\r\n    </ApolloProvider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://create-react-app.dev/docs/making-a-progressive-web-app/\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/default_image.0ca2cfb4.png\";","module.exports = {\r\n    url: {\r\n        client: process.env.NODE_ENV === 'production' ? 'https://mixtapez416.herokuapp.com' : 'http://localhost:3000',\r\n        server: process.env.NODE_ENV === 'production' ? 'https://mixtapez416.herokuapp.com' : 'http://localhost:3001'\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/AbbeyRoad.2328f774.jpg\";"],"sourceRoot":""}